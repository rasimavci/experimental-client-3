{"version":3,"sources":["webpack:///static/js/0.443de346fa084594d539.js","webpack:///./src/views/vcharts.vue","webpack:///./~/zrender/lib/core/util.js","webpack:///./~/echarts/lib/util/graphic.js","webpack:///./~/echarts/lib/util/model.js","webpack:///./~/zrender/lib/core/vector.js","webpack:///./~/echarts/lib/echarts.js","webpack:///./~/echarts/lib/util/number.js","webpack:///./~/zrender/lib/graphic/Path.js","webpack:///./~/echarts/lib/config.js","webpack:///./~/zrender/lib/core/env.js","webpack:///./~/echarts/lib/util/format.js","webpack:///./~/zrender/lib/core/BoundingRect.js","webpack:///./~/echarts/lib/model/Model.js","webpack:///./~/echarts/lib/util/clazz.js","webpack:///./~/echarts/lib/model/Component.js","webpack:///./~/echarts/lib/util/layout.js","webpack:///./~/echarts/lib/coord/axisHelper.js","webpack:///./~/zrender/lib/contain/text.js","webpack:///./~/zrender/lib/core/curve.js","webpack:///./~/zrender/lib/core/matrix.js","webpack:///./~/zrender/lib/core/event.js","webpack:///./~/zrender/lib/mixin/Eventful.js","webpack:///./~/zrender/lib/tool/color.js","webpack:///./~/echarts/lib/component/axisPointer/modelHelper.js","webpack:///./~/echarts/lib/scale/Scale.js","webpack:///./~/echarts/lib/util/symbol.js","webpack:///./~/zrender/lib/config.js","webpack:///./~/zrender/lib/container/Group.js","webpack:///./~/zrender/lib/core/PathProxy.js","webpack:///./~/echarts/lib/CoordinateSystem.js","webpack:///./~/echarts/lib/model/mixin/makeStyleMapper.js","webpack:///./~/echarts/lib/scale/Interval.js","webpack:///./~/echarts/lib/util/component.js","webpack:///./~/echarts/lib/util/throttle.js","webpack:///./~/zrender/lib/core/timsort.js","webpack:///./~/zrender/lib/graphic/Displayable.js","webpack:///./~/zrender/lib/graphic/Gradient.js","webpack:///./~/zrender/lib/graphic/helper/image.js","webpack:///./~/echarts/lib/chart/helper/Symbol.js","webpack:///./~/echarts/lib/chart/helper/createListFromArray.js","webpack:///./~/echarts/lib/component/axisPointer/findPointFromSeries.js","webpack:///./~/echarts/lib/component/axisPointer/globalListener.js","webpack:///./~/echarts/lib/component/axisPointer/viewHelper.js","webpack:///./~/echarts/lib/component/axis/AxisBuilder.js","webpack:///./~/echarts/lib/component/axis/AxisView.js","webpack:///./~/echarts/lib/component/axis/cartesianAxisHelper.js","webpack:///./~/echarts/lib/coord/Axis.js","webpack:///./~/echarts/lib/coord/axisModelCommonMixin.js","webpack:///./~/echarts/lib/coord/cartesian/AxisModel.js","webpack:///./~/echarts/lib/data/List.js","webpack:///./~/echarts/lib/data/helper/completeDimensions.js","webpack:///./~/echarts/lib/model/Series.js","webpack:///./~/echarts/lib/model/mixin/colorPalette.js","webpack:///./~/echarts/lib/scale/helper.js","webpack:///./~/echarts/lib/view/Chart.js","webpack:///./~/zrender/lib/Element.js","webpack:///./~/zrender/lib/animation/Animator.js","webpack:///./~/zrender/lib/animation/requestAnimationFrame.js","webpack:///./~/zrender/lib/contain/util.js","webpack:///./~/zrender/lib/contain/windingLine.js","webpack:///./~/zrender/lib/core/LRU.js","webpack:///./~/zrender/lib/core/bbox.js","webpack:///./~/zrender/lib/core/guid.js","webpack:///./~/zrender/lib/core/log.js","webpack:///./~/zrender/lib/graphic/Image.js","webpack:///./~/zrender/lib/graphic/Pattern.js","webpack:///./~/zrender/lib/graphic/Style.js","webpack:///./~/zrender/lib/graphic/helper/fixClipWithShadow.js","webpack:///./~/zrender/lib/graphic/helper/poly.js","webpack:///./~/zrender/lib/graphic/helper/roundRect.js","webpack:///./~/zrender/lib/graphic/helper/text.js","webpack:///./~/zrender/lib/mixin/Transformable.js","webpack:///./~/zrender/lib/zrender.js","webpack:///vcharts.vue","webpack:///./~/echarts/lib/ExtensionAPI.js","webpack:///./~/echarts/lib/chart/helper/SymbolDraw.js","webpack:///./~/echarts/lib/chart/helper/labelHelper.js","webpack:///./~/echarts/lib/chart/line.js","webpack:///./~/echarts/lib/chart/line/LineSeries.js","webpack:///./~/echarts/lib/chart/line/LineView.js","webpack:///./~/echarts/lib/chart/line/lineAnimationDiff.js","webpack:///./~/echarts/lib/chart/line/poly.js","webpack:///./~/echarts/lib/component/axis.js","webpack:///./~/echarts/lib/component/axisPointer.js","webpack:///./~/echarts/lib/component/axisPointer/AxisPointerModel.js","webpack:///./~/echarts/lib/component/axisPointer/AxisPointerView.js","webpack:///./~/echarts/lib/component/axisPointer/BaseAxisPointer.js","webpack:///./~/echarts/lib/component/axisPointer/CartesianAxisPointer.js","webpack:///./~/echarts/lib/component/axisPointer/axisTrigger.js","webpack:///./~/echarts/lib/component/axis/CartesianAxisView.js","webpack:///./~/echarts/lib/component/gridSimple.js","webpack:///./~/echarts/lib/component/helper/listComponent.js","webpack:///./~/echarts/lib/component/legend.js","webpack:///./~/echarts/lib/component/legend/LegendModel.js","webpack:///./~/echarts/lib/component/legend/LegendView.js","webpack:///./~/echarts/lib/component/legend/legendAction.js","webpack:///./~/echarts/lib/component/legend/legendFilter.js","webpack:///./~/echarts/lib/component/tooltip.js","webpack:///./~/echarts/lib/component/tooltip/TooltipContent.js","webpack:///./~/echarts/lib/component/tooltip/TooltipModel.js","webpack:///./~/echarts/lib/component/tooltip/TooltipView.js","webpack:///./~/echarts/lib/coord/axisDefault.js","webpack:///./~/echarts/lib/coord/axisModelCreator.js","webpack:///./~/echarts/lib/coord/cartesian/Axis2D.js","webpack:///./~/echarts/lib/coord/cartesian/Cartesian.js","webpack:///./~/echarts/lib/coord/cartesian/Cartesian2D.js","webpack:///./~/echarts/lib/coord/cartesian/Grid.js","webpack:///./~/echarts/lib/coord/cartesian/GridModel.js","webpack:///./~/echarts/lib/coord/geo/Region.js","webpack:///./~/echarts/lib/coord/geo/parseGeoJson.js","webpack:///./~/echarts/lib/data/DataDiffer.js","webpack:///./~/echarts/lib/export.js","webpack:///./~/echarts/lib/helper.js","webpack:///./~/echarts/lib/layout/points.js","webpack:///./~/echarts/lib/loading/default.js","webpack:///./~/echarts/lib/model/Global.js","webpack:///./~/echarts/lib/model/OptionManager.js","webpack:///./~/echarts/lib/model/globalDefault.js","webpack:///./~/echarts/lib/model/mixin/areaStyle.js","webpack:///./~/echarts/lib/model/mixin/boxLayout.js","webpack:///./~/echarts/lib/model/mixin/itemStyle.js","webpack:///./~/echarts/lib/model/mixin/lineStyle.js","webpack:///./~/echarts/lib/model/mixin/textStyle.js","webpack:///./~/echarts/lib/preprocessor/backwardCompat.js","webpack:///./~/echarts/lib/preprocessor/helper/compatStyle.js","webpack:///./~/echarts/lib/processor/dataSample.js","webpack:///./~/echarts/lib/scale/Log.js","webpack:///./~/echarts/lib/scale/Ordinal.js","webpack:///./~/echarts/lib/scale/Time.js","webpack:///./~/echarts/lib/view/Component.js","webpack:///./~/echarts/lib/visual/seriesColor.js","webpack:///./~/echarts/lib/visual/symbol.js","webpack:///./~/v-charts/lib/line.js","webpack:///./src/views/vcharts.vue?4a3d","webpack:///./~/zrender/lib/Handler.js","webpack:///./~/zrender/lib/Layer.js","webpack:///./~/zrender/lib/Painter.js","webpack:///./~/zrender/lib/Storage.js","webpack:///./~/zrender/lib/animation/Animation.js","webpack:///./~/zrender/lib/animation/Clip.js","webpack:///./~/zrender/lib/animation/easing.js","webpack:///./~/zrender/lib/contain/arc.js","webpack:///./~/zrender/lib/contain/cubic.js","webpack:///./~/zrender/lib/contain/line.js","webpack:///./~/zrender/lib/contain/path.js","webpack:///./~/zrender/lib/contain/polygon.js","webpack:///./~/zrender/lib/contain/quadratic.js","webpack:///./~/zrender/lib/core/GestureMgr.js","webpack:///./~/zrender/lib/dom/HandlerProxy.js","webpack:///./~/zrender/lib/graphic/CompoundPath.js","webpack:///./~/zrender/lib/graphic/LinearGradient.js","webpack:///./~/zrender/lib/graphic/RadialGradient.js","webpack:///./~/zrender/lib/graphic/Text.js","webpack:///./~/zrender/lib/graphic/helper/smoothBezier.js","webpack:///./~/zrender/lib/graphic/helper/smoothSpline.js","webpack:///./~/zrender/lib/graphic/mixin/RectText.js","webpack:///./~/zrender/lib/graphic/shape/Arc.js","webpack:///./~/zrender/lib/graphic/shape/BezierCurve.js","webpack:///./~/zrender/lib/graphic/shape/Circle.js","webpack:///./~/zrender/lib/graphic/shape/Line.js","webpack:///./~/zrender/lib/graphic/shape/Polygon.js","webpack:///./~/zrender/lib/graphic/shape/Polyline.js","webpack:///./~/zrender/lib/graphic/shape/Rect.js","webpack:///./~/zrender/lib/graphic/shape/Ring.js","webpack:///./~/zrender/lib/graphic/shape/Sector.js","webpack:///./~/zrender/lib/mixin/Animatable.js","webpack:///./~/zrender/lib/mixin/Draggable.js","webpack:///./~/zrender/lib/tool/path.js","webpack:///./~/zrender/lib/tool/transformPath.js"],"names":["webpackJsonp","Array","concat","module","exports","__webpack_require__","Component","$override","name","fn","methods","clone","source","result","typeStr","objToString","call","i","len","length","TYPED_ARRAY","Ctor","constructor","from","BUILTIN_OBJECT","isPrimitive","isDom","key","hasOwnProperty","merge","target","overwrite","isObject","targetProp","sourceProp","isArray","isBuiltInObject","mergeAll","targetAndSources","extend","defaults","overlay","getContext","_ctx","createCanvas","indexOf","array","value","inherits","clazz","baseClazz","F","clazzPrototype","prototype","prop","superClass","mixin","isArrayLike","data","each","obj","cb","context","forEach","nativeForEach","map","nativeMap","push","reduce","memo","nativeReduce","filter","nativeFilter","find","bind","func","args","nativeSlice","arguments","apply","curry","this","isFunction","isString","type","nodeType","ownerDocument","eqNaN","retrieve","values","retrieve2","value0","value1","retrieve3","value2","slice","Function","normalizeCssArray","val","assert","condition","message","Error","setAsPrimitive","primitiveKey","HashMap","set","createHashMap","noop","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","Object","toString","arrayProto","document","createElement","get","prefixedKey","removeKey","extendShape","opts","Path","extendPath","pathData","pathTool","extendFromString","makePath","rect","layout","path","createFromString","boundingRect","getBoundingRect","centerGraphic","resizePath","makeImage","imageUrl","Image","style","image","x","y","width","height","onload","img","setStyle","aspect","applyTransform","pathRect","m","calculateTransform","subPixelOptimizeLine","param","shape","lineWidth","round","x1","x2","subPixelOptimize","y1","y2","subPixelOptimizeRect","originX","originY","originWidth","originHeight","Math","max","position","positiveOrNegative","doubledPosition","hasFillOrStroke","fillOrStroke","liftColor","color","colorTool","lift","cacheElementStl","el","__hoverStlDirty","stroke","fill","hoverStyle","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","useHoverLayer","__zr","addHover","insideRollbackOpt","rollbackInsideStyle","extendFrom","applyInsideStyle","insideOriginalTextPosition","textFill","autoColor","dirty","z2","doSingleLeaveHover","normalStl","removeHover","doEnterHover","traverse","child","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","e","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","setHoverStyle","opt","hoverSilentOnTouch","on","setLabelStyle","emphasisStyle","normalModel","emphasisModel","normalSpecified","emphasisSpecified","EMPTY_OBJ","labelFetcher","labelDataIndex","labelDimIndex","showNormal","getShallow","showEmphasis","baseText","zrUtil","getFormattedLabel","defaultText","normalStyleText","emphasisStyleText","setTextStyle","text","textStyle","textStyleModel","specifiedTextStyle","isEmphasis","setTextStyleCommon","host","setText","labelModel","defaultColor","isRectText","textPosition","textOffset","labelRotate","PI","textRotation","textDistance","richResult","ecModel","globalTextStyle","option","richItemNames","getRichItemNames","richTextStyle","getModel","setTokenTextStyle","rich","forceRich","richItemNameMap","parentModel","isBlock","getAutoColor","textStroke","textBorderColor","textStrokeWidth","textBorderWidth","originalTextPosition","insideRollback","fontStyle","fontWeight","fontSize","fontFamily","textAlign","textVerticalAlign","textLineHeight","textWidth","textHeight","textTag","disableBox","textBackgroundColor","textPadding","textBorderRadius","textBoxShadowColor","textBoxShadowBlur","textBoxShadowOffsetX","textBoxShadowOffsetY","textShadowColor","textShadowBlur","textShadowOffsetX","textShadowOffsetY","useInsideStyle","getFont","gTextStyleModel","join","animateOrSetProps","isUpdate","props","animatableModel","dataIndex","isAnimationEnabled","postfix","duration","animationEasing","animationDelay","getAnimationDelayParams","animateTo","stopAnimation","attr","updateProps","initProps","getTransform","ancestor","mat","matrix","identity","mul","getLocalTransform","parent","transform","invert","Transformable","vector","transformDirection","direction","hBase","abs","vBase","vertex","groupTransition","g1","g2","getAnimatableProps","rotation","elMap1","g","elMap","isGroup","anid","oldEl","newProp","clipPointsByRect","points","point","mathMax","mathMin","clipRectByRect","targetRect","createIcon","iconStr","rectHover","strokeNoScale","replace","Group","Text","Circle","Sector","Ring","Polygon","Polyline","Rect","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","BoundingRect","min","mergePath","normalizeToArray","defaultEmphasis","subOpts","emphasisOpt","emphasis","normalOpt","normal","subOptName","getDataItemValue","dataItem","isDataItemOption","converDataValue","dimInfo","dimType","nubmerUtil","parseDate","NaN","createDataFormatModel","model","Model","dataFormatMixin","seriesIndex","mainType","subType","getData","mappingToExists","exists","newCptOptions","index","exist","cptOption","id","isIdInner","makeIdAndName","mapResult","idMap","item","existCpt","keyInfo","idNum","compressBatches","batchA","batchB","makeMap","sourceBatch","otherMap","seriesId","dataIndices","otherDataIndices","j","lenj","mapToArray","isData","mapA","mapB","queryDataIndex","payload","dataIndexInside","indexOfRawIndex","indexOfName","parseFinder","finder","defaultMainType","has","parsedKey","match","queryType","toLowerCase","includeMainTypes","queryParam","models","queryComponents","dataDimToCoordDim","dataDim","dimensions","getDimension","dimItem","getDimensionInfo","coordDim","coordDimToDataDim","dimName","coordDimIndex","otherDimToDataDim","otherDim","otherDims","dimIndex","formatUtil","TEXT_STYLE_OPTIONS","getDataParams","dataType","rawValue","getRawValue","rawDataIndex","getRawIndex","getName","itemOpt","getRawDataItem","getItemVisual","componentType","componentSubType","seriesType","seriesName","marker","getTooltipMarker","$vars","status","labelProp","itemModel","getItemModel","params","formatter","formatTpl","idx","formatTooltip","makeGetter","hostObj","create","out","ArrayCtor","copy","v","a","b","add","v1","v2","scaleAndAdd","sub","sqrt","lenSquare","div","dot","scale","s","normalize","d","distance","distanceSquare","negate","lerp","t","Float32Array","lengthSquare","dist","distSquare","createRegisterEventWithLowercaseName","method","eventName","handler","Eventful","MessageCenter","ECharts","dom","theme","prioritySortFunc","prio","themeStorage","group","_dom","zr","_zr","zrender","init","renderer","devicePixelRatio","_throttledZrFlush","throttle","flush","backwardCompat","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","CoordinateSystemManager","_api","createExtensionAPI","_messageCenter","_initEvents","resize","_pendingActions","timsort","visualFuncs","dataProcessorFuncs","animation","_onframe","doConvertPixel","methodName","_model","coordSysList","getCoordinateSystems","modelUtil","coordSys","updateDirectly","ecIns","callView","view","__alive","__model","query","eachComponent","__viewId","doDispatchAction","silent","payloadType","escapeConnect","actionWrap","actions","actionInfo","cptType","update","split","updateMethod","pop","parseClassType","IN_MAIN_PROCESS","payloads","batched","batch","eventObj","eventObjBatch","isHighDown","batchItem","action","event","main","OPTION_UPDATED","updateMethods","prepareAndUpdate","trigger","flushPendingActions","pendingActions","shift","triggerUpdatedEvent","invokeUpdateMethod","api","component","componentModel","updateZ","eachSeries","seriesModel","chart","updateProgressiveAndBlend","updateHoverLayerStatus","postUpdateFuncs","prepareView","isComponent","viewList","viewMap","viewId","classType","Clazz","ComponentView","getClass","ChartView","__id","__ecComponentInfo","componentIndex","remove","dispose","splice","processData","process","stackSeriesData","stackedDataMap","series","stack","previousStack","stackedOn","doLayout","visual","isLayout","doVisualEncoding","excludesLayout","clearColorPalette","doRender","componentView","render","chartView","storage","elCount","env","node","ignore","frameDrawNum","needProgressive","progressive","floor","blendMode","z","zlevel","ecInstance","coordSysMgr","ExtensionAPI","getComponentByElement","modelInfo","getComponent","enableConnect","updateConnectedChartsStatus","charts","STATUS_KEY","eventActionMap","actionType","eventType","connectedGroups","makeActionFromEvent","otherCharts","instances","otherChart","dispatchAction","existInstance","getInstanceByDom","idBase","setAttribute","DOM_ATTRIBUTE_KEY","connect","groupId","groupIdBase","disConnect","isDisposed","getAttribute","getInstanceById","registerTheme","registerPreprocessor","preprocessorFunc","optionPreprocessorFuncs","registerProcessor","priority","processorFunc","PRIORITY_PROCESSOR_FILTER","registerPostUpdate","postUpdateFunc","registerAction","ACTION_REG","test","registerCoordinateSystem","CoordinateSystem","register","getCoordinateSystemDimensions","coordSysCreator","getDimensionsInfo","registerLayout","layoutFunc","PRIORITY_VISUAL_LAYOUT","registerVisual","visualFunc","PRIORITY_VISUAL_CHART","registerLoading","loadingFx","loadingEffects","extendComponentModel","ComponentModel","extendComponentView","extendSeriesModel","SeriesModel","extendChartView","setCanvasCreator","creator","registerMap","mapName","geoJson","specialAreas","features","JSON","parse","mapDataStores","getMap","_config","__DEV__","GlobalModel","OptionManager","graphic","_throttle","seriesColor","loadingDefault","dependencies","PRIORITY","PROCESSOR","FILTER","STATISTIC","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","off","one","echartsProto","getDom","getZr","setOption","notMerge","lazyUpdate","optionManager","setTheme","console","log","getOption","getWidth","getHeight","getDevicePixelRatio","painter","dpr","window","getRenderedCanvas","canvasSupported","pixelRatio","backgroundColor","list","getDisplayList","getSvgDataUrl","svgSupported","pathToSvg","getDataURL","excludeComponents","excludesComponentViews","self","url","getType","toDataURL","getConnectedDataURL","left","Infinity","top","right","bottom","canvasList","canvas","getBoundingClientRect","targetCanvas","refreshImmediately","convertToPixel","convertFromPixel","containPixel","coordinateSystem","containPoint","getVisual","visualType","getViewOfComponentModel","getViewOfSeriesModel","restoreData","isSingleCanvas","configLayer","clearColor","colorArr","stringify","colorStops","background","updateView","clearAllVisual","updateVisual","updateLayout","optionChanged","resetOption","_loadingFX","showLoading","cfg","hideLoading","browser","weChat","MOUSE_EVENT_NAMES","eveName","dataModel","getSeriesByIndex","eventData","_disposed","clear","Date","disconnect","dataTool","version","___ec_export","_trim","str","linearMap","domain","range","clamp","subDomain","subRange","parsePercent","percent","all","parseFloat","precision","returnStr","toFixed","asc","arr","sort","getPrecision","isNaN","count","getPrecisionSafe","eIndex","dotIndex","getPixelPrecision","dataExtent","pixelExtent","LN10","dataQuantity","sizeQuantity","isFinite","getPercentWithPrecision","valueList","sum","acc","digits","pow","votesPerQuota","targetSeats","seats","votes","currentSum","remainder","Number","NEGATIVE_INFINITY","maxId","remRadian","radian","pi2","isRadianAroundZero","RADIAN_EPSILON","TIME_REG","exec","hour","toUpperCase","UTC","quantity","quantityExponent","nice","nf","exponent","exp10","f","reformIntervals","littleThan","lg","interval","close","curr","currClose","isNumeric","MAX_SAFE_INTEGER","Displayable","PathProxy","pathContain","Pattern","getCanvasPattern","pathProxyForDraw","__dirtyPath","strokeContainThreshold","brush","ctx","prevEl","hasStroke","hasFill","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","setTransform","__dirty","_fillGradient","getGradient","_strokeGradient","fillStyle","strokeStyle","lineDash","lineDashOffset","ctxLineDash","setLineDash","getGlobalScale","setScale","beginPath","setLineDashOffset","buildPath","rebuildPath","restoreTransform","drawRectText","shapeCfg","inBundle","createPathProxy","_rect","needsUpdateRect","rectWithStroke","_rectWithStroke","w","lineScale","getLineScale","contain","localPos","transformCoordToLocal","containStroke","dirtyPath","refresh","__clipTarget","animateShape","loop","animate","attrKV","setShape","Sub","defaultShape","thisShape","_default","global","dev","navigator","os","ua","firefox","ie","edge","SVGRect","touchEventsSupported","pointerEventsSupported","userAgent","addCommas","toCamelCase","upperCaseFirst","group1","charAt","encodeHTML","String","tpl","paramsList","encode","seriesLen","alias","TPL_VAR_ALIAS","wrapVar","seriesIdx","k","formatTplSimple","extraCssText","formatTime","isUTC","date","numberUtil","utc","M","h","s2d","capitalFirst","substr","textContain","varName","truncateText","getTextRect","vec2","v2ApplyTransform","union","other","lt","rb","lb","rt","maxX","maxY","sx","sy","translate","intersect","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","plain","doGet","pathArr","getParent","getParentMethod","clazzUtil","lineStyleMixin","areaStyleMixin","textStyleMixin","itemStyleMixin","mergeOption","ignoreParent","parsePath","thisParentModel","isEmpty","setReadOnly","properties","customizeGetParent","enableClassExtend","MEMBER_PRIFIX","hasOwn","ret","TYPE_DELIMITER","checkClassType","RootClass","mandatoryMethods","$constructor","proto","ExtendedClass","superCall","superApply","enableClassManagement","entity","options","makeContainer","container","IS_CONTAINER","registerClass","componentMainType","throwWhenNotFound","getClassesByMainType","o","hasClass","getAllClassMainTypes","types","hasSubTypes","registerWhenExtend","originalExtend","getDependencies","deps","arrayPush","componentUtil","boxLayoutMixin","defaultOption","dependentModels","uid","layoutMode","extraOpt","getUID","mergeDefaultAndTheme","inputPositionParams","getLayoutParams","themeModel","getTheme","getDefaultOption","mergeLayoutParam","optionUpdated","newCptOption","isInit","optList","Class","getReferringComponents","enableSubTypeDefaulter","enableTopologicalTravel","boxLayout","orient","gap","maxWidth","maxHeight","currentLineMaxSize","eachChild","nextX","nextY","nextChild","childAt","nextChildRect","moveX","newline","moveY","getAvailableSize","positionInfo","containerRect","margin","containerWidth","containerHeight","getLayoutRect","verticalMargin","horizontalMargin","positionElement","hv","boundingMode","needLocalTransform","elPos","dx","dy","sizeCalculable","hvIdx","HV_NAMES","targetOption","newOption","names","newParams","newValueCount","merged","mergedValueCount","hasProp","hasValue","ignoreSize","hResult","vResult","copyLayoutParams","LOCATION_PARAMS","_number","box","vbox","hbox","getScaleExtent","axisDataLen","boundaryGap","span","scaleType","getMin","getMax","fixMin","fixMax","originalExtent","getExtent","setBlank","getNeedCrossZero","niceScaleExtent","extent","splitNumber","base","setExtent","niceExtent","minInterval","maxInterval","setInterval","createScaleByModel","axisType","OrdinalScale","getCategories","IntervalScale","Scale","ifAxisCrossZero","axis","getAxisLabelInterval","tickCoords","labels","font","axisRotate","textSpaceTakenRect","autoLabelInterval","accumulatedLabelInterval","step","tickCoord","cos","sin","getFormattedLabels","labelFormatter","getTicksLabels","ticks","getTicks","tick","getAxisRawValue","getLabel","DEFAULT_FONT","textWidthCache","textLines","l","measureText","textWidthCacheCounter","TEXT_CACHE_MAX","truncate","getRichTextRect","getPlainTextRect","contentBlock","parsePlainText","outerWidth","outerHeight","adjustTextX","adjustTextY","lineHeight","parseRichText","adjustTextPositionOnRect","halfHeight","ellipsis","prepareTruncateOptions","truncateSingleLine","maxIterations","minChar","cnCharWidth","ascCharWidth","placeholder","contentWidth","ellipsisWidth","textLine","subLength","estimateLength","charCode","charCodeAt","getLineHeight","padding","lines","truncOuterHeight","truncOuterWidth","lastIndex","STYLE_REG","matchedIndex","pushTokens","substring","contentHeight","pendingList","stlPadding","truncateWidth","truncateHeight","line","tokens","token","tokenStyle","styleName","tokenHeight","tokenWidth","tokenWidthNotSpecified","percentWidth","bgImg","imageHelper","findExistImage","isImageReady","paddingW","remianTruncWidth","parseInt","block","isEmptyStr","strs","isLineHolder","tokensLen","makeFont","textFont","_util","isAroundZero","EPSILON","isNotAroundZero","cubicAt","p0","p1","p2","p3","onet","cubicDerivativeAt","cubicRootAt","roots","c","A","B","C","n","t1","disc","K","t2","discSqrt","mathSqrt","Y1","Y2","mathPow","ONE_THIRD","T","theta","acos","ASqrt","tmp","THREE_SQRT","t3","cubicExtrema","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","x0","y0","x3","y3","prev","next","d1","d2","_v0","_t","_v1","v2DistSquare","EPSILON_NUMERIC","_v2","quadraticAt","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","_vector","v2Create","m1","m2","out0","out1","out2","out3","out4","out5","rotate","rad","aa","ac","atx","ab","ad","aty","st","ct","vx","vy","det","clientToLocal","calculate","defaultGetZrXY","layerX","offsetX","zrX","zrY","layerY","offsetY","clientX","clientY","normalizeEvent","touch","targetTouches","changedTouches","zrDelta","wheelDelta","detail","button","which","undefined","MOUSE_EVENT_REG","addEventListener","isDomLevel2","attachEvent","removeEventListener","detachEvent","notLeftMouse","Dispatcher","stop","preventDefault","stopPropagation","cancelBubble","returnValue","arrySlice","_$handlers","_h","isSilent","newList","argLen","triggerWithContext","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseCssFloat","cssHueToRgb","lerpNumber","p","setRgba","r","copyRgba","putToCache","colorStr","rgbaArr","lastRemovedArr","colorCache","put","cached","kCSSColorTable","op","ep","fname","alpha","hsla2rgba","iv","hsla","rgba","rgba2hsla","H","S","R","G","vMin","vMax","delta","L","deltaR","deltaG","deltaB","level","toHex","fastLerp","normalizedValue","colors","leftIndex","rightIndex","ceil","leftColor","rightColor","dv","fullOutput","modifyHSL","modifyAlpha","arrColor","LRU","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","fastMapToColor","mapToColor","collect","axesInfo","seriesInvolved","coordSysAxesInfo","coordSysMap","collectAxesInfo","collectSeriesInfo","globalTooltipModel","globalAxisPointerModel","linksOption","linkGroups","saveTooltipAxisInfo","fromTooltip","triggerTooltip","axisPointerModel","axisPointerShow","isHandleTrigger","makeAxisPointerModel","baseTooltipModel","snap","makeKey","involveSeries","axisInfo","useHandle","seriesModels","axesInfoInCoordSys","groupIndex","getLinkGroupIndex","linkGroup","mapper","axisPointerEnabled","coordSysKey","coordSysModel","getAxes","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","tooltipAxisPointerModel","volatileOption","field","labelOption","label","show","crossStyle","lineStyle","seriesTooltipTrigger","seriesTooltipShow","getAxis","dim","seriesDataCount","axisModel","linkOption","checkPropInLink","linkPropValue","axisPropValue","fixValue","getAxisInfo","reverse","isBlank","getAxisPointerModel","setting","_setting","_extent","_interval","getSetting","unionExtent","unionExtentFromData","getDataExtent","start","end","thisExtent","_isBlank","symbolPathSetColor","innerColor","symbolStyle","symbolShape","symbolType","__isEmptyBrush","createSymbol","keepAspect","symbolPath","SymbolClz","setColor","Triangle","cx","cy","moveTo","lineTo","closePath","Diamond","Pin","angle","asin","tanX","tanY","cpLen","cpLen2","arc","bezierCurveTo","Arrow","symbolCtors","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","size","symbolBuildProxies","beforeBrush","proxySymbol","debugMode","Element","_children","__storage","children","childOfName","childCount","_doAdd","addBefore","nextSibling","addToStorage","addChildrenToStorage","delFromStorage","delChildrenFromStorage","removeAll","includeChildren","tmpRect","tmpMat","invisible","childRect","curve","bbox","CMD","Q","Z","min2","max2","mathCos","mathSin","mathAbs","hasTypedArray","notSaveData","_saveData","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","addData","exceedUnit","_needsDash","_dashedLineTo","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","startAngle","endAngle","anticlockwise","arcTo","radius","toStatic","lineDashSum","offset","setData","appendPath","appendSize","appendPathData","cmd","_expandData","_prevCmd","newData","dash","dashSum","nDash","bezierLen","tmpLen","MAX_VALUE","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","ux","uy","dTheta","psi","fs","scaleX","scaleY","isEllipse","_coordinateSystems","coordinateSystemCreators","coordinateSystems","creater","coordinateSystemCreator","excludes","includes","propName","helper","roundNumber","_intervalPrecision","getInterval","_niceExtent","getIntervalPrecision","intervalScaleGetTicks","niceTicks","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","expandSize","random","DELIMITER","subTypeDefaulters","registerSubTypeDefaulter","defaulter","determineSubType","componentTypeMain","dependencyGetter","makeDepndencyGraph","fullNameList","graph","noEntryList","thisItem","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","topologicalTravel","targetNameList","callback","removeEdge","succComponentType","removeEdgeAndAdd","targetNameSet","currComponentType","currVertex","isInTargetNameSet","_clazz","delay","debounce","lastExec","getTime","timer","scope","currCall","diff","debounceNextCall","lastCall","thisDelay","thisDebounce","clearTimeout","setTimeout","debounceDelay","createOrUpdate","fnAttr","rate","throttleType","originFn","ORIGIN_METHOD","lastThrottleType","THROTTLE_TYPE","RATE","minRunLength","DEFAULT_MIN_MERGE","makeAscendingRun","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","mid","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","pushRun","_runStart","_runLength","runStart","stackSize","runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","length2","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","minGallop","DEFAULT_MIN_GALLOPING","customCursor","customDest","remaining","ts","minRun","force","Style","__clipPaths","RectText","draggable","dragging","culling","cursor","afterBrush","rectContain","coord","animateStyle","useStyle","Gradient","addColorStop","newImageOrSrc","cachedImgObj","globalImageCache","createOrUpdateImage","hostEl","cbPayload","__zrImageSrc","pendingWrap","pending","imageOnLoad","__cachedImgObj","src","getSymbolSize","symbolSize","getScale","seriesScope","updateData","driftSymbol","drift","_symbol","_labelHelper","findLabelValueDim","symbolProto","_createSymbol","_symbolType","stopSymbolAnimation","toLastFrame","getSymbolPath","highlight","downplay","setZ","setDraggable","hostModel","_updateCommon","fadeIn","opacity","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","itemStyle","hoverItemStyle","symbolRotate","symbolOffset","hoverLabelModel","hoverAnimation","cursorStyle","hasItemOption","getItemStyle","elStyle","symbolInnerColor","useNameLabel","valueDim","onEmphasis","ratio","onNormal","fadeOut","keepLabel","firstDataNotNull","ifNeedCompleteOrdinalData","sampleItem","createListFromArray","coordSysName","creators","registeredCoordSys","completeDimOpt","encodeDef","dimsDef","completeDimensions","categoryIndex","List","nameList","createNameList","categories","dimValueGetter","categoryAxesModels","initData","isStackable","getDimTypeByAxis","categoryAxisModel","categoryDim","dataLen","cartesian2d","axesModels","xAxisModel","yAxisModel","xAxisType","yAxisType","stackable","isXAxisCateogry","isYAxisCategory","singleAxis","singleAxisModel","singleAxisType","isCategory","single","polar","polarModel","angleAxisModel","findAxisModel","radiusAxisModel","radiusAxisType","angleAxisType","isAngleAxisCateogry","isRadiusAxisCateogry","geo","getItemGraphicEl","getTooltipPosition","dataToPoint","getValues","records","initGlobalListeners","useHandler","dis","makeDispatchAction","record","dispatchTooltipFinally","pendings","initialized","doEnter","onLeave","actuallyPayload","showLen","showTip","hideLen","hideTip","currTrigger","unregister","buildElStyle","axisPointerType","styleModel","getLineStyle","getAreaStyle","buildLabelElOption","elOption","labelPos","getValueLabel","paddings","textRect","align","verticalAlign","confineInContainer","bgColor","getTextColor","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","viewWidth","viewHeight","seriesDataIndices","axisHelper","seriesData","idxItem","dataParams","getTransformedPosition","layoutInfo","dataToCoord","labelOffset","labelDirection","labelMargin","buildCartesianSingleLabelElOption","textLayout","AxisBuilder","innerTextLayout","makeLineShape","xDimIndex","makeRectShape","xy","wh","makeSectorShape","r0","clockwise","makeAxisEventDataBase","endTextLayout","textRotate","rotationDiff","inverse","onLeft","tooltipOpt","fixMinMaxLabelShow","labelEls","tickEls","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","current","labelLayout","firstRect","nextRect","mRotationBack","matrixUtil","isNameLocationCenter","nameLocation","buildAxisTick","axisBuilder","tickModel","lineStyleModel","tickLen","tickInterval","labelInterval","ticksCoords","getTicksCoords","pt1","pt2","_transform","ticksCnt","ifIgnoreOnTick","tickDirection","tickEl","buildAxisLabel","axisLabelShow","labelRotation","categoryData","triggerEvent","tickVal","itemLabelModel","textColor","pos","labelStr","textEl","targetType","_dumbGroup","updateTransform","decomposeTransform","nameDirection","dumbGroup","hasBuilder","builders","getGroup","axisLine","lineCap","arrows","arrowSize","symbolWidth","symbolHeight","symbol","axisTickLabel","axisName","gapSignal","nameRotation","axisNameAvailableWidth","truncateOpt","nameTruncateMaxWidth","truncatedText","formatterParams","__fullText","__truncatedText","tooltip","content","axisRotation","rawTick","updateAxisPointer","axisView","forceRender","AxisView","getAxisPointerClass","axisPointerClass","axisPointerModelHelper","_axisPointer","disposeAxisPointer","axisPointer","echarts","axisPointerClazz","registerAxisPointerClass","gridModel","grid","rawAxisPosition","axisPosition","onZero","axisDim","getRect","rectBound","axisOffset","posBound","otherAxis","onZeroAxisIndex","onZeroCoord","toGlobalCoord","dirMap","labelInside","getLabelInterval","fixExtentWithBands","nTick","normalizedExtent","Axis","onBand","_labelInterval","containData","coordToData","pointToData","alignWithLabel","bands","getBands","coords","getLabelsCoords","getBandWidth","axisExtent","isHorizontal","getRotate","origin","rangeStart","rangeEnd","getCoordSysModel","setRange","resetRange","getAxisType","axisModelCreator","axisModelCommonMixin","AxisModel","gridIndex","gridId","extraOption","transferProperties","TRANSFERABLE_PROPERTIES","__wrappedMethods","DefaultDataProvider","dataArray","_array","normalizeDimensions","cloneListForMapAndSample","original","excludeDimensions","allDimensions","_storage","originalStorage","dimStore","DataDiffer","globalObj","dataCtors","float","Float64Array","int","Int32Array","ordinal","number","time","pure","getItem","dimensionInfos","dimensionNames","dimensionName","dimensionInfo","_dimensionInfos","indices","_nameList","_idList","_optionModels","_visual","_layout","_itemVisuals","_itemLayouts","_graphicEls","_rawData","listProto","nameDimIdx","dimensionInfoMap","idList","nameRepeatCount","itemName","DataCtor","stackedValue","dimData","dimExtent","getSum","rawIndex","indicesOfNearest","maxDistance","nearestIndices","minDist","minDiff","rawIdx","getId","dims","dimSize","filterSelf","newIndices","keep","mapArray","tmpRetValue","retValue","downSample","dimension","sampleValue","sampleIndex","targetStorage","originalIndices","frameValues","frameIndices","frameSize","otherList","otherIdList","setVisual","setLayout","getLayout","getItemLayout","setItemLayout","clearItemLayouts","itemVisual","setItemVisual","setItemDataAndSeriesIndex","setItemGraphicEl","eachItemGraphicEl","cloneShallow","dimensionInfoList","wrapMethod","injectFunction","originalMethod","res","TRANSFERABLE_METHODS","CHANGABLE_METHODS","sysDims","applyDim","resultItem","OTHER_DIMS","coordDimNameMap","genName","fromZero","dataDimNameMap","dimCount","retrieveValue","sysDimItem","sysDimItemDimsDef","dimDefItem","userDimName","tooltipName","dataDims","resultDimIdx","availDimIdx","sysDimIndex","sysDimItemOtherDims","extra","extraPrefix","extraFromZero","isExtraCoord","guessOrdinal","_format","colorPaletteMixin","legendDataProvider","visualColorAccessPath","getInitialData","themeSubType","fillDataTextStyle","newSeriesOption","getLinkedData","getRawData","getBaseAxis","multipleSeries","formattedValue","setEachItem","dimIdx","valStr","vertially","tooltipDims","colorEl","animationEnabled","getColorFromPalette","getAxisTooltipData","colorIdx","colorNameMap","colorPalette","fixExtent","Chart","elSetState","state","toggleHighlight","dataIdx","chartProto","guid","Animatable","clipPath","beforeUpdate","afterUpdate","hide","setClipPath","addSelfToZr","removeClipPath","removeSelfFromZr","animators","addAnimator","removeAnimator","defaultGetter","defaultSetter","interpolateNumber","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","arraySlice","isArraySame","catmullRomInterpolateArray","catmullRomInterpolate","v0","cloneValue","rgba2String","getArrayDim","keyframes","lastValue","createTrackClip","animator","easing","oneTrackDone","forceAnimate","getter","_getter","setter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","_target","lastFrame","lastFramePercent","onframe","frame","clip","Clip","life","_loop","_delay","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","tracks","during","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","forwardToLast","clipList","removeClip","done","getClips","requestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","normalizeRadian","PI2","windingLine","dir","LinkedList","head","tail","linkedListProto","insert","entry","Entry","insertEntry","maxSize","_list","_map","_maxSize","_lastRemovedEntry","LRUProto","removed","leastUsedEntry","fromPoints","xDim","yDim","tx","ty","vec2Min","vec2Max","extremity","idStart","ZImage","_image","sWidth","sHeight","drawImage","repeat","createPattern","createLinearGradient","createRadialGradient","STYLE_COMMON_PROPS","transformText","textOrigin","blend","prevStyle","firstDraw","globalAlpha","globalCompositeOperation","otherStyle","newStyle","canvasGradient","styleProto","orignalBrush","modified","clipPaths","shadowTemp","smooth","controlPoints","smoothBezier","smoothConstraint","cp1","cp2","smoothSpline","r1","r2","r3","r4","total","normalizeTextStyle","normalizeStyle","VALID_TEXT_ALIGN","textBaseline","VALID_TEXT_VERTICAL_ALIGN","renderText","renderRichText","renderPlainText","setCtx","__textCotentBlock","boxPos","getBoxPosition","baseX","baseY","applyTextRotation","boxY","textX","textY","needDrawBg","needDrawBackground","boxX","drawBackground","getTextXForPadding","getStroke","getFill","strokeText","fillText","drawRichText","xLeft","lineTop","xRight","tokenCount","usedWidth","lineXLeft","lineXRight","placeToken","isPlainBg","roundRectHelper","onBgImageLoaded","blockHeiht","maxValue","lastIndexOf","needDrawText","center","middle","mIdentity","transformableProto","parentHasTransform","invTransform","tmpTransform","atan2","transformCoordToGlobal","ZRender","getInstance","registerPainter","painterCtors","delInstance","Handler","Storage","Painter","Animation","HandlerProxy","useVML","rendererType","vml","handerProxy","getViewportRoot","root","stage","_needsRefresh","oldDelFromStorage","oldAddToStorage","addRoot","delRoot","zLevel","config","_needsRefreshHover","refreshHoverImmediately","refreshHover","clearHover","clearAnimation","pathToImage","setCursorStyle","findHover","eventHandler","__webpack_exports__","defineProperty","__WEBPACK_IMPORTED_MODULE_0_v_charts_lib_line__","__WEBPACK_IMPORTED_MODULE_0_v_charts_lib_line___default","created","chartData","columns","rows","日期","销售量","components","VeLine","chartInstance","echartsAPIList","SymbolDraw","symbolCtor","_symbolCtor","symbolNeedsDraw","isIgnore","symbolDrawProto","oldData","_data","SymbolCtor","newIdx","symbolEl","oldIdx","execute","enableAnimation","labelDims","visualSymbol","layoutPoints","dataSample","legendHoverLink","clipOverflow","smoothMonotone","showSymbol","showAllSymbol","connectNulls","sampling","hoverLayerThreshold","isPointsSame","points1","points2","getSmooth","getAxisExtentWithGap","getGlobalExtent","halfBandWidth","sign","getStackedOnPoints","baseAxis","valueAxis","getOtherAxis","valueStart","baseDataOffset","stackedOnSameSign","stackedData","createGridClipShape","cartesian","hasAnimation","xExtent","yExtent","createPolarClipShape","angleAxis","getAngleAxis","radiusAxis","getRadiusAxis","radiusExtent","angleExtent","RADIAN","createClipShape","turnPointsIntoStep","stepTurnAt","baseIndex","stepPoints","nextPt","pt","stepPt","stepPt2","getVisualGradient","visualMetaList","visualMeta","stops","stopLen","outerColors","minCoord","maxCoord","coordSpan","unshift","gradient","lineAnimationDiff","_poly","lineGroup","symbolDraw","_symbolDraw","_lineGroup","areaStyleModel","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","polygon","_polygon","isAreaChart","stackedOnPoints","isSymbolIgnore","_getSymbolIgnoreFunc","__temp","_step","_newPolygon","_stackedOnPoints","_points","_updateAnimation","_newPolyline","visualColor","lineJoin","stackedOnSmooth","categoryAxis","getAxesByScale","isLabelIgnored","stackedOnCurrent","stackedOnNext","__points","updatedDataInfo","diffStatus","idx1","ptIdx","getStackedOnPoint","diffData","diffResult","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","diffItem","pointAdded","currentPt","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","isPointNull","drawSegment","segLen","allLen","smoothMin","smoothMax","prevIdx","v2Copy","cp0","nextIdx","nextP","ratioNextSeg","prevP","lenPrevSeg","lenNextSeg","getBoundingBox","ptMin","ptMax","fixClipWithShadow","stackedOnBBox","axisTrigger","link","AxisPointerModel","triggerOn","animationDurationUpdate","shadowStyle","borderColor","borderWidth","handle","icon","globalListener","AxisPointerView","BaseAxisPointer","animationModel","moveAnimation","propsEqual","lastProp","lastProps","newProps","equals","updateLabelShowHide","labelEl","getHandleTransProps","trans","updateMandatoryProps","eventTool","throttleUtil","_group","_lastGraphicKey","_handle","_dragging","_lastValue","_lastStatus","_payloadInfo","animationThreshold","_axisModel","_axisPointerModel","makeElOption","graphicKey","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","pointerOption","pointer","pointerEl","updateHandleTransform","handleModel","onmousemove","onmousedown","_onHandleDragMove","ondragend","_onHandleDragEnd","includeStyles","handleSize","_moveHandleToValue","getHandleTransform","_doDispatchAxisPointer","payloadInfo","cursorPoint","tooltipOption","axisIndex","doClear","buildLabel","getCartesian","getAxisDimIndex","viewHelper","cartesianAxisHelper","CartesianAxisPointer","otherExtent","pixelValue","pointerShapeBuilder","currPosition","cursorOtherValue","tooltipOptions","targetShape","shadow","bandWidth","illegalPoint","findPointFromSeries","isIllegalPoint","inputAxesInfo","shouldHide","outputFinder","showValueMap","dataByCoordSys","updaters","showPointer","showTooltip","coordSysContainsPoint","inputAxisInfo","findInputAxisInfo","processOnAxis","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","dontSnap","buildPayloadsBySeries","payloadBatch","snapToValue","seriesNestestValue","nestestValue","modelHelper","coordSysItem","coordSysId","coordSysIndex","coordSysType","coordSysMainType","dataByAxis","axisId","valueLabelOpt","outputAxesInfo","valItem","lastHighlights","newHighlights","toHighlight","toDownplay","axisBuilderAttrs","selfBuilderAttrs","CartesianAxisView","oldAxisGroup","_axisGroup","_splitLine","splitLineModel","lineColors","lineInterval","gridRect","lineCount","colorIndex","_splitArea","splitAreaModel","areaColors","prevX","prevY","areaInterval","areaStyle","xAxis","yAxis","boxLayoutParams","getBoxLayoutParams","viewportSize","layoutBox","makeBackground","legendFilter","LegendModel","selected","_updateData","legendData","hasSelected","isSelected","select","availableNames","getSeries","_availableNames","unSelect","toggleSelected","borderRadius","itemGap","itemWidth","itemHeight","inactiveColor","selectedMode","dispatchSelectAction","dispatchHighlightAction","dataName","dispatchDownplayAction","_listComponent","layoutUtil","newlineDisabled","_contentGroup","_backgroundEl","getContentGroup","legendModel","resetInner","itemAlign","renderInner","mainRect","layoutInner","layoutRect","contentGroup","legendDrawnMap","selectMode","getSeriesByName","legendSymbolType","itemGroup","_createItem","eachRawSeries","itemIcon","tooltipModel","legendGlobalTooltipModel","hitRect","legendIndex","__legendDataIndex","contentRect","legendSelectActionHandler","selectedMap","isToggleSelect","isItemSelected","legendModels","findComponents","filterSeries","assembleTransition","transitionText","vendors","vendorPrefix","assembleFont","cssText","assembleCssText","transitionDuration","zrColor","borderName","camelCase","TooltipContent","_x","_y","appendChild","_container","_show","_hideTimeout","onmouseenter","_enterable","_inContent","eventUtil","dispatch","onmouseleave","hideLater","_hideDelay","stl","currentStyle","defaultView","getComputedStyle","domStyle","display","innerHTML","setContent","setEnterable","enterable","getSize","clientWidth","clientHeight","viewportRootOffset","getViewportRootOffset","offsetLeft","offsetTop","isShow","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","animationEasingUpdate","buildTooltipModel","modelCascade","resultModel","refixTooltipPosition","gapH","gapV","getOuterSize","confineTooltipPosition","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","calcTooltipPosition","contentSize","domWidth","domHeight","rectWidth","rectHeight","isCenterAlign","axisPointerViewHelper","proxyRect","tooltipContent","_tooltipContent","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","_initGlobalListener","_keepShow","_tryShow","_hide","_lastX","_lastY","_refreshUpdateTimeout","manuallyShowTip","_ticket","_manuallyAxisShowTip","pointInfo","manuallyHideTip","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","axisValue","seriesDefaultHTML","valueLabel","axisValueLabel","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","html","cbTicket","vAlign","viewSize","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","lastIndices","lastIdxItem","newIdxItem","nameRotate","nameTruncate","nameTextStyle","nameGap","axisTick","inside","axisLabel","splitLine","splitArea","axisDefault","timeAxis","logAxis","logBase","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","AXIS_TYPES","Axis2D","coordExtent","toLocalCoord","dimAxisMapper","_axes","Cartesian","_dimList","addAxis","_dataCoordConvert","input","dimList","output","Cartesian2D","axisX","axisY","isAxisUsedInTheGrid","rotateTextRect","rotateRadians","boundingBox","beforeWidth","beforeHeight","afterWidth","afterHeight","getLabelUnionRect","axisLabelModel","labelCount","unrotatedSingleRect","singleRect","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","fixAxisOnZero","axesMap","otherAxisDim","axes","canNotOnZeroToAxis","updateAxisTransfrom","coordBase","axisExtentSum","findAxesModels","axesTypes","isCartesian2D","gridProto","_updateScale","ignoreContainLabel","adjustAxes","axesList","labelUnionRect","axesMapOnDim","xAxisIndex","yAxisIndex","coordList","getCartesians","_findConvertTarget","coordsList","createAxisCreator","axisPositionUsed","axesCount","grids","containLabel","Region","geometries","cp","polygonContain","MAX_NUMBER","exterior","loopGeo","interiors","transformTo","decode","json","UTF8Encoding","encodeScale","UTF8Scale","feature","geometry","coordinates","encodeOffsets","coordinate","decodePolygon","c2","featureObj","region","defaultKeyGetter","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetterName","dataDiffer","existence","_add","_update","_remove","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","format","ecHelper","_List","_Model","_Axis","_env","_parseGeoJson","parseGeoJson","ecUtil","util","createList","createScale","mixinAxisModelCommonMethods","_completeDimensions","eachSeriesByType","coordDims","maskColor","mask","labelRect","mergeTheme","themeItem","initBase","baseOption","OPTION_INNER_KEY","_seriesIndices","globalDefault","getComponentsByTypes","componentsMap","existComponent","createSeriesIndices","filterBySubType","cpt","colorPaletteMinin","_optionManager","mountOption","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","visitComponent","newCptOptionList","ComponentModelClass","newCptTypes","componentOption","cpts","isIdArray","isNameArray","queryCond","q","indexAttr","idAttr","nameAttr","queryResult","oneSeries","getSeriesByType","rawSeriesIndex","eachRawSeriesByType","isSeriesFiltered","getCurrentSeriesIndices","filteredSeries","componentTypes","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","rawOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","timeline","media","singleMedia","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","QUERY_REG","operator","realAttr","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","timelineModel","getCurrentIndex","platform","animationDuration","progressiveThreshold","useUTC","makeStyleMapper","getBorderLineDash","lineType","getLineDash","dotSize","dashSize","graphicUtil","PATH_COLOR","compatLayoutProperties","LAYOUT_PROPERTIES","isTheme","compatStyle","seriesOpt","clockWise","pointerColor","COMPATITABLE_SERIES","dataRange","visualMap","COMPATITABLE_COMPONENTS","componentName","compatItemStyle","itemStyleOpt","POSSIBLE_STYLES","normalItemStyleOpt","emphasisItemStyleOpt","compatTextStyle","labelOptSingle","compatLabelTextStyle","labelOpt","processSeries","upperLabel","edgeLabel","markPoint","markLine","markArea","mpData","mlData","toArr","toObj","axisOpt","parallel","parallelOpt","parallelAxisDefault","calendar","calendarOpt","radar","radarOpt","geoOpt","regions","regionObj","sampler","samplers","indexSampler","average","nearest","fixRoundingError","originalVal","roundingErrorFix","scaleProto","intervalScaleProto","mathFloor","mathCeil","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","__fixMax","approxTickNum","err","rank","scaleHelper","bisect","TimeScale","stepLvl","_stepLvl","ONE_HOUR","getFullYear","getMonth","getDate","approxInterval","scaleLevelsLen","scaleLevels","yearSpan","timezoneOffset","getTimezoneOffset","ONE_SECOND","ONE_MINUTE","ONE_DAY","componentProto","encodeColor","colorAccessPath","defaultSymbolType","legendSymbol","itemSymbolType","itemSymbolSize","factory","getLineXAxis","xAxisName","axisVisible","row","getLineSeries","axisSite","metrics","area","nullAddZero","labelMap","dataTemp","stackMap","getStackMap","seriesItem","getLineYAxis","yAxisName","digit","yAxisBase","_extends","getFormated","getLineTooltip","rightItems","rightList","items","_items$","title","showData","itemPoint","getLegend","legendName","numberFormat","symbolMap","formatTausends","num","defaultVal","keys","toKebab","assign","settings","_settings$axisSite","_settings$yAxisType","_settings$xAxisType","_settings$yAxisName","_settings$dimension","_settings$xAxisName","_settings$axisVisible","_settings$scale","_settings$min","_settings$max","_settings$nullAddZero","_settings$digit","_settings$legendName","_settings$labelMap","tooltipVisible","legendVisible","legend","Loading","_vm","$createElement","_c","_self","staticClass","attrs","viewBox","staticRenderFns","DataEmpty","_v","mixins","class","$options","_componentTag","canvasStyle","ref","loading","dataEmpty","$slots","default","beforeConfig","afterConfig","afterSetOption","afterSetOptionOnce","events","Boolean","legendPosition","dataZoom","toolbox","initOptions","themeName","judgeWidth","widthChangeDelay","watch","deep","dataHandler","chartLib","chartHandler","createEventProxy","computed","chartColor","_data$columns","_data$rows","then","optionsHandler","_this","marks","addMark","judgeWidthHandler","_once","_this2","$el","$nextTick","_","warn","echartsLib","$refs","addWatchToProps","_this3","watchedVariable","_watchers","watcher","expression","$props","$watch","_this4","ev","registeredEvents","_key","mounted","beforeDestroy","slot","to","makeEventPacket","eveType","targetInfo","topTarget","gestureEvent","pinchX","pinchY","pinchScale","EmptyProxy","isHover","displayable","SILENT","Draggable","handlerNames","proxy","painterRoot","_hovered","_lastTouchMoment","mousemove","lastHovered","lastHoveredTarget","hovered","hoveredTarget","setCursor","dispatchToElement","mouseout","innerDom","element","toElement","relatedTarget","parentNode","eventArgs","eventPacket","eachOtherLayer","layer","exclude","hoverCheckResult","_downEl","_downPoint","_upEl","returnFalse","createDom","newDom","newDomStyle","Layer","onselectstart","domBack","ctxBack","motionBlur","lastFrameAlpha","initContext","__currentValues","createBackBuffer","clearAll","haveMotionBLur","clearRect","clearColorGradientOrPattern","__canvasGradient","save","fillRect","restore","parseInt10","isLayerValid","__builtin__","preProcessLayer","__unusedCount","postProcessLayer","isDisplayableCulled","viewRect","isClipPathChanged","prevClipPaths","doClip","createRoot","domRoot","singleCanvas","nodeName","_opts","_singleCanvas","rootStyle","zlevelList","_zlevelList","layers","_layers","_layerConfig","_width","_height","mainLayer","_domRoot","_getSize","_progressiveLayers","_hoverlayer","_hoverElements","viewportRoot","paintAll","_paintList","_startProgessive","__hoverMir","elMirror","__from","hoverElements","hoverLayer","displayableSortFunc","getLayer","originalEl","_doPaintEl","_progressiveToken","_doPaintList","_furtherProgressive","_progress","_clearProgressive","_updateLayerStatus","eachBuiltinLayer","flushProgressiveLayer","currentLayer","currentZLevel","currentProgressiveLayer","layerProgress","progressiveLayerIdx","elZLevel","elFrame","__frame","MAX_PROGRESSIVE_LAYER_NUMBER","renderScope","__progress","__maxProgress","__nextIdxNotProg","forcePaint","prevClipLayer","prevElClipPaths","insertLayer","layersMap","prevLayer","virtual","prevDom","insertBefore","firstChild","eachLayer","getLayers","progressiveLayers","elCountsLastFrame","progressiveElCountsLastFrame","lastProgressiveKey","progressiveLayerCount","frameCount","elProgress","_clearLayer","layerConfig","delLayer","removeChild","clearLayer","findAndDrawOtherLayer","smaller","larger","intermediateLayer","renderToCanvas","imageLayer","displayList","whIdx","cwh","plt","prb","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","pathTransform","ImageShape","imgShape","shapeCompareFunc","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","_renderList","_event","_clips","_running","_time","_pausedTime","_pauseStart","clips","deferredEvents","deferredClips","_needsRemove","fire","_startLoop","_life","_initialized","onrestart","easingFuncs","globalTime","deltaTime","_startTime","easingFunc","schedule","restart","arg","linear","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","_l","_a","_b","isAroundEqual","swapExtrema","windingCubic","nRoots","y0_","y1_","nExtrema","unit","windingQuadratic","y_","x_","windingArc","containPath","isStroke","cubic","quadratic","_curve","pointPair","GestureMgr","_track","recognize","_doTrack","_recognize","touches","trackItem","recognizers","gestureInfo","pinch","track","pinchEnd","pinchPre","pinchCenter","eventNameFix","processGesture","gestureMgr","_gestureMgr","setTouchTimer","instance","_touching","_touchTimer","isPointerFromTouch","pointerType","initDomHandler","makeMouseHandler","touchHandlerNames","_handlers","domHandlers","pointerHandlerNames","mouseHandlerNames","HandlerDomProxy","mountHandlers","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","nm","touchstart","mousedown","touchmove","touchend","mouseup","click","handlerDomProxyProto","paths","_updatePathDirty","globalCoord","textHelper","isLoop","constraint","prevPoint","nextPoint","cps","v2Min","v2Max","v2Clone","v2Sub","v2Scale","d0","v2Distance","v2Add","interpolate","segs","w2","w3","unitX","unitY","someVectorAt","isTangent","cpx2","cpy2","cpx1","cpy1","pointAt","tangentAt","polyHelper","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","_dragStart","_drag","_dragEnd","draggingTarget","_draggingTarget","dropTarget","lastDropTarget","_dropTarget","processArc","fa","psiDeg","xp","yp","lambda","cxp","cyp","vAngle","u","vRatio","createPathProxyFromString","cs","cc","RegExp","prevCmd","cpx","cpy","ctlPtx","ctlPty","createPathOptions","pathProxy","transformPath","pathEls","pathList","pathEl","pathBundle","vMag","nPoint","mathAtan2"],"mappings":"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","file":"static/js/0.443de346fa084594d539.js","sourcesContent":["webpackJsonp([0],Array(203).concat([\n/* 203 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(30)(\n  /* script */\n  __webpack_require__(293),\n  /* template */\n  __webpack_require__(401),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 204 */\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    result = [];\n\n    for (var i = 0, len = source.length; i < len; i++) {\n      result[i] = clone(source[i]);\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    var Ctor = source.constructor;\n\n    if (source.constructor.from) {\n      result = Ctor.from(source);\n    } else {\n      result = new Ctor(source.length);\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  obj && each(obj, function (value, key) {\n    this.set(key, value);\n  }, this);\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nvar HASH_MAP_PREFIX = '_ec_';\nvar HASH_MAP_PREFIX_LENGTH = 4;\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this[HASH_MAP_PREFIX + key];\n  },\n  set: function (key, value) {\n    this[HASH_MAP_PREFIX + key] = value; // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n\n    return value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var prefixedKey in this) {\n      this.hasOwnProperty(prefixedKey) && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[HASH_MAP_PREFIX + key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.noop = noop;\n\n/***/ }),\n/* 205 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(204);\n\nvar pathTool = __webpack_require__(441);\n\nvar colorTool = __webpack_require__(225);\n\nvar matrix = __webpack_require__(222);\n\nvar vector = __webpack_require__(207);\n\nvar Path = __webpack_require__(210);\n\nvar Transformable = __webpack_require__(275);\n\nvar Image = __webpack_require__(268);\n\nexports.Image = Image;\n\nvar Group = __webpack_require__(230);\n\nexports.Group = Group;\n\nvar Text = __webpack_require__(426);\n\nexports.Text = Text;\n\nvar Circle = __webpack_require__(432);\n\nexports.Circle = Circle;\n\nvar Sector = __webpack_require__(438);\n\nexports.Sector = Sector;\n\nvar Ring = __webpack_require__(437);\n\nexports.Ring = Ring;\n\nvar Polygon = __webpack_require__(434);\n\nexports.Polygon = Polygon;\n\nvar Polyline = __webpack_require__(435);\n\nexports.Polyline = Polyline;\n\nvar Rect = __webpack_require__(436);\n\nexports.Rect = Rect;\n\nvar Line = __webpack_require__(433);\n\nexports.Line = Line;\n\nvar BezierCurve = __webpack_require__(431);\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = __webpack_require__(430);\n\nexports.Arc = Arc;\n\nvar CompoundPath = __webpack_require__(423);\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = __webpack_require__(424);\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = __webpack_require__(425);\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = __webpack_require__(214);\n\nexports.BoundingRect = BoundingRect;\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n  var boundingRect = path.getBoundingRect();\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, boundingRect);\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new Image({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke != 'none';\n}\n\nfunction liftColor(color) {\n  return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n}\n/**\n * @private\n */\n\n\nfunction cacheElementStl(el) {\n  if (el.__hoverStlDirty) {\n    var stroke = el.style.stroke;\n    var fill = el.style.fill; // Create hoverStyle on mouseover\n\n    var hoverStyle = el.__hoverStl;\n    hoverStyle.fill = hoverStyle.fill || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n    hoverStyle.stroke = hoverStyle.stroke || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n    var normalStyle = {};\n\n    for (var name in hoverStyle) {\n      // See comment in `doSingleEnterHover`.\n      if (hoverStyle[name] != null) {\n        normalStyle[name] = el.style[name];\n      }\n    }\n\n    el.__normalStl = normalStyle;\n    el.__hoverStlDirty = false;\n  }\n}\n/**\n * @private\n */\n\n\nfunction doSingleEnterHover(el) {\n  if (el.__isHover) {\n    return;\n  }\n\n  cacheElementStl(el);\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.addHover(el, el.__hoverStl);\n  } else {\n    var style = el.style;\n    var insideRollbackOpt = style.insideRollbackOpt; // Consider case: only `position: 'top'` is set on emphasis, then text\n    // color should be returned to `autoColor`, rather than remain '#fff'.\n    // So we should rollback then apply again after style merging.\n\n    insideRollbackOpt && rollbackInsideStyle(style); // styles can be:\n    // {\n    //     label: {\n    //         normal: {\n    //             show: false,\n    //             position: 'outside',\n    //             fontSize: 18\n    //         },\n    //         emphasis: {\n    //             show: true\n    //         }\n    //     }\n    // },\n    // where properties of `emphasis` may not appear in `normal`. We previously use\n    // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n    // But consider rich text and setOption in merge mode, it is impossible to cover\n    // all properties in merge. So we use merge mode when setting style here, where\n    // only properties that is not `null/undefined` can be set. The disadventage:\n    // null/undefined can not be used to remove style any more in `emphasis`.\n\n    style.extendFrom(el.__hoverStl); // Do not save `insideRollback`.\n\n    if (insideRollbackOpt) {\n      applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt); // textFill may be rollbacked to null.\n\n      if (style.textFill == null) {\n        style.textFill = insideRollbackOpt.autoColor;\n      }\n    }\n\n    el.dirty(false);\n    el.z2 += 1;\n  }\n\n  el.__isHover = true;\n}\n/**\n * @inner\n */\n\n\nfunction doSingleLeaveHover(el) {\n  if (!el.__isHover) {\n    return;\n  }\n\n  var normalStl = el.__normalStl;\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.removeHover(el);\n  } else {\n    // Consider null/undefined value, should use\n    // `setStyle` but not `extendFrom(stl, true)`.\n    normalStl && el.setStyle(normalStl);\n    el.z2 -= 1;\n  }\n\n  el.__isHover = false;\n}\n/**\n * @inner\n */\n\n\nfunction doEnterHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleEnterHover(child);\n    }\n  }) : doSingleEnterHover(el);\n}\n\nfunction doLeaveHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleLeaveHover(child);\n    }\n  }) : doSingleLeaveHover(el);\n}\n/**\n * @inner\n */\n\n\nfunction setElementHoverStl(el, hoverStl) {\n  // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n  // Often used when item group has a label element and it's hoverStyle is different\n  el.__hoverStl = el.hoverStyle || hoverStl || {};\n  el.__hoverStlDirty = true;\n\n  if (el.__isHover) {\n    cacheElementStl(el);\n  }\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doLeaveHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction enterEmphasis() {\n  this.__isEmphasis = true;\n  doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction leaveEmphasis() {\n  this.__isEmphasis = false;\n  doLeaveHover(this);\n}\n/**\n * Set hover style of element.\n * This method can be called repeatly without side-effects.\n * @param {module:zrender/Element} el\n * @param {Object} [hoverStyle]\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conviniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      setElementHoverStl(child, hoverStyle);\n    }\n  }) : setElementHoverStl(el, hoverStyle); // Duplicated function will be auto-ignored, see Eventful.js.\n\n  el.on('mouseover', onElementMouseOver).on('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n  el.on('emphasis', enterEmphasis).on('normal', leaveEmphasis);\n}\n/**\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {Object} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText = showNormal || showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex) : null, opt.defaultText) : null;\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             normal: {\n  //                 rich: {\n  //                     // no 'a' here but using parent 'a'.\n  //                 }\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             normal: {\n//                 rich: {\n//                     // no 'a' here but using parent 'a'.\n//                 }\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      // Always set `insideRollback`, for clearing previous.\n      var originalTextPosition = textStyle.textPosition;\n      textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt); // Save original textPosition, because style.textPosition will be repalced by\n      // real location (like [10, 30]) in zrender.\n\n      textStyle.insideOriginalTextPosition = originalTextPosition;\n      textStyle.insideRollbackOpt = opt;\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n\nfunction applyInsideStyle(textStyle, textPosition, opt) {\n  var useInsideStyle = opt.useInsideStyle;\n  var insideRollback;\n\n  if (textStyle.textFill == null && useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = opt.autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  }\n\n  return insideRollback;\n}\n\nfunction rollbackInsideStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return [// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' ');\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new Image(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setHoverStyle = setHoverStyle;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;\n\n/***/ }),\n/* 206 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(204);\n\nvar formatUtil = __webpack_require__(213);\n\nvar nubmerUtil = __webpack_require__(209);\n\nvar Model = __webpack_require__(215);\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *         normal: {\n *             show: false,\n *             position: 'outside',\n *             fontSize: 18\n *         },\n *         emphasis: {\n *             show: true\n *         }\n *     }\n * @param {Object} opt\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, subOpts) {\n  if (opt) {\n    var emphasisOpt = opt.emphasis = opt.emphasis || {};\n    var normalOpt = opt.normal = opt.normal || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!emphasisOpt.hasOwnProperty(subOptName) && normalOpt.hasOwnProperty(subOptName)) {\n        emphasisOpt[subOptName] = normalOpt[subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  // Performance sensitive.\n  return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    return value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +nubmerUtil.parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n}\n/**\n * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n * @param {module:echarts/data/List} data\n * @param {Object} opt\n * @param {string} [opt.seriesIndex]\n * @param {Object} [opt.name]\n * @param {Object} [opt.mainType]\n * @param {Object} [opt.subType]\n */\n\n\nfunction createDataFormatModel(data, opt) {\n  var model = new Model();\n  zrUtil.mixin(model, dataFormatMixin);\n  model.seriesIndex = opt.seriesIndex;\n  model.name = opt.name || '';\n  model.mainType = opt.mainType;\n  model.subType = opt.subType;\n\n  model.getData = function () {\n    return data;\n  };\n\n  return model;\n} // PENDING A little ugly\n\n\nvar dataFormatMixin = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex, true);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    return {\n      componentType: this.mainType,\n      componentSubType: this.subType,\n      seriesType: this.mainType === 'series' ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: this.id,\n      seriesName: this.name,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      marker: formatUtil.getTooltipMarker(color),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex]\n   * @param {string} [labelProp='label']\n   * @return {string}\n   */\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      return formatUtil.formatTpl(formatter, params);\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getRawValue: function (idx, dataType) {\n    var data = this.getData(dataType);\n    var dataItem = data.getRawDataItem(idx);\n\n    if (dataItem != null) {\n      return isObject(dataItem) && !(dataItem instanceof Array) ? dataItem.value : dataItem;\n    }\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: zrUtil.noop\n};\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name : '\\0-'; // name may be displayed on screen, so use '-'.\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var get = modelUitl.makeGetter();\n *\n * function some(hostObj) {\n *      get(hostObj)._someProperty = 1212;\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nvar makeGetter = function () {\n  var index = 0;\n  return function () {\n    var key = '\\0__ec_prop_getter_' + index++;\n    return function (hostObj) {\n      return hostObj[key] || (hostObj[key] = {});\n    };\n  };\n}();\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string|number} dataDim\n * @return {string}\n */\n\n\nfunction dataDimToCoordDim(data, dataDim) {\n  var dimensions = data.dimensions;\n  dataDim = data.getDimension(dataDim);\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimItem = data.getDimensionInfo(dimensions[i]);\n\n    if (dimItem.name === dataDim) {\n      return dimItem.coordDim;\n    }\n  }\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string} coordDim\n * @return {Array.<string>} data dimensions on the coordDim.\n */\n\n\nfunction coordDimToDataDim(data, coordDim) {\n  var dataDim = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n\n    if (dimItem.coordDim === coordDim) {\n      dataDim[dimItem.coordDimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string} otherDim Can be `otherDims`\n *                        like 'label' or 'tooltip'.\n * @return {Array.<string>} data dimensions on the otherDim.\n */\n\n\nfunction otherDimToDataDim(data, otherDim) {\n  var dataDim = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var otherDims = dimItem.otherDims;\n    var dimIndex = otherDims[otherDim];\n\n    if (dimIndex != null && dimIndex !== false) {\n      dataDim[dimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.converDataValue = converDataValue;\nexports.createDataFormatModel = createDataFormatModel;\nexports.dataFormatMixin = dataFormatMixin;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeGetter = makeGetter;\nexports.parseFinder = parseFinder;\nexports.dataDimToCoordDim = dataDimToCoordDim;\nexports.coordDimToDataDim = coordDimToDataDim;\nexports.otherDimToDataDim = otherDimToDataDim;\n\n/***/ }),\n/* 207 */\n/***/ (function(module, exports) {\n\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;\n\n/***/ }),\n/* 208 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(211);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = __webpack_require__(276);\n\nvar zrUtil = __webpack_require__(204);\n\nvar colorTool = __webpack_require__(225);\n\nvar env = __webpack_require__(212);\n\nvar timsort = __webpack_require__(237);\n\nvar Eventful = __webpack_require__(224);\n\nvar GlobalModel = __webpack_require__(356);\n\nvar ExtensionAPI = __webpack_require__(315);\n\nvar CoordinateSystemManager = __webpack_require__(232);\n\nvar OptionManager = __webpack_require__(357);\n\nvar backwardCompat = __webpack_require__(364);\n\nvar ComponentModel = __webpack_require__(217);\n\nvar SeriesModel = __webpack_require__(255);\n\nvar ComponentView = __webpack_require__(370);\n\nvar ChartView = __webpack_require__(258);\n\nvar graphic = __webpack_require__(205);\n\nvar modelUtil = __webpack_require__(206);\n\nvar _throttle = __webpack_require__(236);\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = __webpack_require__(371);\n\nvar loadingDefault = __webpack_require__(355);\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\nvar each = zrUtil.each;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '3.8.5';\nvar dependencies = {\n  zrender: '3.7.4'\n};\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  this._api = createExtensionAPI(this);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = []; // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.prio - b.prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  zr.animation.on('frame', this._onframe, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  // Lazy update\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    updateMethods.prepareAndUpdate.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (zrUtil.isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    updateMethods.prepareAndUpdate.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToSvg();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var coordSysMgr = this._coordSysMgr;\n    var zr = this._zr; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // Fixme First time update ?\n\n\n    ecModel.restoreData(); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(this._model, this._api);\n    processData.call(this, ecModel, api);\n    stackSeriesData.call(this, ecModel);\n    coordSysMgr.update(ecModel, api);\n    doVisualEncoding.call(this, ecModel, payload);\n    doRender.call(this, ecModel, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n    var painter = zr.painter; // TODO all use clearColor ?\n\n    if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n      zr.configLayer(0, {\n        clearColor: backgroundColor\n      });\n    } else {\n      // In IE8\n      if (!env.canvasSupported) {\n        var colorArr = colorTool.parse(backgroundColor);\n        backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n        if (colorArr[3] === 0) {\n          backgroundColor = 'transparent';\n        }\n      }\n\n      if (backgroundColor.colorStops || backgroundColor.image) {\n        // Gradient background\n        // FIXME Fixed layer？\n        zr.configLayer(0, {\n          clearColor: backgroundColor\n        });\n        this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n        this._dom.style.background = 'transparent';\n      } else {\n        if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n          zr.configLayer(0, {\n            clearColor: null\n          });\n        }\n\n        this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n        this._dom.style.background = backgroundColor;\n      }\n    }\n\n    each(postUpdateFuncs, function (func) {\n      func(ecModel, api);\n    }); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload, true);\n    invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    doLayout.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  prepareAndUpdate: function (payload) {\n    var ecModel = this._model;\n    prepareView.call(this, 'component', ecModel);\n    prepareView.call(this, 'chart', ecModel);\n    updateMethods.update.call(this, payload);\n  }\n};\n/**\n * @private\n */\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n  // If dispatchAction before setOption, do nothing.\n\n  ecModel && ecModel.eachComponent(condition, function (model, index) {\n    callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this[IN_MAIN_PROCESS] = true;\n\n  this._zr.resize(opts);\n\n  var optionChanged = this._model && this._model.resetOption('media');\n\n  var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n  updateMethods[updateMethod].call(this); // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n  this[IN_MAIN_PROCESS] = false;\n  var silent = opts && opts.silent;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (zrUtil.isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!zrUtil.isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      updateMethods.prepareAndUpdate.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * @param {string} methodName\n * @private\n */\n\nfunction invokeUpdateMethod(methodName, ecModel, payload) {\n  var api = this._api; // Update all components\n\n  each(this._componentsViews, function (component) {\n    var componentModel = component.__model;\n    component[methodName](componentModel, ecModel, api, payload);\n    updateZ(componentModel, component);\n  }, this); // Upate all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chart = this._chartsMap[seriesModel.__viewId];\n    chart[methodName](seriesModel, ecModel, api, payload);\n    updateZ(seriesModel, chart);\n    updateProgressiveAndBlend(seriesModel, chart);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Post render\n\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction prepareView(type, ecModel) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? this._componentsViews : this._chartsViews;\n  var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n  var zr = this._zr;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n    if (isComponent) {\n      if (componentType === 'series') {\n        return;\n      }\n    } else {\n      model = componentType;\n    } // Consider: id same and type changed.\n\n\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n\n      if (Clazz) {\n        view = new Clazz();\n        view.init(ecModel, this._api);\n        viewMap[viewId] = view;\n        viewList.push(view);\n        zr.add(view.group);\n      } else {\n        // Error\n        return;\n      }\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n  }, this);\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      zr.remove(view.group);\n      view.dispose(ecModel, this._api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n}\n/**\n * Processor data in each series\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction processData(ecModel, api) {\n  each(dataProcessorFuncs, function (process) {\n    process.func(ecModel, api);\n  });\n}\n/**\n * @private\n */\n\n\nfunction stackSeriesData(ecModel) {\n  var stackedDataMap = {};\n  ecModel.eachSeries(function (series) {\n    var stack = series.get('stack');\n    var data = series.getData();\n\n    if (stack && data.type === 'list') {\n      var previousStack = stackedDataMap[stack]; // Avoid conflict with Object.prototype\n\n      if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n        data.stackedOn = previousStack;\n      }\n\n      stackedDataMap[stack] = data;\n    }\n  });\n}\n/**\n * Layout before each chart render there series, special visual encoding stage\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction doLayout(ecModel, payload) {\n  var api = this._api;\n  each(visualFuncs, function (visual) {\n    if (visual.isLayout) {\n      visual.func(ecModel, api, payload);\n    }\n  });\n}\n/**\n * Encode visual infomation from data after data processing\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {object} layout\n * @param {boolean} [excludesLayout]\n * @private\n */\n\n\nfunction doVisualEncoding(ecModel, payload, excludesLayout) {\n  var api = this._api;\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n  each(visualFuncs, function (visual) {\n    (!excludesLayout || !visual.isLayout) && visual.func(ecModel, api, payload);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction doRender(ecModel, payload) {\n  var api = this._api; // Render all components\n\n  each(this._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  }, this);\n  each(this._chartsViews, function (chart) {\n    chart.__alive = false;\n  }, this); // Render all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chartView = this._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    chartView.render(seriesModel, ecModel, api, payload);\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateProgressiveAndBlend(seriesModel, chartView);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Remove groups of unrendered charts\n\n  each(this._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  }, this);\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateProgressiveAndBlend(seriesModel, chartView) {\n  // Progressive configuration\n  var elCount = 0;\n  chartView.group.traverse(function (el) {\n    if (el.type !== 'group' && !el.ignore) {\n      elCount++;\n    }\n  });\n  var frameDrawNum = +seriesModel.get('progressive');\n  var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n\n  if (needProgressive) {\n    chartView.group.traverse(function (el) {\n      // FIXME marker and other components\n      if (!el.isGroup) {\n        el.progressive = needProgressive ? Math.floor(elCount++ / frameDrawNum) : -1;\n\n        if (needProgressive) {\n          el.stopAnimation(true);\n        }\n      }\n    });\n  } // Blend configration\n\n\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      el.setStyle('blend', blendMode);\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nvar mapDataStores = {};\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  zrUtil.each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        zrUtil.each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n\n  if (dom.setAttribute) {\n    dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n  } else {\n    dom[DOM_ATTRIBUTE_KEY] = chart.id;\n  }\n\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    zrUtil.each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    zrUtil.each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  var key;\n\n  if (dom.getAttribute) {\n    key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n  } else {\n    key = dom[DOM_ATTRIBUTE_KEY];\n  }\n\n  return instances[key];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Function} processorFunc\n */\n\n\nfunction registerProcessor(priority, processorFunc) {\n  if (typeof priority === 'function') {\n    processorFunc = priority;\n    priority = PRIORITY_PROCESSOR_FILTER;\n  }\n\n  dataProcessorFuncs.push({\n    prio: priority,\n    func: processorFunc\n  });\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = zrUtil.isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutFunc\n */\n\n\nfunction registerLayout(priority, layoutFunc) {\n  if (typeof priority === 'function') {\n    layoutFunc = priority;\n    priority = PRIORITY_VISUAL_LAYOUT;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: layoutFunc,\n    isLayout: true\n  });\n}\n/**\n * @param {number} [priority=3000]\n * @param {Function} visualFunc\n */\n\n\nfunction registerVisual(priority, visualFunc) {\n  if (typeof priority === 'function') {\n    visualFunc = priority;\n    priority = PRIORITY_VISUAL_CHART;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: visualFunc\n  });\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  if (geoJson.geoJson && !geoJson.features) {\n    specialAreas = geoJson.specialAreas;\n    geoJson = geoJson.geoJson;\n  }\n\n  if (typeof geoJson === 'string') {\n    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n  }\n\n  mapDataStores[mapName] = {\n    geoJson: geoJson,\n    specialAreas: specialAreas\n  };\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  return mapDataStores[mapName];\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = __webpack_require__(352);\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();\n\n/***/ }),\n/* 209 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(204);\n\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nfunction quantityExponent(val) {\n  return Math.floor(Math.log(val) / Math.LN10);\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.nice = nice;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;\n\n/***/ }),\n/* 210 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(238);\n\nvar zrUtil = __webpack_require__(204);\n\nvar PathProxy = __webpack_require__(231);\n\nvar pathContain = __webpack_require__(418);\n\nvar Pattern = __webpack_require__(269);\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;\n\n/***/ }),\n/* 211 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(48)))\n\n/***/ }),\n/* 212 */\n/***/ (function(module, exports) {\n\n/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11)\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 213 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(204);\n\nvar textContain = __webpack_require__(220);\n\nvar numberUtil = __webpack_require__(209);\n\n/**\n * 每三位默认加,格式化\n * @param {string|number} x\n * @return {string}\n */\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\n\nfunction encodeHTML(source) {\n  return String(source).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    var val = wrapVar(alias, 0);\n    tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {string} color\n * @param {string} [extraCssText]\n * @return {string}\n */\n\n\nfunction getTooltipMarker(color, extraCssText) {\n  return color ? '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '';\n}\n/**\n * @param {string} str\n * @return {string}\n * @inner\n */\n\n\nvar s2d = function (str) {\n  return str < 10 ? '0' + str : str;\n};\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  tpl = tpl.replace('MM', s2d(M)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', s2d(d)).replace('d', d).replace('hh', s2d(h)).replace('h', h).replace('mm', s2d(m)).replace('m', m).replace('ss', s2d(s)).replace('s', s);\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\nvar getTextRect = textContain.getBoundingRect;\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextRect = getTextRect;\n\n/***/ }),\n/* 214 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(207);\n\nvar matrix = __webpack_require__(222);\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;\n\n/***/ }),\n/* 215 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(204);\n\nvar env = __webpack_require__(212);\n\nvar clazzUtil = __webpack_require__(216);\n\nvar lineStyleMixin = __webpack_require__(362);\n\nvar areaStyleMixin = __webpack_require__(359);\n\nvar textStyleMixin = __webpack_require__(363);\n\nvar itemStyleMixin = __webpack_require__(361);\n\n/**\n * @module echarts/model/Model\n */\nvar mixin = zrUtil.mixin;\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function (option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function (path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function (key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function () {\n    return this.option == null;\n  },\n  restoreData: function () {},\n  // Pending\n  clone: function () {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function (properties) {\n    clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function (path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function (getParentMethod) {\n    clazzUtil.set(this, 'getParent', getParentMethod);\n  },\n  isAnimationEnabled: function () {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = clazzUtil.get(model, 'getParent');\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nclazzUtil.enableClassExtend(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;\n\n/***/ }),\n/* 216 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(211);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(204);\n\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\nvar MEMBER_PRIFIX = '\\0ec_\\0';\n/**\n * Hide private class member.\n * The same behavior as `host[name] = value;` (can be right-value)\n * @public\n */\n\nfunction set(host, name, value) {\n  return host[MEMBER_PRIFIX + name] = value;\n}\n/**\n * Hide private class member.\n * The same behavior as `host[name];`\n * @public\n */\n\n\nfunction get(host, name) {\n  return host[MEMBER_PRIFIX + name];\n}\n/**\n * For hidden private class member.\n * The same behavior as `host.hasOwnProperty(name);`\n * @public\n */\n\n\nfunction hasOwn(host, name) {\n  return host.hasOwnProperty(MEMBER_PRIFIX + name);\n}\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function () {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.set = set;\nexports.get = get;\nexports.hasOwn = hasOwn;\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;\n\n/***/ }),\n/* 217 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(204);\n\nvar Model = __webpack_require__(215);\n\nvar componentUtil = __webpack_require__(235);\n\nvar clazzUtil = __webpack_require__(216);\n\nvar layout = __webpack_require__(218);\n\nvar boxLayoutMixin = __webpack_require__(360);\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar arrayPush = Array.prototype.push;\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('componentModel');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      clazzUtil.set(this, '__defaultOption', defaultOption);\n    }\n\n    return clazzUtil.get(this, '__defaultOption');\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n  }); // Ensure main type\n\n  return zrUtil.map(deps, function (type) {\n    return clazzUtil.parseClassType(type).main;\n  });\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 218 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(204);\n\nvar BoundingRect = __webpack_require__(214);\n\nvar _number = __webpack_require__(209);\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = __webpack_require__(213);\n\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransfrom),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;\n\n/***/ }),\n/* 219 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(211);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(204);\n\nvar textContain = __webpack_require__(220);\n\nvar OrdinalScale = __webpack_require__(368);\n\nvar IntervalScale = __webpack_require__(234);\n\nvar Scale = __webpack_require__(227);\n\nvar numberUtil = __webpack_require__(209);\n\n__webpack_require__(369);\n\n__webpack_require__(367);\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var fixMin = min != null;\n  var fixMax = max != null;\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = (model.get('data') || []).length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max)); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  }\n\n  return [min, max];\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extent = getScaleExtent(scale, model);\n  var fixMin = model.getMin() != null;\n  var fixMax = model.getMax() != null;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: fixMin,\n    fixMax: fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {Array.<number>} tickCoords In axis self coordinate.\n * @param {Array.<string>} labels\n * @param {string} font\n * @param {number} axisRotate 0: towards right horizontally, clock-wise is negative.\n * @param {number} [labelRotate=0] 0: towards right horizontally, clock-wise is negative.\n * @return {number}\n */\n\n\nfunction getAxisLabelInterval(tickCoords, labels, font, axisRotate, labelRotate) {\n  var textSpaceTakenRect;\n  var autoLabelInterval = 0;\n  var accumulatedLabelInterval = 0;\n  var rotation = (axisRotate - labelRotate) / 180 * Math.PI;\n  var step = 1;\n\n  if (labels.length > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.floor(labels.length / 40);\n  }\n\n  for (var i = 0; i < tickCoords.length; i += step) {\n    var tickCoord = tickCoords[i]; // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labels[i], font, 'center', 'top');\n    rect.x += tickCoord * Math.cos(rotation);\n    rect.y += tickCoord * Math.sin(rotation); // Magic number\n\n    rect.width *= 1.3;\n    rect.height *= 1.3;\n\n    if (!textSpaceTakenRect) {\n      textSpaceTakenRect = rect.clone();\n    } // There is no space for current label;\n    else if (textSpaceTakenRect.intersect(rect)) {\n        accumulatedLabelInterval++;\n        autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n      } else {\n        textSpaceTakenRect.union(rect); // Reset\n\n        accumulatedLabelInterval = 0;\n      }\n  }\n\n  if (autoLabelInterval === 0 && step > 1) {\n    return step;\n  }\n\n  return (autoLabelInterval + 1) * step - 1;\n}\n/**\n * @param {Object} axis\n * @param {Function} labelFormatter\n * @return {Array.<string>}\n */\n\n\nfunction getFormattedLabels(axis, labelFormatter) {\n  var scale = axis.scale;\n  var labels = scale.getTicksLabels();\n  var ticks = scale.getTicks();\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return zrUtil.map(labels, labelFormatter);\n  } else if (typeof labelFormatter === 'function') {\n    return zrUtil.map(ticks, function (tick, idx) {\n      return labelFormatter(getAxisRawValue(axis, tick), idx);\n    }, this);\n  } else {\n    return labels;\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.getAxisLabelInterval = getAxisLabelInterval;\nexports.getFormattedLabels = getFormattedLabels;\nexports.getAxisRawValue = getAxisRawValue;\n\n/***/ }),\n/* 220 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BoundingRect = __webpack_require__(214);\n\nvar imageHelper = __webpack_require__(240);\n\nvar _util = __webpack_require__(204);\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  return (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ') || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;\n\n/***/ }),\n/* 221 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(207);\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;\n\n/***/ }),\n/* 222 */\n/***/ (function(module, exports) {\n\n/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个单位矩阵\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\n\n/***/ }),\n/* 223 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Eventful = __webpack_require__(224);\n\nexports.Dispatcher = Eventful;\n\nvar env = __webpack_require__(212);\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;\n\n/***/ }),\n/* 224 */\n/***/ (function(module, exports) {\n\n/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;\n\n/***/ }),\n/* 225 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LRU = __webpack_require__(264);\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;\n\n/***/ }),\n/* 226 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(204);\n\nvar Model = __webpack_require__(215);\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    labelOption.show = true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;\n\n/***/ }),\n/* 227 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar clazzUtil = __webpack_require__(216);\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getDataExtent(dim, true));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * @return {Array.<string>}\n */\n\n\nScale.prototype.getTicksLabels = function () {\n  var labels = [];\n  var ticks = this.getTicks();\n\n  for (var i = 0; i < ticks.length; i++) {\n    labels.push(this.getLabel(ticks[i]));\n  }\n\n  return labels;\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;\n\n/***/ }),\n/* 228 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(204);\n\nvar graphic = __webpack_require__(205);\n\nvar BoundingRect = __webpack_require__(214);\n\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function (x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function (x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function (x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  beforeBrush: function () {\n    var style = this.style;\n    var shape = this.shape; // FIXME\n\n    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      style.textPosition = ['50%', '40%'];\n      style.textAlign = 'center';\n      style.textVerticalAlign = 'middle';\n    }\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n    var proxySymbol = symbolBuildProxies[symbolType];\n\n    if (shape.symbolType !== 'none') {\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;\n\n/***/ }),\n/* 229 */\n/***/ (function(module, exports) {\n\nvar dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;\n\n/***/ }),\n/* 230 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(204);\n\nvar Element = __webpack_require__(259);\n\nvar BoundingRect = __webpack_require__(214);\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;\n\n/***/ }),\n/* 231 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar curve = __webpack_require__(221);\n\nvar vec2 = __webpack_require__(207);\n\nvar bbox = __webpack_require__(265);\n\nvar BoundingRect = __webpack_require__(214);\n\nvar _config = __webpack_require__(229);\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;\n\n/***/ }),\n/* 232 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(204);\n\nvar coordinateSystemCreators = {};\n\nfunction CoordinateSystemManager() {\n  this._coordinateSystems = [];\n}\n\nCoordinateSystemManager.prototype = {\n  constructor: CoordinateSystemManager,\n  create: function (ecModel, api) {\n    var coordinateSystems = [];\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n      var list = creater.create(ecModel, api);\n      coordinateSystems = coordinateSystems.concat(list || []);\n    });\n    this._coordinateSystems = coordinateSystems;\n  },\n  update: function (ecModel, api) {\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\n      // FIXME MUST have\n      coordSys.update && coordSys.update(ecModel, api);\n    });\n  },\n  getCoordinateSystems: function () {\n    return this._coordinateSystems.slice();\n  }\n};\n\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n  coordinateSystemCreators[type] = coordinateSystemCreator;\n};\n\nCoordinateSystemManager.get = function (type) {\n  return coordinateSystemCreators[type];\n};\n\nvar _default = CoordinateSystemManager;\nmodule.exports = _default;\n\n/***/ }),\n/* 233 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(204);\n\n// TODO Parse shadow style\n// TODO Only shallow path support\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 234 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar numberUtil = __webpack_require__(209);\n\nvar formatUtil = __webpack_require__(213);\n\nvar Scale = __webpack_require__(227);\n\nvar helper = __webpack_require__(257);\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function (start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function () {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function (interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getTicksLabels: function () {\n    var labels = [];\n    var ticks = this.getTicks();\n\n    for (var i = 0; i < ticks.length; i++) {\n      labels.push(this.getLabel(ticks[i]));\n    }\n\n    return labels;\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function (data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;\n\n/***/ }),\n/* 235 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(204);\n\nvar _clazz = __webpack_require__(216);\n\nvar parseClassType = _clazz.parseClassType;\nvar base = 0;\nvar DELIMITER = '_';\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random()].join(DELIMITER);\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;\n\n/***/ }),\n/* 236 */\n/***/ (function(module, exports) {\n\nvar ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function () {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer);\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;\n\n/***/ }),\n/* 237 */\n/***/ (function(module, exports) {\n\n// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;\n\n/***/ }),\n/* 238 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(204);\n\nvar Style = __webpack_require__(270);\n\nvar Element = __webpack_require__(259);\n\nvar RectText = __webpack_require__(429);\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {number}\n   */\n  progressive: -1,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;\n\n/***/ }),\n/* 239 */\n/***/ (function(module, exports) {\n\n/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;\n\n/***/ }),\n/* 240 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LRU = __webpack_require__(264);\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;\n\n/***/ }),\n/* 241 */,\n/* 242 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(204);\n\nvar _symbol = __webpack_require__(228);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = __webpack_require__(205);\n\nvar _number = __webpack_require__(209);\n\nvar parsePercent = _number.parsePercent;\n\nvar _labelHelper = __webpack_require__(317);\n\nvar findLabelValueDim = _labelHelper.findLabelValueDim;\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nfunction getSymbolSize(data, idx) {\n  var symbolSize = data.getItemVisual(idx, 'symbolSize');\n  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n}\n\nfunction getScale(symbolSize) {\n  return [symbolSize[0] / 2, symbolSize[1] / 2];\n}\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/Symbol}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction SymbolClz(data, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.updateData(data, idx, seriesScope);\n}\n\nvar symbolProto = SymbolClz.prototype;\n\nfunction driftSymbol(dx, dy) {\n  this.parent.drift(dx, dy);\n}\n\nsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n  // Remove paths created before\n  this.removeAll();\n  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\n  //     symbolType, -0.5, -0.5, 1, 1, color\n  // );\n  // If width/height are set too small (e.g., set to 1) on ios10\n  // and macOS Sierra, a circle stroke become a rect, no matter what\n  // the scale is set. So we set width/height as 2. See #4150.\n\n  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color);\n  symbolPath.attr({\n    z2: 100,\n    culling: true,\n    scale: getScale(symbolSize)\n  }); // Rewrite drift method\n\n  symbolPath.drift = driftSymbol;\n  this._symbolType = symbolType;\n  this.add(symbolPath);\n};\n/**\n * Stop animation\n * @param {boolean} toLastFrame\n */\n\n\nsymbolProto.stopSymbolAnimation = function (toLastFrame) {\n  this.childAt(0).stopAnimation(toLastFrame);\n};\n/**\n * FIXME:\n * Caution: This method breaks the encapsulation of this module,\n * but it indeed brings convenience. So do not use the method\n * unless you detailedly know all the implements of `Symbol`,\n * especially animation.\n *\n * Get symbol path element.\n */\n\n\nsymbolProto.getSymbolPath = function () {\n  return this.childAt(0);\n};\n/**\n * Get scale(aka, current symbol size).\n * Including the change caused by animation\n */\n\n\nsymbolProto.getScale = function () {\n  return this.childAt(0).scale;\n};\n/**\n * Highlight symbol\n */\n\n\nsymbolProto.highlight = function () {\n  this.childAt(0).trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\nsymbolProto.downplay = function () {\n  this.childAt(0).trigger('normal');\n};\n/**\n * @param {number} zlevel\n * @param {number} z\n */\n\n\nsymbolProto.setZ = function (zlevel, z) {\n  var symbolPath = this.childAt(0);\n  symbolPath.zlevel = zlevel;\n  symbolPath.z = z;\n};\n\nsymbolProto.setDraggable = function (draggable) {\n  var symbolPath = this.childAt(0);\n  symbolPath.draggable = draggable;\n  symbolPath.cursor = draggable ? 'move' : 'pointer';\n};\n/**\n * Update symbol properties\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Object} [seriesScope]\n * @param {Object} [seriesScope.itemStyle]\n * @param {Object} [seriesScope.hoverItemStyle]\n * @param {Object} [seriesScope.symbolRotate]\n * @param {Object} [seriesScope.symbolOffset]\n * @param {module:echarts/model/Model} [seriesScope.labelModel]\n * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\n * @param {boolean} [seriesScope.hoverAnimation]\n * @param {Object} [seriesScope.cursorStyle]\n * @param {module:echarts/model/Model} [seriesScope.itemModel]\n * @param {string} [seriesScope.symbolInnerColor]\n * @param {Object} [seriesScope.fadeIn=false]\n */\n\n\nsymbolProto.updateData = function (data, idx, seriesScope) {\n  this.silent = false;\n  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n  var seriesModel = data.hostModel;\n  var symbolSize = getSymbolSize(data, idx);\n  var isInit = symbolType !== this._symbolType;\n\n  if (isInit) {\n    this._createSymbol(symbolType, data, idx, symbolSize);\n  } else {\n    var symbolPath = this.childAt(0);\n    symbolPath.silent = false;\n    graphic.updateProps(symbolPath, {\n      scale: getScale(symbolSize)\n    }, seriesModel, idx);\n  }\n\n  this._updateCommon(data, idx, symbolSize, seriesScope);\n\n  if (isInit) {\n    var symbolPath = this.childAt(0);\n    var fadeIn = seriesScope && seriesScope.fadeIn;\n    var target = {\n      scale: symbolPath.scale.slice()\n    };\n    fadeIn && (target.style = {\n      opacity: symbolPath.style.opacity\n    });\n    symbolPath.scale = [0, 0];\n    fadeIn && (symbolPath.style.opacity = 0);\n    graphic.initProps(symbolPath, target, seriesModel, idx);\n  }\n\n  this._seriesModel = seriesModel;\n}; // Update common properties\n\n\nvar normalStyleAccessPath = ['itemStyle', 'normal'];\nvar emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\nvar normalLabelAccessPath = ['label', 'normal'];\nvar emphasisLabelAccessPath = ['label', 'emphasis'];\n/**\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Array.<number>} symbolSize\n * @param {Object} [seriesScope]\n */\n\nsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n  var symbolPath = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var color = data.getItemVisual(idx, 'color'); // Reset style\n\n  if (symbolPath.type !== 'image') {\n    symbolPath.useStyle({\n      strokeNoScale: true\n    });\n  }\n\n  var itemStyle = seriesScope && seriesScope.itemStyle;\n  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n  var symbolRotate = seriesScope && seriesScope.symbolRotate;\n  var symbolOffset = seriesScope && seriesScope.symbolOffset;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n  var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n  if (!seriesScope || data.hasItemOption) {\n    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\n    // Because symbol provide setColor individually to set fill and stroke\n\n    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n    symbolRotate = itemModel.getShallow('symbolRotate');\n    symbolOffset = itemModel.getShallow('symbolOffset');\n    labelModel = itemModel.getModel(normalLabelAccessPath);\n    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n    hoverAnimation = itemModel.getShallow('hoverAnimation');\n    cursorStyle = itemModel.getShallow('cursor');\n  } else {\n    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n  }\n\n  var elStyle = symbolPath.style;\n  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n  if (symbolOffset) {\n    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\n  }\n\n  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\n\n  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\n  symbolPath.setStyle(itemStyle);\n  var opacity = data.getItemVisual(idx, 'opacity');\n\n  if (opacity != null) {\n    elStyle.opacity = opacity;\n  }\n\n  var useNameLabel = seriesScope && seriesScope.useNameLabel;\n  var valueDim = !useNameLabel && findLabelValueDim(data);\n\n  if (useNameLabel || valueDim != null) {\n    graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\n      labelFetcher: seriesModel,\n      labelDataIndex: idx,\n      defaultText: useNameLabel ? data.getName(idx) : data.get(valueDim, idx),\n      isRectText: true,\n      autoColor: color\n    });\n  }\n\n  symbolPath.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  symbolPath.hoverStyle = hoverItemStyle; // FIXME\n  // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n\n  graphic.setHoverStyle(symbolPath);\n  var scale = getScale(symbolSize);\n\n  if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n    var onEmphasis = function () {\n      var ratio = scale[1] / scale[0];\n      this.animateTo({\n        scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\n      }, 400, 'elasticOut');\n    };\n\n    var onNormal = function () {\n      this.animateTo({\n        scale: scale\n      }, 400, 'elasticOut');\n    };\n\n    symbolPath.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n};\n/**\n * @param {Function} cb\n * @param {Object} [opt]\n * @param {Object} [opt.keepLabel=true]\n */\n\n\nsymbolProto.fadeOut = function (cb, opt) {\n  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\n\n  this.silent = symbolPath.silent = true; // Not show text when animating\n\n  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\n  graphic.updateProps(symbolPath, {\n    style: {\n      opacity: 0\n    },\n    scale: [0, 0]\n  }, this._seriesModel, this.dataIndex, cb);\n};\n\nzrUtil.inherits(SymbolClz, graphic.Group);\nvar _default = SymbolClz;\nmodule.exports = _default;\n\n/***/ }),\n/* 243 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(211);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(204);\n\nvar List = __webpack_require__(253);\n\nvar completeDimensions = __webpack_require__(254);\n\nvar _model = __webpack_require__(206);\n\nvar getDataItemValue = _model.getDataItemValue;\nvar converDataValue = _model.converDataValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar CoordinateSystem = __webpack_require__(232);\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nfunction ifNeedCompleteOrdinalData(data) {\n  var sampleItem = firstDataNotNull(data);\n  return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n}\n/**\n * Helper function to create a list from option data\n */\n\n\nfunction createListFromArray(data, seriesModel, ecModel) {\n  // If data is undefined\n  data = data || [];\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var creator = creators[coordSysName];\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var completeDimOpt = {\n    encodeDef: seriesModel.get('encode'),\n    dimsDef: seriesModel.get('dimensions')\n  }; // FIXME\n\n  var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n  var dimensions = axesInfo && axesInfo.dimensions;\n\n  if (!dimensions) {\n    // Get dimensions from registered coordinate system\n    dimensions = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n  }\n\n  var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n  var list = new List(dimensions, seriesModel);\n  var nameList = createNameList(axesInfo, data);\n  var categories = {};\n  var dimValueGetter = categoryIndex >= 0 && ifNeedCompleteOrdinalData(data) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // If any dataItem is like { value: 10 }\n    if (isDataItemOption(itemOpt)) {\n      list.hasItemOption = true;\n    } // Use dataIndex as ordinal value in categoryAxis\n\n\n    return dimIndex === categoryIndex ? dataIndex : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n  } : function (itemOpt, dimName, dataIndex, dimIndex) {\n    var value = getDataItemValue(itemOpt);\n    var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]); // If any dataItem is like { value: 10 }\n\n    if (isDataItemOption(itemOpt)) {\n      list.hasItemOption = true;\n    }\n\n    var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n\n    if (categoryAxesModels && categoryAxesModels[dimName]) {\n      // If given value is a category string\n      if (typeof val === 'string') {\n        // Lazy get categories\n        categories[dimName] = categories[dimName] || categoryAxesModels[dimName].getCategories();\n        val = zrUtil.indexOf(categories[dimName], val);\n\n        if (val < 0 && !isNaN(val)) {\n          // In case some one write '1', '2' istead of 1, 2\n          val = +val;\n        }\n      }\n    }\n\n    return val;\n  };\n  list.hasItemOption = false;\n  list.initData(data, nameList, dimValueGetter);\n  return list;\n}\n\nfunction isStackable(axisType) {\n  return axisType !== 'category' && axisType !== 'time';\n}\n\nfunction getDimTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n/**\n * Creaters for each coord system.\n */\n\n\nvar creators = {\n  cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n    var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n      return ecModel.queryComponents({\n        mainType: name,\n        index: seriesModel.get(name + 'Index'),\n        id: seriesModel.get(name + 'Id')\n      })[0];\n    });\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var xAxisType = xAxisModel.get('type');\n    var yAxisType = yAxisModel.get('type');\n    var dimensions = [{\n      name: 'x',\n      type: getDimTypeByAxis(xAxisType),\n      stackable: isStackable(xAxisType)\n    }, {\n      name: 'y',\n      // If two category axes\n      type: getDimTypeByAxis(yAxisType),\n      stackable: isStackable(yAxisType)\n    }];\n    var isXAxisCateogry = xAxisType === 'category';\n    var isYAxisCategory = yAxisType === 'category';\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isXAxisCateogry) {\n      categoryAxesModels.x = xAxisModel;\n    }\n\n    if (isYAxisCategory) {\n      categoryAxesModels.y = yAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isXAxisCateogry ? 0 : isYAxisCategory ? 1 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: seriesModel.get('singleAxisIndex'),\n      id: seriesModel.get('singleAxisId')\n    })[0];\n    var singleAxisType = singleAxisModel.get('type');\n    var isCategory = singleAxisType === 'category';\n    var dimensions = [{\n      name: 'single',\n      type: getDimTypeByAxis(singleAxisType),\n      stackable: isStackable(singleAxisType)\n    }];\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isCategory) {\n      categoryAxesModels.single = singleAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isCategory ? 0 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  polar: function (data, seriesModel, ecModel, completeDimOpt) {\n    var polarModel = ecModel.queryComponents({\n      mainType: 'polar',\n      index: seriesModel.get('polarIndex'),\n      id: seriesModel.get('polarId')\n    })[0];\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var radiusAxisType = radiusAxisModel.get('type');\n    var angleAxisType = angleAxisModel.get('type');\n    var dimensions = [{\n      name: 'radius',\n      type: getDimTypeByAxis(radiusAxisType),\n      stackable: isStackable(radiusAxisType)\n    }, {\n      name: 'angle',\n      type: getDimTypeByAxis(angleAxisType),\n      stackable: isStackable(angleAxisType)\n    }];\n    var isAngleAxisCateogry = angleAxisType === 'category';\n    var isRadiusAxisCateogry = radiusAxisType === 'category';\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isRadiusAxisCateogry) {\n      categoryAxesModels.radius = radiusAxisModel;\n    }\n\n    if (isAngleAxisCateogry) {\n      categoryAxesModels.angle = angleAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isAngleAxisCateogry ? 1 : isRadiusAxisCateogry ? 0 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  geo: function (data, seriesModel, ecModel, completeDimOpt) {\n    // TODO Region\n    // 多个散点图系列在同一个地区的时候\n    return {\n      dimensions: completeDimensions([{\n        name: 'lng'\n      }, {\n        name: 'lat'\n      }], data, completeDimOpt)\n    };\n  }\n};\n\nfunction createNameList(result, data) {\n  var nameList = [];\n  var categoryDim = result && result.dimensions[result.categoryIndex];\n  var categoryAxisModel;\n\n  if (categoryDim) {\n    categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n  }\n\n  if (categoryAxisModel) {\n    // FIXME Two category axis\n    var categories = categoryAxisModel.getCategories();\n\n    if (categories) {\n      var dataLen = data.length; // Ordered data is given explicitly like\n      // [[3, 0.2], [1, 0.3], [2, 0.15]]\n      // or given scatter data,\n      // pick the category\n\n      if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n        nameList = [];\n\n        for (var i = 0; i < dataLen; i++) {\n          nameList[i] = categories[data[i][result.categoryIndex || 0]];\n        }\n      } else {\n        nameList = categories.slice(0);\n      }\n    }\n  }\n\n  return nameList;\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;\n\n/***/ }),\n/* 244 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(204);\n\nvar modelUtil = __webpack_require__(206);\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return seriesModel.coordDimToDataDim(dim)[0];\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 245 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(204);\n\nvar env = __webpack_require__(212);\n\nvar modelUtil = __webpack_require__(206);\n\nvar get = modelUtil.makeGetter();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  get(zr).records || (get(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = get(zr).records[key] || (get(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (get(zr).initialized) {\n    return;\n  }\n\n  get(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(get(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (get(zr).records || {})[key];\n\n  if (record) {\n    get(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;\n\n/***/ }),\n/* 246 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(204);\n\nvar graphic = __webpack_require__(205);\n\nvar textContain = __webpack_require__(220);\n\nvar formatUtil = __webpack_require__(213);\n\nvar matrix = __webpack_require__(222);\n\nvar axisHelper = __webpack_require__(219);\n\nvar AxisBuilder = __webpack_require__(247);\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;\n\n/***/ }),\n/* 247 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(204);\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = __webpack_require__(213);\n\nvar graphic = __webpack_require__(205);\n\nvar Model = __webpack_require__(215);\n\nvar _number = __webpack_require__(209);\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = __webpack_require__(228);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = __webpack_require__(222);\n\nvar _vector = __webpack_require__(207);\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.labelInterval] Default label interval when label\n *                                     interval from model is null or 'auto'.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([[opt.rotation + Math.PI / 2, pt1], [opt.rotation - Math.PI / 2, pt2]], function (item, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true);\n          symbol.attr({\n            rotation: item[0],\n            position: item[1],\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n/**\n * @static\n */\n\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval, ticksCnt, showMinLabel, showMaxLabel) {\n  if (i === 0 && showMinLabel || i === ticksCnt - 1 && showMaxLabel) {\n    return false;\n  } // FIXME\n  // Have not consider label overlap (if label is too long) yet.\n\n\n  var rawTick;\n  var scale = axis.scale;\n  return scale.type === 'ordinal' && (typeof interval === 'function' ? (rawTick = scale.getTicks()[i], !interval(rawTick, scale.getLabel(rawTick))) : i % (interval + 1));\n};\n/**\n * @static\n */\n\n\nvar getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n  var interval = model.get('interval');\n\n  if (interval == null || interval == 'auto') {\n    interval = labelInterval;\n  }\n\n  return interval;\n};\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var tickInterval = getInterval(tickModel, opt.labelInterval);\n  var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel')); // FIXME\n  // Corresponds to ticksCoords ?\n\n  var ticks = axis.scale.getTicks();\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n  var ticksCnt = ticksCoords.length;\n\n  for (var i = 0; i < ticksCnt; i++) {\n    // Only ordinal scale support tick interval\n    if (ifIgnoreOnTick(axis, i, tickInterval, ticksCnt, showMinLabel, showMaxLabel)) {\n      continue;\n    }\n\n    var tickCoord = ticksCoords[i];\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticks[i],\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var ticks = axis.scale.getTicks();\n  var labels = axisModel.getFormattedLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var categoryData = axisModel.get('data');\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  each(ticks, function (tickVal, index) {\n    if (ifIgnoreOnTick(axis, index, opt.labelInterval, ticks.length, showMinLabel, showMaxLabel)) {\n      return;\n    }\n\n    var itemLabelModel = labelModel;\n\n    if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n      itemLabelModel = new Model(categoryData[tickVal].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickVal);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var labelStr = axis.scale.getLabel(tickVal);\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickVal,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: labels[index],\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always returns labelStr.\n      // But in interval scale labelStr is like '223,445', which maked\n      // user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = labelStr;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;\n\n/***/ }),\n/* 248 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(211);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(208);\n\nvar axisPointerModelHelper = __webpack_require__(226);\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;\n\n/***/ }),\n/* 249 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(204);\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var rawAxisPosition = axis.position;\n  var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (axis.onZero) {\n    var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n    var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // label interval when auto mode.\n\n  layout.labelInterval = axis.getLabelInterval(); // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;\n\n/***/ }),\n/* 250 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(204);\n\nvar numberUtil = __webpack_require__(209);\n\nvar axisHelper = __webpack_require__(219);\n\nvar linearMap = numberUtil.linearMap;\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n}\n\nvar normalizedExtent = [0, 1];\n/**\n * @name module:echarts/coord/CartesianAxis\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._labelInterval;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return numberUtil.getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has a ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, normalizedExtent, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has a ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, normalizedExtent, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicksCoords: function (alignWithLabel) {\n    if (this.onBand && !alignWithLabel) {\n      var bands = this.getBands();\n      var coords = [];\n\n      for (var i = 0; i < bands.length; i++) {\n        coords.push(bands[i][0]);\n      }\n\n      if (bands[i - 1]) {\n        coords.push(bands[i - 1][1]);\n      }\n\n      return coords;\n    } else {\n      return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n    }\n  },\n\n  /**\n   * Coords of labels are on the ticks or on the middle of bands\n   * @return {Array.<number>}\n   */\n  getLabelsCoords: function () {\n    return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n  },\n\n  /**\n   * Get bands.\n   *\n   * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n   * |---1---|---2---|---3---|---4---|.\n   *\n   * @return {Array}\n   */\n  // FIXME Situation when labels is on ticks\n  getBands: function () {\n    var extent = this.getExtent();\n    var bands = [];\n    var len = this.scale.count();\n    var start = extent[0];\n    var end = extent[1];\n    var span = end - start;\n\n    for (var i = 0; i < len; i++) {\n      bands.push([span * i / len + start, span * (i + 1) / len + start]);\n    }\n\n    return bands;\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Get interval of the axis label.\n   * To get precise result, at least one of `getRotate` and `isHorizontal`\n   * should be implemented.\n   * @return {number}\n   */\n  getLabelInterval: function () {\n    var labelInterval = this._labelInterval;\n\n    if (!labelInterval) {\n      var axisModel = this.model;\n      var labelModel = axisModel.getModel('axisLabel');\n      labelInterval = labelModel.get('interval');\n\n      if (this.type === 'category' && (labelInterval == null || labelInterval === 'auto')) {\n        labelInterval = axisHelper.getAxisLabelInterval(zrUtil.map(this.scale.getTicks(), this.dataToCoord, this), axisModel.getFormattedLabels(), labelModel.getFont(), this.getRotate ? this.getRotate() : this.isHorizontal && !this.isHorizontal() ? 90 : 0, labelModel.get('rotate'));\n      }\n\n      this._labelInterval = labelInterval;\n    }\n\n    return labelInterval;\n  }\n};\nvar _default = Axis;\nmodule.exports = _default;\n\n/***/ }),\n/* 251 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(204);\n\nvar axisHelper = __webpack_require__(219);\n\nfunction getName(obj) {\n  if (zrUtil.isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = {\n  /**\n   * Format labels\n   * @return {Array.<string>}\n   */\n  getFormattedLabels: function () {\n    return axisHelper.getFormattedLabels(this.axis, this.get('axisLabel.formatter'));\n  },\n\n  /**\n   * Get categories\n   */\n  getCategories: function () {\n    return this.get('type') === 'category' && zrUtil.map(this.get('data'), getName);\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function (origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function (origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function () {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function (rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function () {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n/* 252 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(204);\n\nvar ComponentModel = __webpack_require__(217);\n\nvar axisModelCreator = __webpack_require__(343);\n\nvar axisModelCommonMixin = __webpack_require__(251);\n\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 253 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var _config = __webpack_require__(211);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(204);\n\nvar Model = __webpack_require__(215);\n\nvar DataDiffer = __webpack_require__(351);\n\nvar modelUtil = __webpack_require__(206);\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined';\nvar globalObj = typeof window === UNDEFINED ? global : window;\nvar dataCtors = {\n  'float': typeof globalObj.Float64Array === UNDEFINED ? Array : globalObj.Float64Array,\n  'int': typeof globalObj.Int32Array === UNDEFINED ? Array : globalObj.Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n};\nvar TRANSFERABLE_PROPERTIES = ['stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'];\n\nfunction transferProperties(a, b) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n    if (b.hasOwnProperty(propName)) {\n      a[propName] = b[propName];\n    }\n  });\n  a.__wrappedMethods = b.__wrappedMethods;\n}\n\nfunction DefaultDataProvider(dataArray) {\n  this._array = dataArray || [];\n}\n\nDefaultDataProvider.prototype.pure = false;\n\nDefaultDataProvider.prototype.count = function () {\n  return this._array.length;\n};\n\nDefaultDataProvider.prototype.getItem = function (idx) {\n  return this._array[idx];\n};\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function (dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimensionName;\n    var dimensionInfo = {};\n\n    if (typeof dimensions[i] === 'string') {\n      dimensionName = dimensions[i];\n      dimensionInfo = {\n        name: dimensionName,\n        coordDim: dimensionName,\n        coordDimIndex: 0,\n        stackable: false,\n        // Type can be 'float', 'int', 'number'\n        // Default is number, Precision of float may not enough\n        type: 'number'\n      };\n    } else {\n      dimensionInfo = dimensions[i];\n      dimensionName = dimensionInfo.name;\n      dimensionInfo.type = dimensionInfo.type || 'number';\n\n      if (!dimensionInfo.coordDim) {\n        dimensionInfo.coordDim = dimensionName;\n        dimensionInfo.coordDimIndex = 0;\n      }\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this.indices = [];\n  /**\n   * Data storage\n   * @type {Object.<key, TypedArray|Array>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * @param {module:echarts/data/List}\n   */\n\n  this.stackedOn = null;\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent;\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * Get dimension name\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (!isNaN(dim)) {\n    dim = this.dimensions[dim] || dim;\n  }\n\n  return dim;\n};\n/**\n * Get type and stackable info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data\n * @param {Array.<string>} [nameList]\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  data = data || [];\n  var isDataArray = zrUtil.isArray(data);\n\n  if (isDataArray) {\n    data = new DefaultDataProvider(data);\n  }\n\n  this._rawData = data; // Clear\n\n  var storage = this._storage = {};\n  var indices = this.indices = [];\n  var dimensions = this.dimensions;\n  var dimensionInfoMap = this._dimensionInfos;\n  var size = data.count();\n  var idList = [];\n  var nameRepeatCount = {};\n  var nameDimIdx;\n  nameList = nameList || []; // Init storage\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimInfo = dimensionInfoMap[dimensions[i]];\n    dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n    var DataCtor = dataCtors[dimInfo.type];\n    storage[dimensions[i]] = new DataCtor(size);\n  }\n\n  var self = this;\n\n  if (!dimValueGetter) {\n    self.hasItemOption = false;\n  } // Default dim value getter\n\n\n  dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n    var value = modelUtil.getDataItemValue(dataItem); // If any dataItem is like { value: 10 }\n\n    if (modelUtil.isDataItemOption(dataItem)) {\n      self.hasItemOption = true;\n    }\n\n    return modelUtil.converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, dimensionInfoMap[dimName]);\n  };\n\n  for (var i = 0; i < size; i++) {\n    // NOTICE: Try not to write things into dataItem\n    var dataItem = data.getItem(i); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of cateogry\n    // Use a tempValue to normalize the value to be a (x, y) value\n    // Store the data by dimensions\n\n    for (var k = 0; k < dimensions.length; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim]; // PENDING NULL is empty or zero\n\n      dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n    }\n\n    indices.push(i);\n  } // Use the name in option and create id\n\n\n  for (var i = 0; i < size; i++) {\n    var dataItem = data.getItem(i);\n\n    if (!nameList[i] && dataItem) {\n      if (dataItem.name != null) {\n        nameList[i] = dataItem.name;\n      } else if (nameDimIdx != null) {\n        nameList[i] = storage[dimensions[nameDimIdx]][i];\n      }\n    }\n\n    var name = nameList[i] || ''; // Try using the id in option\n\n    var id = dataItem && dataItem.id;\n\n    if (!id && name) {\n      // Use name as id and add counter to avoid same name\n      nameRepeatCount[name] = nameRepeatCount[name] || 0;\n      id = name;\n\n      if (nameRepeatCount[name] > 0) {\n        id += '__ec__' + nameRepeatCount[name];\n      }\n\n      nameRepeatCount[name]++;\n    }\n\n    id && (idList[i] = id);\n  }\n\n  this._nameList = nameList;\n  this._idList = idList;\n};\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this.indices.length;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx, stack) {\n  var storage = this._storage;\n  var dataIndex = this.indices[idx]; // If value not exists\n\n  if (dataIndex == null || !storage[dim]) {\n    return NaN;\n  }\n\n  var value = storage[dim][dataIndex]; // FIXME ordinal data type is not stackable\n\n  if (stack) {\n    var dimensionInfo = this._dimensionInfos[dim];\n\n    if (dimensionInfo && dimensionInfo.stackable) {\n      var stackedOn = this.stackedOn;\n\n      while (stackedOn) {\n        // Get no stacked data of stacked on\n        var stackedValue = stackedOn.get(dim, idx); // Considering positive stack, negative stack and empty data\n\n        if (value >= 0 && stackedValue > 0 || // Positive stack\n        value <= 0 && stackedValue < 0 // Negative stack\n        ) {\n            value += stackedValue;\n          }\n\n        stackedOn = stackedOn.stackedOn;\n      }\n    }\n  }\n\n  return value;\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx, stack) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx, stack));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dimensions = this.dimensions;\n  var dimensionInfos = this._dimensionInfos;\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    if ( // Ordinal type can be string or number\n    dimensionInfos[dimensions[i]].type !== 'ordinal' && isNaN(this.get(dimensions[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n * @param {Function} filter\n */\n\n\nlistProto.getDataExtent = function (dim, stack, filter) {\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var dimInfo = this.getDimensionInfo(dim);\n  stack = dimInfo && dimInfo.stackable && stack;\n  var dimExtent = (this._extent || (this._extent = {}))[dim + !!stack];\n  var value;\n\n  if (dimExtent) {\n    return dimExtent;\n  } // var dimInfo = this._dimensionInfos[dim];\n\n\n  if (dimData) {\n    var min = Infinity;\n    var max = -Infinity; // var isOrdinal = dimInfo.type === 'ordinal';\n\n    for (var i = 0, len = this.count(); i < len; i++) {\n      value = this.get(dim, i, stack); // FIXME\n      // if (isOrdinal && typeof value === 'string') {\n      //     value = zrUtil.indexOf(dimData, value);\n      // }\n\n      if (!filter || filter(value, dim, i)) {\n        value < min && (min = value);\n        value > max && (max = value);\n      }\n    }\n\n    return this._extent[dim + !!stack] = [min, max];\n  } else {\n    return [Infinity, -Infinity];\n  }\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getSum = function (dim, stack) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i, stack);\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n};\n/**\n * Retreive the index with given value\n * @param {number} idx\n * @param {number} value\n * @return {number}\n */\n// FIXME Precision of float value\n\n\nlistProto.indexOf = function (dim, value) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var indices = this.indices;\n\n  if (dimData) {\n    for (var i = 0, len = indices.length; i < len; i++) {\n      var rawIndex = indices[i];\n\n      if (dimData[rawIndex] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  var indices = this.indices;\n  var nameList = this._nameList;\n\n  for (var i = 0, len = indices.length; i < len; i++) {\n    var rawIndex = indices[i];\n\n    if (nameList[rawIndex] === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  // Indices are ascending\n  var indices = this.indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = indices.length - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {boolean} stack If given value is after stacked\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} Considere multiple points has the same value.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i, stack);\n    var dist = Math.abs(diff);\n\n    if (diff <= maxDistance && dist <= minDist) {\n      // For the case of two data are same on xAxis, which has sequence data.\n      // Show the nearest index\n      // https://github.com/ecomfe/echarts/issues/2869\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndices.length = 0;\n      }\n\n      nearestIndices.push(i);\n    }\n  }\n\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = function (idx) {\n  var rawIdx = this.indices[idx];\n  return rawIdx == null ? -1 : rawIdx;\n};\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  return this._rawData.getItem(this.getRawIndex(idx));\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  return this._nameList[this.indices[idx]] || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return this._idList[this.indices[idx]] || this.getRawIndex(idx) + '';\n};\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, stack, context) {\n  if (typeof dims === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dims;\n    dims = [];\n  }\n\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var value = [];\n  var dimSize = dims.length;\n  var indices = this.indices;\n  context = context || this;\n\n  for (var i = 0; i < indices.length; i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i, stack), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n        break;\n\n      default:\n        for (var k = 0; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i, stack);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, stack, context) {\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var newIndices = [];\n  var value = [];\n  var dimSize = dimensions.length;\n  var indices = this.indices;\n  context = context || this;\n\n  for (var i = 0; i < indices.length; i++) {\n    var keep; // Simple optimization\n\n    if (!dimSize) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      keep = cb.call(context, this.get(dimensions[0], i, stack), i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = this.get(dimensions[k], i, stack);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices.push(indices[i]);\n    }\n  }\n\n  this.indices = newIndices; // Reset data extent\n\n  this._extent = {};\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, stack, context) {\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, stack, context);\n  return result;\n};\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage; // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n    var dimStore = originalStorage[dim];\n\n    if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n      storage[dim] = new dimStore.constructor(originalStorage[dim].length);\n    } else {\n      // Direct reference for other dimensions\n      storage[dim] = originalStorage[dim];\n    }\n  }\n\n  return list;\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, stack, context) {\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  var indices = list.indices = this.indices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  this.each(dimensions, function () {\n    var idx = arguments[arguments.length - 1];\n    var retValue = cb && cb.apply(this, arguments);\n\n    if (retValue != null) {\n      // a number\n      if (typeof retValue === 'number') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var dimStore = storage[dim];\n        var rawIdx = indices[idx];\n\n        if (dimStore) {\n          dimStore[rawIdx] = retValue[i];\n        }\n      }\n    }\n  }, stack, context);\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var storage = this._storage;\n  var targetStorage = list._storage;\n  var originalIndices = this.indices;\n  var indices = list.indices = [];\n  var frameValues = [];\n  var frameIndices = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count(); // Copy data from original data\n\n  for (var i = 0; i < storage[dimension].length; i++) {\n    targetStorage[dimension][i] = storage[dimension][i];\n  }\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var idx = originalIndices[i + k];\n      frameValues[k] = dimStore[idx];\n      frameIndices[k] = idx;\n    }\n\n    var value = sampleValue(frameValues);\n    var idx = frameIndices[sampleIndex(frameValues, value) || 0]; // Only write value on the filtered data\n\n    dimStore[idx] = value;\n    indices.push(idx);\n  }\n\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  idx = this.indices[idx];\n  return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var idList = this._idList;\n  var otherIdList = otherList && otherList._idList;\n  var val; // Use prefix to avoid index to be the same as otherIdList[idx],\n  // which will cause weird udpate animation.\n\n  var prefix = 'e\\0\\0';\n  return new DataDiffer(otherList ? otherList.indices : [], this.indices, function (idx) {\n    return (val = otherIdList[idx]) != null ? val : prefix + idx;\n  }, function (idx) {\n    return (val = idList[idx]) != null ? val : prefix + idx;\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n};\n\nvar setItemDataAndSeriesIndex = function (child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function () {\n  var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n  var list = new List(dimensionInfoList, this.hostModel); // FIXME\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  list.indices = this.indices.slice();\n\n  if (this._extent) {\n    list._extent = zrUtil.extend({}, this._extent);\n  }\n\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf'];\nvar _default = List;\nmodule.exports = _default;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(48)))\n\n/***/ }),\n/* 254 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(204);\n\nvar _model = __webpack_require__(206);\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/**\n * Complete dimensions by data (guess dimension).\n */\nvar each = zrUtil.each;\nvar isString = zrUtil.isString;\nvar defaults = zrUtil.defaults;\nvar OTHER_DIMS = {\n  tooltip: 1,\n  label: 1,\n  itemName: 1\n};\n/**\n * Complete the dimensions array, by user defined `dimension` and `encode`,\n * and guessing from the data structure.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: []}, ...] can be specified to give names.\n * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n *                      If not specified, extra dim names will be:\n *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @return {Array.<Object>} [{\n *      name: string mandatory,\n *      coordDim: string mandatory,\n *      coordDimIndex: number mandatory,\n *      type: string optional,\n *      tooltipName: string optional,\n *      otherDims: {\n *          tooltip: number optional,\n *          label: number optional\n *      },\n *      isExtraCoord: boolean true or undefined.\n *      other props ...\n * }]\n */\n\nfunction completeDimensions(sysDims, data, opt) {\n  data = data || [];\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n  var dataDimNameMap = zrUtil.createHashMap();\n  var coordDimNameMap = zrUtil.createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = opt.dimCount;\n\n  if (dimCount == null) {\n    var value0 = retrieveValue(data[0]);\n    dimCount = Math.max(zrUtil.isArray(value0) && value0.length || 1, sysDims.length, dimsDef.length);\n    each(sysDims, function (sysDimItem) {\n      var sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n    });\n  } // Apply user defined dims (`name` and `type`) and init result.\n\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = isString(dimsDef[i]) ? {\n      name: dimsDef[i]\n    } : dimsDef[i] || {};\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = {\n      otherDims: {}\n    }; // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option, tooltipName\n      // will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.tooltipName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        dataDims[coordDimIndex] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      sysDimItem = zrUtil.clone(sysDimItem); // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = normalizeToArray(encodeDef.get(coordDim)); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n      }\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  }); // Make sure the first extra dim is 'value'.\n\n  var extra = opt.extraPrefix || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n    var coordDim = resultItem.coordDim;\n    coordDim == null && (resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero), resultItem.coordDimIndex = 0, resultItem.isExtraCoord = true);\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n    resultItem.type == null && guessOrdinal(data, resultDimIdx) && (resultItem.type = 'ordinal');\n  }\n\n  return result;\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMS[coordDim]) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  }\n\n  function genName(name, map, fromZero) {\n    if (fromZero || map.get(name) != null) {\n      var i = 0;\n\n      while (map.get(name + i) != null) {\n        i++;\n      }\n\n      name += i;\n    }\n\n    map.set(name, true);\n    return name;\n  }\n} // The rule should not be complex, otherwise user might not\n// be able to known where the data is wrong.\n\n\nvar guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n  for (var i = 0, len = data.length; i < len; i++) {\n    var value = retrieveValue(data[i]);\n\n    if (!zrUtil.isArray(value)) {\n      return false;\n    }\n\n    var value = value[dimIndex]; // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n\n    if (value != null && isFinite(value) && value !== '') {\n      return false;\n    } else if (isString(value) && value !== '-') {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nfunction retrieveValue(o) {\n  return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value : o;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;\n\n/***/ }),\n/* 255 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(211);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(204);\n\nvar env = __webpack_require__(212);\n\nvar _format = __webpack_require__(213);\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar _clazz = __webpack_require__(216);\n\nvar set = _clazz.set;\nvar get = _clazz.get;\n\nvar modelUtil = __webpack_require__(206);\n\nvar ComponentModel = __webpack_require__(217);\n\nvar colorPaletteMixin = __webpack_require__(256);\n\nvar _layout = __webpack_require__(218);\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.normal.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.mergeDefaultAndTheme(option, ecModel);\n    var data = this.getInitialData(option, ecModel);\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    set(this, 'dataBeforeProcessed', data); // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n\n    this.restoreData();\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option.label, ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    var data = this.getInitialData(newSeriesOption, ecModel); // TODO Merge data?\n\n    if (data) {\n      set(this, 'data', data);\n      set(this, 'dataBeforeProcessed', data.cloneShallow());\n    }\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i].label, props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var data = get(this, 'data');\n    return dataType == null ? data : data.getLinkedData(dataType);\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    set(this, 'data', data);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return get(this, 'dataBeforeProcessed');\n  },\n\n  /**\n   * Coord dimension to data dimension.\n   *\n   * By default the result is the same as dimensions of series data.\n   * But in some series data dimensions are different from coord dimensions (i.e.\n   * candlestick and boxplot). Override this method to handle those cases.\n   *\n   * Coord dimension to data dimension can be one-to-many\n   *\n   * @param {string} coordDim\n   * @return {Array.<string>} dimensions on the axis.\n   */\n  coordDimToDataDim: function (coordDim) {\n    return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n  },\n\n  /**\n   * Convert data dimension to coord dimension.\n   *\n   * @param {string|number} dataDim\n   * @return {string}\n   */\n  dataDimToCoordDim: function (dataDim) {\n    return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    function formatArrayValue(value) {\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n      }, 0);\n      var result = [];\n      var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dimIdx) {\n        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dimIdx) {\n        var dimInfo = data.getDimensionInfo(dimIdx); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '') + (dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(encodeHTML(valStr));\n      }\n\n      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n    }\n\n    var data = get(this, 'data');\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? formatArrayValue(value) : encodeHTML(addCommas(value));\n    var name = data.getName(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent';\n    var colorEl = getTooltipMarker(color);\n    var seriesName = this.name; // FIXME\n\n    if (seriesName === '\\0-') {\n      // Not show '-'\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n  },\n  getColorFromPalette: function (name, scope) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope);\n    }\n\n    return color;\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null\n});\nzrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\nvar _default = SeriesModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 256 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _clazz = __webpack_require__(216);\n\nvar set = _clazz.set;\nvar get = _clazz.get;\nvar _default = {\n  clearColorPalette: function () {\n    set(this, 'colorIdx', 0);\n    set(this, 'colorNameMap', {});\n  },\n  getColorFromPalette: function (name, scope) {\n    scope = scope || this;\n    var colorIdx = get(scope, 'colorIdx') || 0;\n    var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {}); // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var colorPalette = this.get('color', true) || [];\n\n    if (!colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n    return color;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n/* 257 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar numberUtil = __webpack_require__(209);\n\n/**\n * For testable.\n */\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n  var ticks = []; // If interval is 0, return [];\n\n  if (!interval) {\n    return ticks;\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n  var safeLimit = 10000;\n\n  if (extent[0] < niceTickExtent[0]) {\n    ticks.push(extent[0]);\n  }\n\n  var tick = niceTickExtent[0];\n\n  while (tick <= niceTickExtent[1]) {\n    ticks.push(tick); // Avoid rounding error\n\n    tick = roundNumber(tick + interval, intervalPrecision);\n\n    if (tick === ticks[ticks.length - 1]) {\n      // Consider out of safe float point, e.g.,\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\n      break;\n    }\n\n    if (ticks.length > safeLimit) {\n      return [];\n    }\n  } // Consider this case: the last item of ticks is smaller\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n    ticks.push(extent[1]);\n  }\n\n  return ticks;\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;\nexports.intervalScaleGetTicks = intervalScaleGetTicks;\n\n/***/ }),\n/* 258 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(204);\n\nvar Group = __webpack_require__(230);\n\nvar componentUtil = __webpack_require__(235);\n\nvar clazzUtil = __webpack_require__(216);\n\nvar modelUtil = __webpack_require__(206);\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {}\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n * @inner\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\nvar _default = Chart;\nmodule.exports = _default;\n\n/***/ }),\n/* 259 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar guid = __webpack_require__(266);\n\nvar Eventful = __webpack_require__(224);\n\nvar Transformable = __webpack_require__(275);\n\nvar Animatable = __webpack_require__(439);\n\nvar zrUtil = __webpack_require__(204);\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;\n\n/***/ }),\n/* 260 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Clip = __webpack_require__(413);\n\nvar color = __webpack_require__(225);\n\nvar _util = __webpack_require__(204);\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;\n\n/***/ }),\n/* 261 */\n/***/ (function(module, exports) {\n\nvar _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;\n\n/***/ }),\n/* 262 */\n/***/ (function(module, exports) {\n\nvar PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;\n\n/***/ }),\n/* 263 */\n/***/ (function(module, exports) {\n\nfunction windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0;\n  return x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;\n\n/***/ }),\n/* 264 */\n/***/ (function(module, exports) {\n\n// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;\n\n/***/ }),\n/* 265 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(207);\n\nvar curve = __webpack_require__(221);\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;\n\n/***/ }),\n/* 266 */\n/***/ (function(module, exports) {\n\n/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 267 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(229);\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;\n\n/***/ }),\n/* 268 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(238);\n\nvar BoundingRect = __webpack_require__(214);\n\nvar zrUtil = __webpack_require__(204);\n\nvar imageHelper = __webpack_require__(240);\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;\n\n/***/ }),\n/* 269 */\n/***/ (function(module, exports) {\n\nvar Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;\n\n/***/ }),\n/* 270 */\n/***/ (function(module, exports) {\n\nvar STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  }\n\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = style[styleName] || prop[1];\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;\n\n/***/ }),\n/* 271 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar env = __webpack_require__(212);\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 272 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar smoothSpline = __webpack_require__(428);\n\nvar smoothBezier = __webpack_require__(427);\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;\n\n/***/ }),\n/* 273 */\n/***/ (function(module, exports) {\n\nfunction buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.quadraticCurveTo(x + width, y, x + width, y + r2);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.quadraticCurveTo(x + width, y + height, x + width - r3, y + height);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.quadraticCurveTo(x, y + height, x, y + height - r4);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n}\n\nexports.buildPath = buildPath;\n\n/***/ }),\n/* 274 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(204);\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = __webpack_require__(220);\n\nvar roundRectHelper = __webpack_require__(273);\n\nvar imageHelper = __webpack_require__(240);\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  // FIXME ??? performance try\n  // if (ctx.__currentValues[prop] !== value) {\n  // ctx[prop] = ctx.__currentValues[prop] = value;\n  ctx[prop] = value; // }\n\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;\n\n/***/ }),\n/* 275 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar matrix = __webpack_require__(222);\n\nvar vector = __webpack_require__(207);\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;\n\n/***/ }),\n/* 276 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar guid = __webpack_require__(266);\n\nvar env = __webpack_require__(212);\n\nvar zrUtil = __webpack_require__(204);\n\nvar Handler = __webpack_require__(408);\n\nvar Storage = __webpack_require__(411);\n\nvar Painter = __webpack_require__(410);\n\nvar Animation = __webpack_require__(412);\n\nvar HandlerProxy = __webpack_require__(422);\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '3.7.4';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    this.painter.configLayer(zLevel, config);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    if (this._needsRefresh) {\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      this.refreshHoverImmediately();\n    }\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;\n\n/***/ }),\n/* 277 */,\n/* 278 */,\n/* 279 */,\n/* 280 */,\n/* 281 */,\n/* 282 */,\n/* 283 */,\n/* 284 */,\n/* 285 */,\n/* 286 */,\n/* 287 */,\n/* 288 */,\n/* 289 */,\n/* 290 */,\n/* 291 */,\n/* 292 */,\n/* 293 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_v_charts_lib_line__ = __webpack_require__(388);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_v_charts_lib_line___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_v_charts_lib_line__);\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  created: function created() {\n    this.chartData = {\n      columns: ['日期', '销售量'],\n      rows: [{ '日期': '1月1日', '销售量': 123 }, { '日期': '1月2日', '销售量': 1223 }, { '日期': '1月3日', '销售量': 2123 }, { '日期': '1月4日', '销售量': 4123 }, { '日期': '1月5日', '销售量': 3123 }, { '日期': '1月6日', '销售量': 7123 }]\n    };\n  },\n\n\n  components: { VeLine: __WEBPACK_IMPORTED_MODULE_0_v_charts_lib_line___default.a }\n});\n\n/***/ }),\n/* 294 */,\n/* 295 */,\n/* 296 */,\n/* 297 */,\n/* 298 */,\n/* 299 */,\n/* 300 */,\n/* 301 */,\n/* 302 */,\n/* 303 */,\n/* 304 */,\n/* 305 */,\n/* 306 */,\n/* 307 */,\n/* 308 */,\n/* 309 */,\n/* 310 */,\n/* 311 */,\n/* 312 */,\n/* 313 */,\n/* 314 */,\n/* 315 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(204);\n\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;\n\n/***/ }),\n/* 316 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(205);\n\nvar SymbolClz = __webpack_require__(242);\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n/**\n * @constructor\n * @alias module:echarts/chart/helper/SymbolDraw\n * @param {module:zrender/graphic/Group} [symbolCtor]\n */\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, idx, isIgnore) {\n  var point = data.getItemLayout(idx); // Is an object\n  // if (point && point.hasOwnProperty('point')) {\n  //     point = point.point;\n  // }\n\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx)) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Array.<boolean>} [isIgnore]\n */\n\n\nsymbolDrawProto.updateData = function (data, isIgnore) {\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = {\n    itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label.normal'),\n    hoverLabelModel: seriesModel.getModel('label.emphasis'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data;\n\n  if (data) {\n    if (enableAnimation) {\n      data.eachItemGraphicEl(function (el) {\n        el.fadeOut(function () {\n          group.remove(el);\n        });\n      });\n    } else {\n      group.removeAll();\n    }\n  }\n};\n\nvar _default = SymbolDraw;\nmodule.exports = _default;\n\n/***/ }),\n/* 317 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _model = __webpack_require__(206);\n\nvar otherDimToDataDim = _model.otherDimToDataDim;\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nfunction findLabelValueDim(data) {\n  var valueDim;\n  var labelDims = otherDimToDataDim(data, 'label');\n\n  if (labelDims.length) {\n    valueDim = labelDims[0];\n  } else {\n    // Get last value dim\n    var dimensions = data.dimensions.slice();\n    var dataType;\n\n    while (dimensions.length && (valueDim = dimensions.pop(), dataType = data.getDimensionInfo(valueDim).type, dataType === 'ordinal' || dataType === 'time')) {} // jshint ignore:line\n\n  }\n\n  return valueDim;\n}\n\nexports.findLabelValueDim = findLabelValueDim;\n\n/***/ }),\n/* 318 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(208);\n\nvar zrUtil = __webpack_require__(204);\n\n__webpack_require__(319);\n\n__webpack_require__(320);\n\nvar visualSymbol = __webpack_require__(372);\n\nvar layoutPoints = __webpack_require__(354);\n\nvar dataSample = __webpack_require__(366);\n\n__webpack_require__(331);\n\n// In case developer forget to include grid component\necharts.registerVisual(zrUtil.curry(visualSymbol, 'line', 'circle', 'line'));\necharts.registerLayout(zrUtil.curry(layoutPoints, 'line')); // Down sample after filter\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(dataSample, 'line'));\n\n/***/ }),\n/* 319 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(211);\n\nvar __DEV__ = _config.__DEV__;\n\nvar createListFromArray = __webpack_require__(243);\n\nvar SeriesModel = __webpack_require__(255);\n\nvar _default = SeriesModel.extend({\n  type: 'series.line',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(option.data, this, ecModel);\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // stack: null\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // If clip the overflow value\n    clipOverflow: true,\n    // cursor: null,\n    label: {\n      normal: {\n        position: 'top'\n      }\n    },\n    // itemStyle: {\n    //     normal: {},\n    //     emphasis: {}\n    // },\n    lineStyle: {\n      normal: {\n        width: 2,\n        type: 'solid'\n      }\n    },\n    // areaStyle: {},\n    // false, 'start', 'end', 'middle'\n    step: false,\n    // Disabled if step is true\n    smooth: false,\n    smoothMonotone: null,\n    // 拐点图形类型\n    symbol: 'emptyCircle',\n    // 拐点图形大小\n    symbolSize: 4,\n    // 拐点图形旋转控制\n    symbolRotate: null,\n    // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n    showSymbol: true,\n    // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n    showAllSymbol: false,\n    // 是否连接断点\n    connectNulls: false,\n    // 数据过滤，'average', 'max', 'min', 'sum'\n    sampling: 'none',\n    animationEasing: 'linear',\n    // Disable progressive\n    progressive: 0,\n    hoverLayerThreshold: Infinity\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 320 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(211);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(204);\n\nvar SymbolDraw = __webpack_require__(316);\n\nvar SymbolClz = __webpack_require__(242);\n\nvar lineAnimationDiff = __webpack_require__(321);\n\nvar graphic = __webpack_require__(205);\n\nvar modelUtil = __webpack_require__(206);\n\nvar _poly = __webpack_require__(322);\n\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\n\nvar ChartView = __webpack_require__(258);\n\n// FIXME step not support polar\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.3 : 0;\n}\n\nfunction getAxisExtentWithGap(axis) {\n  var extent = axis.getGlobalExtent();\n\n  if (axis.onBand) {\n    // Remove extra 1px to avoid line miter in clipped edge\n    var halfBandWidth = axis.getBandWidth() / 2 - 1;\n    var dir = extent[1] > extent[0] ? 1 : -1;\n    extent[0] += dir * halfBandWidth;\n    extent[1] -= dir * halfBandWidth;\n  }\n\n  return extent;\n}\n\nfunction sign(val) {\n  return val >= 0 ? 1 : -1;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Array.<Array.<number>>} points\n * @private\n */\n\n\nfunction getStackedOnPoints(coordSys, data) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = 0;\n\n  if (!baseAxis.onZero) {\n    var extent = valueAxis.scale.getExtent();\n\n    if (extent[0] > 0) {\n      // Both positive\n      valueStart = extent[0];\n    } else if (extent[1] < 0) {\n      // Both negative\n      valueStart = extent[1];\n    } // If is one positive, and one negative, onZero shall be true\n\n  }\n\n  var valueDim = valueAxis.dim;\n  var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n  return data.mapArray([valueDim], function (val, idx) {\n    var stackedOnSameSign;\n    var stackedOn = data.stackedOn; // Find first stacked value with same sign\n\n    while (stackedOn && sign(stackedOn.get(valueDim, idx)) === sign(val)) {\n      stackedOnSameSign = stackedOn;\n      break;\n    }\n\n    var stackedData = [];\n    stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n    stackedData[1 - baseDataOffset] = stackedOnSameSign ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n    return coordSys.dataToPoint(stackedData);\n  }, true);\n}\n\nfunction createGridClipShape(cartesian, hasAnimation, seriesModel) {\n  var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n  var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n  var x = Math.min(xExtent[0], xExtent[1]);\n  var y = Math.min(yExtent[0], yExtent[1]);\n  var width = Math.max(xExtent[0], xExtent[1]) - x;\n  var height = Math.max(yExtent[0], yExtent[1]) - y;\n  var lineWidth = seriesModel.get('lineStyle.normal.width') || 2; // Expand clip shape to avoid clipping when line value exceeds axis\n\n  var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n\n  if (isHorizontal) {\n    y -= expandSize;\n    height += expandSize * 2;\n  } else {\n    x -= expandSize;\n    width += expandSize * 2;\n  }\n\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipShape(polar, hasAnimation, seriesModel) {\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis();\n  var radiusExtent = radiusAxis.getExtent();\n  var angleExtent = angleAxis.getExtent();\n  var RADIAN = Math.PI / 180;\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: polar.cx,\n      cy: polar.cy,\n      r0: radiusExtent[0],\n      r: radiusExtent[1],\n      startAngle: -angleExtent[0] * RADIAN,\n      endAngle: -angleExtent[1] * RADIAN,\n      clockwise: angleAxis.inverse\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: -angleExtent[1] * RADIAN\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipShape(coordSys, hasAnimation, seriesModel) {\n  return coordSys.type === 'polar' ? createPolarClipShape(coordSys, hasAnimation, seriesModel) : createGridClipShape(coordSys, hasAnimation, seriesModel);\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    // Can only be x or y\n    if (visualMetaList[i].dimension < 2) {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta || coordSys.type !== 'cartesian2d') {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var dimension = visualMeta.dimension;\n  var dimName = data.dimensions[dimension];\n  var axis = coordSys.getAxis(dimName); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[dimName] = minCoord;\n  gradient[dimName + '2'] = maxCoord;\n  return gradient;\n}\n\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n    var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n    var points = data.mapArray(data.getItemLayout, true);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var stackedOnPoints = getStackedOnPoints(coordSys, data);\n    var showSymbol = seriesModel.get('showSymbol');\n\n    var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol') && this._getSymbolIgnoreFunc(data, coordSys); // Remove temporary symbols\n\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step'); // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n\n      lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // Update clipPath\n\n\n      lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel)); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, isSymbolIgnore); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n\n    if (polygon) {\n      var stackedOn = data.stackedOn;\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n\n      if (stackedOn) {\n        var stackedOnSeries = stackedOn.hostModel;\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n  },\n  dispose: function () {},\n  highlight: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n\n        if (!pt) {\n          // Null data\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  },\n\n  /**\n   * @private\n   */\n  _getSymbolIgnoreFunc: function (data, coordSys) {\n    var categoryAxis = coordSys.getAxesByScale('ordinal')[0]; // `getLabelInterval` is provided by echarts/component/axis\n\n    if (categoryAxis && categoryAxis.isLabelIgnored) {\n      return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n    }\n  },\n\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 321 */\n/***/ (function(module, exports) {\n\n// var arrayDiff = require('zrender/src/core/arrayDiff');\n// 'zrender/src/core/arrayDiff' has been used before, but it did\n// not do well in performance when roam with fixed dataZoom window.\nfunction sign(val) {\n  return val >= 0 ? 1 : -1;\n}\n\nfunction getStackedOnPoint(coordSys, data, idx) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = baseAxis.onZero ? 0 : valueAxis.scale.getExtent()[0];\n  var valueDim = valueAxis.dim;\n  var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n  var stackedOnSameSign;\n  var stackedOn = data.stackedOn;\n  var val = data.get(valueDim, idx); // Find first stacked value with same sign\n\n  while (stackedOn && sign(stackedOn.get(valueDim, idx)) === sign(val)) {\n    stackedOnSameSign = stackedOn;\n    break;\n  }\n\n  var stackedData = [];\n  stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n  stackedData[1 - baseDataOffset] = stackedOnSameSign ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n  return coordSys.dataToPoint(stackedData);\n} // function convertToIntId(newIdList, oldIdList) {\n//     // Generate int id instead of string id.\n//     // Compare string maybe slow in score function of arrDiff\n//     // Assume id in idList are all unique\n//     var idIndicesMap = {};\n//     var idx = 0;\n//     for (var i = 0; i < newIdList.length; i++) {\n//         idIndicesMap[newIdList[i]] = idx;\n//         newIdList[i] = idx++;\n//     }\n//     for (var i = 0; i < oldIdList.length; i++) {\n//         var oldId = oldIdList[i];\n//         // Same with newIdList\n//         if (idIndicesMap[oldId]) {\n//             oldIdList[i] = idIndicesMap[oldId];\n//         }\n//         else {\n//             oldIdList[i] = idx++;\n//         }\n//     }\n// }\n\n\nfunction diffData(oldData, newData) {\n  var diffResult = [];\n  newData.diff(oldData).add(function (idx) {\n    diffResult.push({\n      cmd: '+',\n      idx: idx\n    });\n  }).update(function (newIdx, oldIdx) {\n    diffResult.push({\n      cmd: '=',\n      idx: oldIdx,\n      idx1: newIdx\n    });\n  }).remove(function (idx) {\n    diffResult.push({\n      cmd: '-',\n      idx: idx\n    });\n  }).execute();\n  return diffResult;\n}\n\nfunction _default(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys) {\n  var diff = diffData(oldData, newData); // var newIdList = newData.mapArray(newData.getId);\n  // var oldIdList = oldData.mapArray(oldData.getId);\n  // convertToIntId(newIdList, oldIdList);\n  // // FIXME One data ?\n  // diff = arrayDiff(oldIdList, newIdList);\n\n  var currPoints = [];\n  var nextPoints = []; // Points for stacking base line\n\n  var currStackedPoints = [];\n  var nextStackedPoints = [];\n  var status = [];\n  var sortedIndices = [];\n  var rawIndices = [];\n  var dims = newCoordSys.dimensions;\n\n  for (var i = 0; i < diff.length; i++) {\n    var diffItem = diff[i];\n    var pointAdded = true; // FIXME, animation is not so perfect when dataZoom window moves fast\n    // Which is in case remvoing or add more than one data in the tail or head\n\n    switch (diffItem.cmd) {\n      case '=':\n        var currentPt = oldData.getItemLayout(diffItem.idx);\n        var nextPt = newData.getItemLayout(diffItem.idx1); // If previous data is NaN, use next point directly\n\n        if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n          currentPt = nextPt.slice();\n        }\n\n        currPoints.push(currentPt);\n        nextPoints.push(nextPt);\n        currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n        nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\n        break;\n\n      case '+':\n        var idx = diffItem.idx;\n        currPoints.push(oldCoordSys.dataToPoint([newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)]));\n        nextPoints.push(newData.getItemLayout(idx).slice());\n        currStackedPoints.push(getStackedOnPoint(oldCoordSys, newData, idx));\n        nextStackedPoints.push(newStackedOnPoints[idx]);\n        rawIndices.push(newData.getRawIndex(idx));\n        break;\n\n      case '-':\n        var idx = diffItem.idx;\n        var rawIndex = oldData.getRawIndex(idx); // Data is replaced. In the case of dynamic data queue\n        // FIXME FIXME FIXME\n\n        if (rawIndex !== idx) {\n          currPoints.push(oldData.getItemLayout(idx));\n          nextPoints.push(newCoordSys.dataToPoint([oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)]));\n          currStackedPoints.push(oldStackedOnPoints[idx]);\n          nextStackedPoints.push(getStackedOnPoint(newCoordSys, oldData, idx));\n          rawIndices.push(rawIndex);\n        } else {\n          pointAdded = false;\n        }\n\n    } // Original indices\n\n\n    if (pointAdded) {\n      status.push(diffItem);\n      sortedIndices.push(sortedIndices.length);\n    }\n  } // Diff result may be crossed if all items are changed\n  // Sort by data index\n\n\n  sortedIndices.sort(function (a, b) {\n    return rawIndices[a] - rawIndices[b];\n  });\n  var sortedCurrPoints = [];\n  var sortedNextPoints = [];\n  var sortedCurrStackedPoints = [];\n  var sortedNextStackedPoints = [];\n  var sortedStatus = [];\n\n  for (var i = 0; i < sortedIndices.length; i++) {\n    var idx = sortedIndices[i];\n    sortedCurrPoints[i] = currPoints[idx];\n    sortedNextPoints[i] = nextPoints[idx];\n    sortedCurrStackedPoints[i] = currStackedPoints[idx];\n    sortedNextStackedPoints[i] = nextStackedPoints[idx];\n    sortedStatus[i] = status[idx];\n  }\n\n  return {\n    current: sortedCurrPoints,\n    next: sortedNextPoints,\n    stackedOnCurrent: sortedCurrStackedPoints,\n    stackedOnNext: sortedNextStackedPoints,\n    status: sortedStatus\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 322 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(210);\n\nvar vec2 = __webpack_require__(207);\n\nvar fixClipWithShadow = __webpack_require__(271);\n\n// Poly path support NaN point\nvar vec2Min = vec2.min;\nvar vec2Max = vec2.max;\nvar scaleAndAdd = vec2.scaleAndAdd;\nvar v2Copy = vec2.copy; // Temporary variable\n\nvar v = [];\nvar cp0 = [];\nvar cp1 = [];\n\nfunction isPointNull(p) {\n  return isNaN(p[0]) || isNaN(p[1]);\n}\n\nfunction drawSegment(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n      v2Copy(cp0, p);\n    } else {\n      if (smooth > 0) {\n        var nextIdx = idx + dir;\n        var nextP = points[nextIdx];\n\n        if (connectNulls) {\n          // Find next point not null\n          while (nextP && isPointNull(points[nextIdx])) {\n            nextIdx += dir;\n            nextP = points[nextIdx];\n          }\n        }\n\n        var ratioNextSeg = 0.5;\n        var prevP = points[prevIdx];\n        var nextP = points[nextIdx]; // Last point\n\n        if (!nextP || isPointNull(nextP)) {\n          v2Copy(cp1, p);\n        } else {\n          // If next data is null in not connect case\n          if (isPointNull(nextP) && !connectNulls) {\n            nextP = p;\n          }\n\n          vec2.sub(v, nextP, prevP);\n          var lenPrevSeg;\n          var lenNextSeg;\n\n          if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n            var dim = smoothMonotone === 'x' ? 0 : 1;\n            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n          } else {\n            lenPrevSeg = vec2.dist(p, prevP);\n            lenNextSeg = vec2.dist(p, nextP);\n          } // Use ratio of seg length\n\n\n          ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n          scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n        } // Smooth constraint\n\n\n        vec2Min(cp0, cp0, smoothMax);\n        vec2Max(cp0, cp0, smoothMin);\n        vec2Min(cp1, cp1, smoothMax);\n        vec2Max(cp1, cp1, smoothMin);\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]); // cp0 of next segment\n\n        scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n\nfunction getBoundingBox(points, smoothConstraint) {\n  var ptMin = [Infinity, Infinity];\n  var ptMax = [-Infinity, -Infinity];\n\n  if (smoothConstraint) {\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (pt[0] < ptMin[0]) {\n        ptMin[0] = pt[0];\n      }\n\n      if (pt[1] < ptMin[1]) {\n        ptMin[1] = pt[1];\n      }\n\n      if (pt[0] > ptMax[0]) {\n        ptMax[0] = pt[0];\n      }\n\n      if (pt[1] > ptMax[1]) {\n        ptMax[1] = pt[1];\n      }\n    }\n  }\n\n  return {\n    min: smoothConstraint ? ptMin : ptMax,\n    max: smoothConstraint ? ptMax : ptMin\n  };\n}\n\nvar Polyline = Path.extend({\n  type: 'ec-polyline',\n  shape: {\n    points: [],\n    smooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  style: {\n    fill: null,\n    stroke: '#000'\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var i = 0;\n    var len = points.length;\n    var result = getBoundingBox(points, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      i += drawSegment(ctx, points, i, len, len, 1, result.min, result.max, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;\n    }\n  }\n});\nvar Polygon = Path.extend({\n  type: 'ec-polygon',\n  shape: {\n    points: [],\n    // Offset between stacked base points and points\n    stackedOnPoints: [],\n    smooth: 0,\n    stackedOnSmooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var stackedOnPoints = shape.stackedOnPoints;\n    var i = 0;\n    var len = points.length;\n    var smoothMonotone = shape.smoothMonotone;\n    var bbox = getBoundingBox(points, shape.smoothConstraint);\n    var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      var k = drawSegment(ctx, points, i, len, len, 1, bbox.min, bbox.max, shape.smooth, smoothMonotone, shape.connectNulls);\n      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);\n      i += k + 1;\n      ctx.closePath();\n    }\n  }\n});\nexports.Polyline = Polyline;\nexports.Polygon = Polygon;\n\n/***/ }),\n/* 323 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(252);\n\n__webpack_require__(330);\n\n/***/ }),\n/* 324 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(208);\n\nvar zrUtil = __webpack_require__(204);\n\nvar axisPointerModelHelper = __webpack_require__(226);\n\nvar axisTrigger = __webpack_require__(329);\n\n__webpack_require__(325);\n\n__webpack_require__(326);\n\n__webpack_require__(328);\n\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);\n\n/***/ }),\n/* 325 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(208);\n\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 326 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(208);\n\nvar globalListener = __webpack_require__(245);\n\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;\n\n/***/ }),\n/* 327 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(204);\n\nvar clazzUtil = __webpack_require__(216);\n\nvar graphic = __webpack_require__(205);\n\nvar axisPointerModelHelper = __webpack_require__(226);\n\nvar eventTool = __webpack_require__(223);\n\nvar throttleUtil = __webpack_require__(236);\n\nvar modelUtil = __webpack_require__(206);\n\nvar get = modelUtil.makeGetter();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = get(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = get(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = get(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    get(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(get(el).lastProp, props)) {\n    get(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;\n\n/***/ }),\n/* 328 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(205);\n\nvar BaseAxisPointer = __webpack_require__(327);\n\nvar viewHelper = __webpack_require__(246);\n\nvar cartesianAxisHelper = __webpack_require__(249);\n\nvar AxisView = __webpack_require__(248);\n\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;\n\n/***/ }),\n/* 329 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(204);\n\nvar modelUtil = __webpack_require__(206);\n\nvar modelHelper = __webpack_require__(226);\n\nvar findPointFromSeries = __webpack_require__(244);\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar get = modelUtil.makeGetter();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.coordDimToDataDim(dim);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      false, axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = get(zr)[highDownKey] || {};\n  var newHighlights = get(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 330 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(204);\n\nvar graphic = __webpack_require__(205);\n\nvar AxisBuilder = __webpack_require__(247);\n\nvar AxisView = __webpack_require__(248);\n\nvar cartesianAxisHelper = __webpack_require__(249);\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\nvar getInterval = AxisBuilder.getInterval;\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel, layout.labelInterval);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineInterval = getInterval(splitLineModel, labelInterval);\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, lineInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: 'line_' + ticks[i],\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var prevX = axis.toGlobalCoord(ticksCoords[0]);\n    var prevY = axis.toGlobalCoord(ticksCoords[0]);\n    var count = 0;\n    var areaInterval = getInterval(splitAreaModel, labelInterval);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, areaInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prevX;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n      } else {\n        x = gridRect.x;\n        y = prevY;\n        width = gridRect.width;\n        height = tickCoord - y;\n      }\n\n      var colorIndex = count++ % areaColors.length;\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: 'area_' + ticks[i],\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      prevX = x + width;\n      prevY = y + height;\n    }\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});\n\n/***/ }),\n/* 331 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(208);\n\nvar zrUtil = __webpack_require__(204);\n\nvar graphic = __webpack_require__(205);\n\n__webpack_require__(347);\n\n__webpack_require__(323);\n\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});\n\n/***/ }),\n/* 332 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _layout = __webpack_require__(218);\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = __webpack_require__(213);\n\nvar graphic = __webpack_require__(205);\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;\n\n/***/ }),\n/* 333 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(208);\n\n__webpack_require__(334);\n\n__webpack_require__(336);\n\n__webpack_require__(335);\n\nvar legendFilter = __webpack_require__(337);\n\nvar Component = __webpack_require__(217);\n\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n/***/ }),\n/* 334 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(208);\n\nvar zrUtil = __webpack_require__(204);\n\nvar Model = __webpack_require__(215);\n\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    this._data = legendData;\n    var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n      return series.name;\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        availableNames = availableNames.concat(data.mapArray(data.getName));\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 335 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(211);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(208);\n\nvar zrUtil = __webpack_require__(204);\n\nvar _symbol = __webpack_require__(228);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = __webpack_require__(205);\n\nvar _listComponent = __webpack_require__(332);\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = __webpack_require__(218);\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 336 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(208);\n\nvar zrUtil = __webpack_require__(204);\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n/***/ }),\n/* 337 */\n/***/ (function(module, exports) {\n\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 338 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(208);\n\n__webpack_require__(324);\n\n__webpack_require__(340);\n\n__webpack_require__(341);\n\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});\n\n/***/ }),\n/* 339 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(204);\n\nvar zrColor = __webpack_require__(225);\n\nvar eventUtil = __webpack_require__(223);\n\nvar env = __webpack_require__(212);\n\nvar formatUtil = __webpack_require__(213);\n\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;\n\n/***/ }),\n/* 340 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(208);\n\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 341 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(208);\n\nvar zrUtil = __webpack_require__(204);\n\nvar env = __webpack_require__(212);\n\nvar TooltipContent = __webpack_require__(339);\n\nvar formatUtil = __webpack_require__(213);\n\nvar numberUtil = __webpack_require__(209);\n\nvar graphic = __webpack_require__(205);\n\nvar findPointFromSeries = __webpack_require__(244);\n\nvar layoutUtil = __webpack_require__(218);\n\nvar Model = __webpack_require__(215);\n\nvar globalListener = __webpack_require__(245);\n\nvar axisHelper = __webpack_require__(219);\n\nvar axisPointerViewHelper = __webpack_require__(246);\n\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (tooltipOpt instanceof Model) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 342 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(204);\n\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  // 一级层叠\n  z: 0,\n  // 二级层叠\n  // 反向坐标轴\n  inverse: false,\n  // 坐标轴名字，默认为空\n  name: '',\n  // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // 坐标轴名字旋转，degree。\n  nameRotate: null,\n  // Adapt to axis rotate, when nameLocation is 'middle'.\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // 坐标轴文字样式，默认取全局样式\n  nameTextStyle: {},\n  // 文字与轴线距离\n  nameGap: 15,\n  silent: false,\n  // Default false to support tooltip.\n  triggerEvent: false,\n  // Default false to avoid legacy user event listener fail.\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  // 坐标轴线\n  axisLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // 坐标轴两端的箭头\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // 属性show控制显示与否，默认显示\n    show: true,\n    // 控制小标记是否在grid里\n    inside: false,\n    // 属性length控制线长\n    length: 5,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      width: 1\n    }\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    show: true,\n    // 控制文本标签是否在grid里\n    inside: false,\n    rotate: 0,\n    showMinLabel: null,\n    // true | false | null (auto)\n    showMaxLabel: null,\n    // true | false | null (auto)\n    margin: 8,\n    // formatter: null,\n    // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n    fontSize: 12\n  },\n  // 分隔线\n  splitLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    // 属性lineStyle（详见lineStyle）控制线条样式\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  // 分隔区域\n  splitArea: {\n    // 默认不显示，属性show控制显示与否\n    show: false,\n    // 属性areaStyle（详见areaStyle）控制区域样式\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // 类目起始和结束两端空白策略\n  boundaryGap: true,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // 数值起始和结束两端空白策略\n  boundaryGap: [0, 0],\n  // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n  // min: null,\n  // 最大值，设置成 'dataMax' 则从数据中计算最大值\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // 脱离0值比例，放大聚焦到最终_min，_max区间\n  // scale: false,\n  // 分割段数，默认为5\n  splitNumber: 5 // Minimum interval\n  // minInterval: null\n  // maxInterval: null\n\n}, defaultOption); // FIXME\n\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;\n\n/***/ }),\n/* 343 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(204);\n\nvar axisDefault = __webpack_require__(342);\n\nvar ComponentModel = __webpack_require__(217);\n\nvar _layout = __webpack_require__(218);\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 344 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(204);\n\nvar Axis = __webpack_require__(250);\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * If axis is on the zero position of the other axis\n   * @type {boolean}\n   */\n  onZero: false,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * If label is ignored.\n   * Automatically used when axis is category and label can not be all shown\n   * @param  {number}  idx\n   * @return {boolean}\n   */\n  isLabelIgnored: function (idx) {\n    if (this.type === 'category') {\n      var labelInterval = this.getLabelInterval();\n      return typeof labelInterval === 'function' && !labelInterval(idx, this.scale.getLabel(idx)) || idx % (labelInterval + 1);\n    }\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;\n\n/***/ }),\n/* 345 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(204);\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;\n\n/***/ }),\n/* 346 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(204);\n\nvar Cartesian = __webpack_require__(345);\n\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, clamp) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    return [xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)), yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))];\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, clamp) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    return [xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp), yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)];\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;\n\n/***/ }),\n/* 347 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(211);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(204);\n\nvar BoundingRect = __webpack_require__(214);\n\nvar _layout = __webpack_require__(218);\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar axisHelper = __webpack_require__(219);\n\nvar Cartesian2D = __webpack_require__(346);\n\nvar Axis2D = __webpack_require__(344);\n\nvar CoordinateSystem = __webpack_require__(232);\n\n__webpack_require__(348);\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\nvar each = zrUtil.each;\nvar ifAxisCrossZero = axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = axisHelper.niceScaleExtent;\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\n\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n\nfunction getLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var labels = axisModel.getFormattedLabels();\n  var axisLabelModel = axisModel.getModel('axisLabel');\n  var rect;\n  var step = 1;\n  var labelCount = labels.length;\n\n  if (labelCount > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.ceil(labelCount / 40);\n  }\n\n  for (var i = 0; i < labelCount; i += step) {\n    if (!axis.isLabelIgnored(i)) {\n      var unrotatedSingleRect = axisLabelModel.getTextRect(labels[i]);\n      var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n      rect ? rect.union(singleRect) : rect = singleRect;\n    }\n  }\n\n  return rect;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  });\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n  // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n  var axes = axesMap[otherAxisDim];\n\n  if (!axis.onZero) {\n    return;\n  }\n\n  var onZeroAxisIndex = axis.onZeroAxisIndex; // If target axis is specified.\n\n  if (onZeroAxisIndex != null) {\n    var otherAxis = axes[onZeroAxisIndex];\n\n    if (otherAxis && canNotOnZeroToAxis(otherAxis)) {\n      axis.onZero = false;\n    }\n\n    return;\n  }\n\n  for (var idx in axes) {\n    if (axes.hasOwnProperty(idx)) {\n      var otherAxis = axes[idx];\n\n      if (otherAxis && !canNotOnZeroToAxis(otherAxis)) {\n        onZeroAxisIndex = +idx;\n        break;\n      }\n    }\n  }\n\n  if (onZeroAxisIndex == null) {\n    axis.onZero = false;\n  }\n\n  axis.onZeroAxisIndex = onZeroAxisIndex;\n}\n\nfunction canNotOnZeroToAxis(axis) {\n  return axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = getLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (zrUtil.isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse');\n      axis.onZero = axisModel.get('axisLine.onZero');\n      axis.onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  zrUtil.each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n      axis.scale.unionExtentFromData(data, dim);\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransfrom(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return zrUtil.map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;\n\n/***/ }),\n/* 348 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(252);\n\nvar ComponentModel = __webpack_require__(217);\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 349 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BoundingRect = __webpack_require__(214);\n\nvar bbox = __webpack_require__(265);\n\nvar vec2 = __webpack_require__(207);\n\nvar polygonContain = __webpack_require__(419);\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n};\nvar _default = Region;\nmodule.exports = _default;\n\n/***/ }),\n/* 350 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(204);\n\nvar Region = __webpack_require__(349);\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 351 */\n/***/ (function(module, exports) {\n\nfunction defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n    // when duplicate keys exists (consider newDataIndex.pop() below).\n    // For performance consideration, these code below do not look neat.\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.unshift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;\n\n/***/ }),\n/* 352 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrender = __webpack_require__(276);\n\nexports.zrender = zrender;\n\nvar matrix = __webpack_require__(222);\n\nexports.matrix = matrix;\n\nvar vector = __webpack_require__(207);\n\nexports.vector = vector;\n\nvar zrUtil = __webpack_require__(204);\n\nvar colorTool = __webpack_require__(225);\n\nexports.color = colorTool;\n\nvar graphic = __webpack_require__(205);\n\nexports.graphic = graphic;\n\nvar numberUtil = __webpack_require__(209);\n\nexports.number = numberUtil;\n\nvar formatUtil = __webpack_require__(213);\n\nexports.format = formatUtil;\n\nvar _throttle = __webpack_require__(236);\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = __webpack_require__(353);\n\nexports.helper = ecHelper;\n\nvar _List = __webpack_require__(253);\n\nexports.List = _List;\n\nvar _Model = __webpack_require__(215);\n\nexports.Model = _Model;\n\nvar _Axis = __webpack_require__(250);\n\nexports.Axis = _Axis;\n\nvar _env = __webpack_require__(212);\n\nexports.env = _env;\n\nvar _parseGeoJson = __webpack_require__(350);\n\nexports.parseGeoJson = _parseGeoJson;\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nexports.util = ecUtil;\n\n/***/ }),\n/* 353 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(204);\n\nvar createListFromArray = __webpack_require__(243);\n\nvar axisHelper = __webpack_require__(219);\n\nvar axisModelCommonMixin = __webpack_require__(251);\n\nvar Model = __webpack_require__(215);\n\nvar _completeDimensions = __webpack_require__(254);\n\nexports.completeDimensions = _completeDimensions;\n\nvar _symbol = __webpack_require__(228);\n\nexports.createSymbol = _symbol.createSymbol;\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\nfunction createList(seriesModel) {\n  var data = seriesModel.get('data');\n  return createListFromArray(data, seriesModel, seriesModel.ecModel);\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n */\n\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!(option instanceof Model)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;\n\n/***/ }),\n/* 354 */\n/***/ (function(module, exports) {\n\nfunction _default(seriesType, ecModel) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (!coordSys) {\n      return;\n    }\n\n    var dims = [];\n    var coordDims = coordSys.dimensions;\n\n    for (var i = 0; i < coordDims.length; i++) {\n      dims.push(seriesModel.coordDimToDataDim(coordSys.dimensions[i])[0]);\n    }\n\n    if (dims.length === 1) {\n      data.each(dims[0], function (x, idx) {\n        // Also {Array.<number>}, not undefined to avoid if...else... statement\n        data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n      });\n    } else if (dims.length === 2) {\n      data.each(dims, function (x, y, idx) {\n        // Also {Array.<number>}, not undefined to avoid if...else... statement\n        data.setItemLayout(idx, isNaN(x) || isNaN(y) ? [NaN, NaN] : coordSys.dataToPoint([x, y]));\n      }, true);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 355 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(204);\n\nvar graphic = __webpack_require__(205);\n\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 356 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(211);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(204);\n\nvar modelUtil = __webpack_require__(206);\n\nvar Model = __webpack_require__(215);\n\nvar ComponentModel = __webpack_require__(217);\n\nvar globalDefault = __webpack_require__(358);\n\nvar colorPaletteMinin = __webpack_require__(256);\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar each = zrUtil.each;\nvar filter = zrUtil.filter;\nvar map = zrUtil.map;\nvar isArray = zrUtil.isArray;\nvar indexOf = zrUtil.indexOf;\nvar isObject = zrUtil.isObject;\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  constructor: GlobalModel,\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    zrUtil.assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = []; // 如果不存在对应的 component model 则直接 merge\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        option[mainType] = option[mainType] == null ? zrUtil.clone(componentOption) : zrUtil.merge(option[mainType], componentOption, true);\n      } else {\n        newCptTypes.push(mainType);\n      }\n    }); // FIXME OPTION 同步是否要改回原来的\n\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n    this._seriesIndices = this._seriesIndices || [];\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        zrUtil.assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name;\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = zrUtil.extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            zrUtil.extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n      }\n    }\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = zrUtil.clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (zrUtil.isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    this._seriesIndices = createSeriesIndices(filteredSeries);\n  },\n  restoreData: function () {\n    var componentsMap = this._componentsMap;\n    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        component.restoreData();\n      });\n    });\n  }\n});\n/**\n * @inner\n */\n\nfunction mergeTheme(option, theme) {\n  zrUtil.each(theme, function (themeItem, name) {\n    // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? zrUtil.clone(themeItem) : zrUtil.merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = zrUtil.createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices = null;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  zrUtil.merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!zrUtil.isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(seriesModels) {\n  return map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || [];\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nzrUtil.mixin(GlobalModel, colorPaletteMinin);\nvar _default = GlobalModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 357 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(204);\n\nvar modelUtil = __webpack_require__(206);\n\nvar ComponentModel = __webpack_require__(217);\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;\n\n/***/ }),\n/* 358 */\n/***/ (function(module, exports) {\n\nvar platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // 全图默认背景\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // 浅色\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // 深色\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  // 默认需要 Grid 配置项\n  // grid: {},\n  // 主题，主题\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;\n\n/***/ }),\n/* 359 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(233);\n\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\nvar _default = {\n  getAreaStyle: function (excludes, includes) {\n    return getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n/* 360 */\n/***/ (function(module, exports) {\n\nvar _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n/* 361 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(233);\n\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\nvar _default = {\n  getItemStyle: function (excludes, includes) {\n    var style = getItemStyle(this, excludes, includes);\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function () {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n/* 362 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(233);\n\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getLineStyle: function (excludes) {\n    var style = getLineStyle(this, excludes);\n    var lineDash = this.getLineDash(style.lineWidth);\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getLineDash: function (lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n/* 363 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar textContain = __webpack_require__(220);\n\nvar graphicUtil = __webpack_require__(205);\n\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n/* 364 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(204);\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = __webpack_require__(365);\n\nvar _model = __webpack_require__(206);\n\nvar normalizeToArray = _model.normalizeToArray;\n\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\nvar COMPATITABLE_SERIES = ['bar', 'boxplot', 'candlestick', 'chord', 'effectScatter', 'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel', 'pie', 'radar', 'sankey', 'scatter', 'treemap'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n      if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n        compatLayoutProperties(seriesOpt);\n        break;\n      }\n    }\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 365 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(204);\n\nvar modelUtil = __webpack_require__(206);\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction compatTextStyle(opt, propName) {\n  var labelOptSingle = isObject(opt) && opt[propName];\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOptSingle[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatLabelTextStyle(labelOpt) {\n  if (isObject(labelOpt)) {\n    compatTextStyle(labelOpt, 'normal');\n    compatTextStyle(labelOpt, 'emphasis');\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatItemStyle(seriesOpt);\n  compatLabelTextStyle(seriesOpt.label); // treemap\n\n  compatLabelTextStyle(seriesOpt.upperLabel); // graph\n\n  compatLabelTextStyle(seriesOpt.edgeLabel);\n  var markPoint = seriesOpt.markPoint;\n  compatItemStyle(markPoint);\n  compatLabelTextStyle(markPoint && markPoint.label);\n  var markLine = seriesOpt.markLine;\n  compatItemStyle(seriesOpt.markLine);\n  compatLabelTextStyle(markLine && markLine.label);\n  var markArea = seriesOpt.markArea;\n  compatLabelTextStyle(markArea && markArea.label); // For gauge\n\n  compatTextStyle(seriesOpt, 'axisLabel');\n  compatTextStyle(seriesOpt, 'title');\n  compatTextStyle(seriesOpt, 'detail');\n  var data = seriesOpt.data;\n\n  if (data) {\n    for (var i = 0; i < data.length; i++) {\n      compatItemStyle(data[i]);\n      compatLabelTextStyle(data[i] && data[i].label);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatItemStyle(mpData[i]);\n      compatLabelTextStyle(mpData[i] && mpData[i].label);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatItemStyle(mlData[i][0]);\n        compatLabelTextStyle(mlData[i][0] && mlData[i][0].label);\n        compatItemStyle(mlData[i][1]);\n        compatLabelTextStyle(mlData[i][1] && mlData[i][1].label);\n      } else {\n        compatItemStyle(mlData[i]);\n        compatLabelTextStyle(mlData[i] && mlData[i].label);\n      }\n    }\n  }\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatLabelTextStyle(geoOpt.label);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatLabelTextStyle(regionObj.label);\n      });\n    }\n  });\n  compatLabelTextStyle(toObj(option.timeline).label);\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 366 */\n/***/ (function(module, exports) {\n\nvar samplers = {\n  average: function (frame) {\n    var sum = 0;\n    var count = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      if (!isNaN(frame[i])) {\n        sum += frame[i];\n        count++;\n      }\n    } // Return NaN if count is 0\n\n\n    return count === 0 ? NaN : sum / count;\n  },\n  sum: function (frame) {\n    var sum = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      // Ignore NaN\n      sum += frame[i] || 0;\n    }\n\n    return sum;\n  },\n  max: function (frame) {\n    var max = -Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] > max && (max = frame[i]);\n    }\n\n    return max;\n  },\n  min: function (frame) {\n    var min = Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] < min && (min = frame[i]);\n    }\n\n    return min;\n  },\n  // TODO\n  // Median\n  nearest: function (frame) {\n    return frame[0];\n  }\n};\n\nvar indexSampler = function (frame, value) {\n  return Math.round(frame.length / 2);\n};\n\nfunction _default(seriesType, ecModel, api) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var sampling = seriesModel.get('sampling');\n    var coordSys = seriesModel.coordinateSystem; // Only cartesian2d support down sampling\n\n    if (coordSys.type === 'cartesian2d' && sampling) {\n      var baseAxis = coordSys.getBaseAxis();\n      var valueAxis = coordSys.getOtherAxis(baseAxis);\n      var extent = baseAxis.getExtent(); // Coordinste system has been resized\n\n      var size = extent[1] - extent[0];\n      var rate = Math.round(data.count() / size);\n\n      if (rate > 1) {\n        var sampler;\n\n        if (typeof sampling === 'string') {\n          sampler = samplers[sampling];\n        } else if (typeof sampling === 'function') {\n          sampler = sampling;\n        }\n\n        if (sampler) {\n          data = data.downSample(valueAxis.dim, 1 / rate, sampler, indexSampler);\n          seriesModel.setData(data);\n        }\n      }\n    }\n  }, this);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 367 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(204);\n\nvar Scale = __webpack_require__(227);\n\nvar numberUtil = __webpack_require__(209);\n\nvar IntervalScale = __webpack_require__(234);\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, true, function (val) {\n      return val > 0;\n    }));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;\n\n/***/ }),\n/* 368 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(204);\n\nvar Scale = __webpack_require__(227);\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n  init: function (data, extent) {\n    this._data = data;\n    this._extent = extent || [0, data.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? zrUtil.indexOf(this._data, val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._data[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    return this._data[n];\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, false));\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;\n\n/***/ }),\n/* 369 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(204);\n\nvar numberUtil = __webpack_require__(209);\n\nvar formatUtil = __webpack_require__(213);\n\nvar scaleHelper = __webpack_require__(257);\n\nvar IntervalScale = __webpack_require__(234);\n\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function (a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function (val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function (val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n}); // Steps from d3\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 42], // 10w\n['quarter', ONE_DAY * 380 / 4], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;\n\n/***/ }),\n/* 370 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Group = __webpack_require__(230);\n\nvar componentUtil = __webpack_require__(235);\n\nvar clazzUtil = __webpack_require__(216);\n\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {}\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;\n\n/***/ }),\n/* 371 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Gradient = __webpack_require__(239);\n\nfunction _default(ecModel) {\n  function encodeColor(seriesModel) {\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n    var data = seriesModel.getData();\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette(seriesModel.get('name')); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      });\n    }\n  }\n\n  ecModel.eachRawSeries(encodeColor);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 372 */\n/***/ (function(module, exports) {\n\nfunction _default(seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n  // Encoding visual for all series include which is filtered for legend drawing\n  ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n    var symbolSize = seriesModel.get('symbolSize');\n    data.setVisual({\n      legendSymbol: legendSymbol || symbolType,\n      symbol: symbolType,\n      symbolSize: symbolSize\n    }); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof symbolSize === 'function') {\n        data.each(function (idx) {\n          var rawValue = seriesModel.getRawValue(idx); // FIXME\n\n          var params = seriesModel.getDataParams(idx);\n          data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n        });\n      }\n\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var itemSymbolType = itemModel.getShallow('symbol', true);\n        var itemSymbolSize = itemModel.getShallow('symbolSize', true); // If has item symbol\n\n        if (itemSymbolType != null) {\n          data.setItemVisual(idx, 'symbol', itemSymbolType);\n        }\n\n        if (itemSymbolSize != null) {\n          // PENDING Transform symbolSize ?\n          data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 373 */,\n/* 374 */,\n/* 375 */,\n/* 376 */,\n/* 377 */,\n/* 378 */,\n/* 379 */,\n/* 380 */,\n/* 381 */,\n/* 382 */,\n/* 383 */,\n/* 384 */,\n/* 385 */,\n/* 386 */,\n/* 387 */,\n/* 388 */\n/***/ (function(module, exports, __webpack_require__) {\n\n(function (global, factory) {\n\t true ? module.exports = factory(__webpack_require__(208), __webpack_require__(338), __webpack_require__(333), __webpack_require__(318)) :\n\ttypeof define === 'function' && define.amd ? define(['echarts/lib/echarts', 'echarts/lib/component/tooltip', 'echarts/lib/component/legend', 'echarts/lib/chart/line'], factory) :\n\t(global.VeLine = factory(global.echarts));\n}(this, (function (echarts) { 'use strict';\n\necharts = 'default' in echarts ? echarts['default'] : echarts;\n\necharts.registerTheme('ve-chart', {\n  categoryAxis: {\n    axisLine: { show: false },\n    axisTick: { show: false },\n    splitLine: { show: false }\n  },\n  valueAxis: {\n    axisLine: { show: false }\n  },\n  line: {\n    smooth: true\n  },\n  grid: {\n    containLabel: true,\n    left: 10,\n    right: 10\n  }\n});\n\nvar itemPoint = function itemPoint(color) {\n  return ['<span style=\"', 'background-color:' + color + ';', 'display: inline-block;', 'width: 10px;', 'height: 10px;', 'border-radius: 50%;', 'margin-right:2px;', '\"></span>'].join('');\n};\n\nvar color = ['#19d4ae', '#5ab1ef', '#fa6e86', '#ffb980', '#0067a6', '#c4b4e4', '#d87a80', '#9cbbff', '#d9d0c7', '#87a997', '#d49ea2', '#5b4947', '#7ba3a8'];\n\nvar numberFormat = function numberFormat(val) {\n  var digits = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n\n  if (isNaN(+val)) return val;\n\n  var symbolMap = [{ value: 1E18, symbol: 'E' }, { value: 1E15, symbol: 'P' }, { value: 1E12, symbol: 'T' }, { value: 1E9, symbol: 'B' }, { value: 1E6, symbol: 'M' }, { value: 1E3, symbol: 'k' }];\n\n  for (var i = 0; i < symbolMap.length; i++) {\n    if (Math.abs(val) >= symbolMap[i].value) {\n      return (val / symbolMap[i].value).toFixed(digits) + symbolMap[i].symbol;\n    }\n  }\n\n  return val.toString();\n};\n\nvar formatTausends = function formatTausends(num) {\n  return String(num).replace(/^(\\s+|-)?\\d+(?=.?\\d*($|\\s))/g, function (m) {\n    return m.replace(/(?=(?!\\b)(\\d{3})+$)/g, ',');\n  });\n};\n\nvar getFormated = function getFormated(val, type) {\n  var digit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 2;\n  var defaultVal = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '-';\n\n  if (val == null || isNaN(val)) return defaultVal;\n  switch (type) {\n    case 'KMB':\n      return numberFormat(val);\n    case 'percent':\n      return parseFloat((val * 100).toFixed(digit)) + '%';\n    case 'normal':\n      return formatTausends(val);\n    default:\n      return val;\n  }\n};\n\n\n\nvar getStackMap = function getStackMap(stack) {\n  var stackMap = {};\n  Object.keys(stack).forEach(function (item) {\n    stack[item].forEach(function (name) {\n      stackMap[name] = item;\n    });\n  });\n  return stackMap;\n};\n\n\n\n\n\n\n\n\n\nvar getType = function getType(v) {\n  return Object.prototype.toString.call(v);\n};\n\nvar toKebab = function toKebab(v) {\n  return v.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n};\n\nvar isArray = function isArray(v) {\n  return getType(v) === '[object Array]';\n};\n\nvar isObject = function isObject(v) {\n  return getType(v) === '[object Object]';\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction getLineXAxis(args) {\n  var dimension = args.dimension,\n      rows = args.rows,\n      xAxisName = args.xAxisName,\n      axisVisible = args.axisVisible,\n      xAxisType = args.xAxisType;\n\n  return dimension.map(function (item, index) {\n    return {\n      type: xAxisType,\n      nameLocation: 'middle',\n      nameGap: 22,\n      boundaryGap: false,\n      name: xAxisName[index] || '',\n      axisTick: { show: true, lineStyle: { color: '#eee' } },\n      data: rows.map(function (row) {\n        return row[item];\n      }),\n      show: axisVisible\n    };\n  });\n}\n\nfunction getLineSeries(args) {\n  var rows = args.rows,\n      axisSite = args.axisSite,\n      metrics = args.metrics,\n      area = args.area,\n      stack = args.stack,\n      nullAddZero = args.nullAddZero,\n      labelMap = args.labelMap,\n      label = args.label,\n      itemStyle = args.itemStyle,\n      lineStyle = args.lineStyle,\n      areaStyle = args.areaStyle,\n      xAxisType = args.xAxisType,\n      dimension = args.dimension;\n\n  var series = [];\n  var dataTemp = {};\n  var stackMap = stack && getStackMap(stack);\n  metrics.forEach(function (item) {\n    dataTemp[item] = [];\n  });\n  rows.forEach(function (row) {\n    metrics.forEach(function (item) {\n      var value = null;\n      if (row[item] != null) {\n        value = row[item];\n      } else if (nullAddZero) {\n        value = 0;\n      }\n      var dataItem = xAxisType === 'category' ? value : [row[dimension[0]], value];\n      dataTemp[item].push(dataItem);\n    });\n  });\n  metrics.forEach(function (item) {\n    var seriesItem = {\n      name: labelMap[item] != null ? labelMap[item] : item,\n      type: 'line',\n      data: dataTemp[item]\n    };\n\n    if (area) seriesItem.areaStyle = { normal: {} };\n    if (axisSite.right) {\n      seriesItem.yAxisIndex = ~axisSite.right.indexOf(item) ? 1 : 0;\n    }\n\n    if (stack && stackMap[item]) seriesItem.stack = stackMap[item];\n\n    if (label) seriesItem.label = label;\n    if (itemStyle) seriesItem.itemStyle = itemStyle;\n    if (lineStyle) seriesItem.lineStyle = lineStyle;\n    if (areaStyle) seriesItem.areaStyle = areaStyle;\n\n    series.push(seriesItem);\n  });\n  return series.length ? series : false;\n}\n\nfunction getLineYAxis(args) {\n  var yAxisName = args.yAxisName,\n      yAxisType = args.yAxisType,\n      axisVisible = args.axisVisible,\n      scale = args.scale,\n      min = args.min,\n      max = args.max,\n      digit = args.digit;\n\n  var yAxisBase = {\n    type: 'value',\n    axisTick: {\n      show: false\n    },\n    show: axisVisible\n  };\n  var yAxis = [];\n\n  var _loop = function _loop(i) {\n    if (yAxisType[i]) {\n      yAxis[i] = _extends({}, yAxisBase, {\n        axisLabel: {\n          formatter: function formatter(val) {\n            return getFormated(val, yAxisType[i], digit);\n          }\n        }\n      });\n    } else {\n      yAxis[i] = _extends({}, yAxisBase);\n    }\n    yAxis[i].name = yAxisName[i] || '';\n    yAxis[i].scale = scale[i] || false;\n    yAxis[i].min = min[i] || null;\n    yAxis[i].max = max[i] || null;\n  };\n\n  for (var i = 0; i < 2; i++) {\n    _loop(i);\n  }\n  return yAxis;\n}\n\nfunction getLineTooltip(args) {\n  var axisSite = args.axisSite,\n      yAxisType = args.yAxisType,\n      digit = args.digit,\n      labelMap = args.labelMap,\n      xAxisType = args.xAxisType;\n\n  var rightItems = axisSite.right || [];\n  var rightList = labelMap ? rightItems.map(function (item) {\n    return labelMap[item] === undefined ? item : labelMap[item];\n  }) : rightItems;\n  return {\n    trigger: 'axis',\n    formatter: function formatter(items) {\n      var tpl = [];\n      var _items$ = items[0],\n          name = _items$.name,\n          axisValueLabel = _items$.axisValueLabel;\n\n      var title = name || axisValueLabel;\n      tpl.push(title + '<br>');\n      items.forEach(function (item) {\n        var showData = null;\n        var type = ~rightList.indexOf(item.seriesName) ? yAxisType[1] : yAxisType[0];\n        var data = xAxisType === 'category' ? item.data : item.data[1];\n        showData = getFormated(data, type, digit);\n        tpl.push(itemPoint(item.color));\n        tpl.push(item.seriesName + ': ' + showData);\n        tpl.push('<br>');\n      });\n      return tpl.join('');\n    }\n  };\n}\n\nfunction getLegend(args) {\n  var metrics = args.metrics,\n      legendName = args.legendName,\n      labelMap = args.labelMap;\n\n  if (!legendName && !labelMap) return { data: metrics };\n  var data = labelMap ? metrics.map(function (item) {\n    return labelMap[item] == null ? item : labelMap[item];\n  }) : metrics;\n  return {\n    data: data,\n    formatter: function formatter(name) {\n      return legendName[name] != null ? legendName[name] : name;\n    }\n  };\n}\n\nvar line = function line(columns, rows, settings, extra) {\n  var _settings$axisSite = settings.axisSite,\n      axisSite = _settings$axisSite === undefined ? {} : _settings$axisSite,\n      _settings$yAxisType = settings.yAxisType,\n      yAxisType = _settings$yAxisType === undefined ? ['normal', 'normal'] : _settings$yAxisType,\n      _settings$xAxisType = settings.xAxisType,\n      xAxisType = _settings$xAxisType === undefined ? 'category' : _settings$xAxisType,\n      _settings$yAxisName = settings.yAxisName,\n      yAxisName = _settings$yAxisName === undefined ? [] : _settings$yAxisName,\n      _settings$dimension = settings.dimension,\n      dimension = _settings$dimension === undefined ? [columns[0]] : _settings$dimension,\n      _settings$xAxisName = settings.xAxisName,\n      xAxisName = _settings$xAxisName === undefined ? [] : _settings$xAxisName,\n      _settings$axisVisible = settings.axisVisible,\n      axisVisible = _settings$axisVisible === undefined ? true : _settings$axisVisible,\n      area = settings.area,\n      stack = settings.stack,\n      _settings$scale = settings.scale,\n      scale = _settings$scale === undefined ? [false, false] : _settings$scale,\n      _settings$min = settings.min,\n      min = _settings$min === undefined ? [null, null] : _settings$min,\n      _settings$max = settings.max,\n      max = _settings$max === undefined ? [null, null] : _settings$max,\n      _settings$nullAddZero = settings.nullAddZero,\n      nullAddZero = _settings$nullAddZero === undefined ? false : _settings$nullAddZero,\n      _settings$digit = settings.digit,\n      digit = _settings$digit === undefined ? 2 : _settings$digit,\n      _settings$legendName = settings.legendName,\n      legendName = _settings$legendName === undefined ? {} : _settings$legendName,\n      _settings$labelMap = settings.labelMap,\n      labelMap = _settings$labelMap === undefined ? {} : _settings$labelMap,\n      label = settings.label,\n      itemStyle = settings.itemStyle,\n      lineStyle = settings.lineStyle,\n      areaStyle = settings.areaStyle;\n  var tooltipVisible = extra.tooltipVisible,\n      legendVisible = extra.legendVisible;\n\n  var metrics = columns.slice();\n\n  if (axisSite.left && axisSite.right) {\n    metrics = axisSite.left.concat(axisSite.right);\n  } else if (axisSite.left && !axisSite.right) {\n    metrics = axisSite.left;\n  } else if (settings.metrics) {\n    metrics = settings.metrics;\n  } else {\n    metrics.splice(columns.indexOf(dimension[0]), 1);\n  }\n\n  var legend = legendVisible && getLegend({ metrics: metrics, legendName: legendName, labelMap: labelMap });\n  var tooltip = tooltipVisible && getLineTooltip({\n    axisSite: axisSite,\n    yAxisType: yAxisType,\n    digit: digit,\n    labelMap: labelMap,\n    xAxisType: xAxisType\n  });\n  var xAxis = getLineXAxis({\n    dimension: dimension,\n    rows: rows,\n    xAxisName: xAxisName,\n    axisVisible: axisVisible,\n    xAxisType: xAxisType\n  });\n  var yAxis = getLineYAxis({\n    yAxisName: yAxisName,\n    yAxisType: yAxisType,\n    axisVisible: axisVisible,\n    scale: scale,\n    min: min,\n    max: max,\n    digit: digit\n  });\n  var series = getLineSeries({\n    rows: rows,\n    axisSite: axisSite,\n    metrics: metrics,\n    area: area,\n    stack: stack,\n    nullAddZero: nullAddZero,\n    labelMap: labelMap,\n    label: label,\n    itemStyle: itemStyle,\n    lineStyle: lineStyle,\n    areaStyle: areaStyle,\n    xAxisType: xAxisType,\n    dimension: dimension\n  });\n  if (!xAxis || !series) return false;\n\n  var options = { legend: legend, xAxis: xAxis, series: series, yAxis: yAxis, tooltip: tooltip };\n  return options;\n};\n\nvar Loading = { render: function render() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { staticClass: \"v-charts-component-loading\" }, [_c('div', { staticClass: \"loader\" }, [_c('div', { staticClass: \"loading-spinner\" }, [_c('svg', { staticClass: \"circular\", attrs: { \"viewBox\": \"25 25 50 50\" } }, [_c('circle', { staticClass: \"path\", attrs: { \"cx\": \"50\", \"cy\": \"50\", \"r\": \"20\", \"fill\": \"none\" } })])])])]);\n  }, staticRenderFns: []\n};\n\nvar DataEmpty = { render: function render() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { staticClass: \"v-charts-data-empty\" }, [_vm._v(\" 暂无数据 \")]);\n  }, staticRenderFns: []\n};\n\nvar Core = {\n  render: function render(h) {\n    return h('div', {\n      class: [toKebab(this.$options.name || this.$options._componentTag)],\n      style: this.canvasStyle\n    }, [h('div', {\n      style: this.canvasStyle,\n      ref: 'canvas'\n    }), h(Loading, {\n      style: { display: this.loading ? '' : 'none' }\n    }), h(DataEmpty, {\n      style: { display: this.dataEmpty ? '' : 'none' }\n    }), this.$slots.default]);\n  },\n\n\n  props: {\n    data: { type: [Object, Array], default: function _default() {\n        return {};\n      }\n    },\n    settings: { type: Object, default: function _default() {\n        return {};\n      }\n    },\n    width: { type: String, default: 'auto' },\n    height: { type: String, default: '400px' },\n    beforeConfig: { type: Function },\n    afterConfig: { type: Function },\n    afterSetOption: { type: Function },\n    afterSetOptionOnce: { type: Function },\n    events: { type: Object },\n    grid: { type: Object },\n    colors: { type: Array },\n    tooltipVisible: { type: Boolean, default: true },\n    legendVisible: { type: Boolean, default: true },\n    legendPosition: { type: String },\n    markLine: { type: Object },\n    markArea: { type: Object },\n    markPoint: { type: Object },\n    visualMap: { type: [Object, Array] },\n    dataZoom: { type: [Object, Array] },\n    toolbox: { type: Object },\n    initOptions: { type: Object, default: function _default() {\n        return {};\n      }\n    },\n    title: Object,\n    legend: Object,\n    xAxis: Object,\n    yAxis: [Object, Array],\n    radar: Object,\n    tooltip: Object,\n    axisPointer: Object,\n    brush: Object,\n    geo: Object,\n    timeline: Object,\n    graphic: Object,\n    series: [Object, Array],\n    backgroundColor: [Object, String],\n    textStyle: Object,\n    animation: Object,\n    theme: Object,\n    themeName: String,\n    loading: Boolean,\n    dataEmpty: Boolean,\n    extend: Object,\n    judgeWidth: { type: Boolean, default: true },\n    widthChangeDelay: { type: Number, default: 300 }\n  },\n\n  watch: {\n    data: {\n      deep: true,\n      handler: function handler(v) {\n        if (v) {\n          this.dataHandler(v);\n        }\n      }\n    },\n\n    settings: {\n      deep: true,\n      handler: function handler(v) {\n        if (v.type && this.chartLib) this.chartHandler = this.chartLib[v.type];\n        this.dataHandler(this.data);\n      }\n    },\n\n    events: {\n      deep: true,\n      handler: function handler() {\n        this.createEventProxy();\n      }\n    }\n  },\n\n  computed: {\n    canvasStyle: function canvasStyle() {\n      return {\n        width: this.width,\n        height: this.height,\n        position: 'relative'\n      };\n    },\n    chartColor: function chartColor() {\n      return this.colors || this.theme && this.theme.color || color;\n    }\n  },\n\n  methods: {\n    dataHandler: function dataHandler(data) {\n      if (!this.chartHandler) return;\n      var _data = data,\n          _data$columns = _data.columns,\n          columns = _data$columns === undefined ? [] : _data$columns,\n          _data$rows = _data.rows,\n          rows = _data$rows === undefined ? [] : _data$rows;\n\n      var extra = {\n        tooltipVisible: this.tooltipVisible,\n        legendVisible: this.legendVisible,\n        echarts: this.echarts,\n        color: this.chartColor\n      };\n      if (this.beforeConfig) data = this.beforeConfig(data);\n\n      var options = this.chartHandler(columns, rows, this.settings, extra);\n      if (options) {\n        if (typeof options.then === 'function') {\n          options.then(this.optionsHandler);\n        } else {\n          this.optionsHandler(options);\n        }\n      }\n    },\n    resize: function resize() {\n      this.echarts.resize();\n    },\n    optionsHandler: function optionsHandler(options) {\n      var _this = this;\n\n      if (this.legendPosition && options.legend) {\n        options.legend[this.legendPosition] = 10;\n        if (~['left', 'right'].indexOf(this.legendPosition)) {\n          options.legend.top = 'middle';\n          options.legend.orient = 'vertical';\n        }\n      }\n      if (!this.themeName) options.color = this.chartColor;\n      var echartsSettings = ['grid', 'dataZoom', 'visualMap', 'toolbox', 'title', 'legend', 'xAxis', 'yAxis', 'radar', 'tooltip', 'axisPointer', 'brush', 'geo', 'timeline', 'graphic', 'series', 'backgroundColor', 'textStyle'];\n      echartsSettings.forEach(function (setting) {\n        if (_this[setting]) options[setting] = _this[setting];\n      });\n      if (this.animation) {\n        Object.keys(this.animation).forEach(function (key) {\n          options[key] = _this.animation[key];\n        });\n      }\n      if (this.markArea || this.markLine || this.markPoint) {\n        var marks = {\n          markArea: this.markArea,\n          markLine: this.markLine,\n          markPoint: this.markPoint\n        };\n        var series = options.series;\n        if (getType(series) === '[object Array]') {\n          series.forEach(function (item) {\n            _this.addMark(item, marks);\n          });\n        } else if (getType(series) === '[object Object]') {\n          this.addMark(series, marks);\n        }\n      }\n\n      // extend sub attribute\n      if (this.extend) {\n        Object.keys(this.extend).forEach(function (attr) {\n          if (typeof _this.extend[attr] === 'function') {\n            // get callback value\n            options[attr] = _this.extend[attr](options[attr]);\n          } else {\n            // mixin extend value\n            if (isArray(options[attr]) && isObject(options[attr][0])) {\n              // eg: [{ xx: 1 }, { xx: 2 }]\n              options[attr].forEach(function (option, index) {\n                options[attr][index] = _extends({}, option, _this.extend[attr]);\n              });\n            } else if (isObject(options[attr])) {\n              // eg: { xx: 1, yy: 2 }\n              options[attr] = _extends({}, options[attr], _this.extend[attr]);\n            } else {\n              options[attr] = _this.extend[attr];\n            }\n          }\n        });\n      }\n\n      if (this.afterConfig) options = this.afterConfig(options);\n      this.echarts.setOption(options, true);\n      if (this.judgeWidth) this.judgeWidthHandler(options);\n      if (this.afterSetOption) this.afterSetOption(this.echarts);\n      if (this.afterSetOptionOnce && !this._once['afterSetOptionOnce']) {\n        this._once['afterSetOptionOnce'] = this.afterSetOptionOnce(this.echarts);\n      }\n    },\n    judgeWidthHandler: function judgeWidthHandler(options) {\n      var _this2 = this;\n\n      if (this.$el.clientWidth) {\n        this.echarts.resize();\n      } else {\n        this.$nextTick(function (_) {\n          if (_this2.$el.clientWidth) {\n            _this2.echarts.resize();\n          } else {\n            setTimeout(function (_) {\n              _this2.echarts.resize();\n              if (!_this2.$el.clientWidth) {\n                console.warn(' Can\\'t get dom width or height ');\n              }\n            }, _this2.widthChangeDelay);\n          }\n        });\n      }\n    },\n    addMark: function addMark(seriesItem, marks) {\n      Object.keys(marks).forEach(function (key) {\n        if (marks[key]) {\n          seriesItem[key] = marks[key];\n        }\n      });\n    },\n    init: function init() {\n      if (this.echarts) return;\n      var themeName = this.themeName || (this.theme ? 'outer-theme' : 've-chart');\n      this.echarts = this.echartsLib.init(this.$refs.canvas, themeName, this.initOptions);\n      if (this.data) this.dataHandler(this.data);\n      this.createEventProxy();\n    },\n    addWatchToProps: function addWatchToProps() {\n      var _this3 = this;\n\n      var watchedVariable = this._watchers.map(function (watcher) {\n        return watcher.expression;\n      });\n      Object.keys(this.$props).forEach(function (prop) {\n        if (!~watchedVariable.indexOf(prop)) {\n          var opts = {};\n          if (getType(prop) === '[object Object]') {\n            opts.deep = true;\n          }\n          _this3.$watch(prop, function () {\n            _this3.dataHandler(_this3.data);\n          }, opts);\n        }\n      });\n    },\n    registerTheme: function registerTheme() {\n      echarts.registerTheme('outer-theme', this.theme);\n    },\n    createEventProxy: function createEventProxy() {\n      var _this4 = this;\n\n      // 只要用户使用 on 方法绑定的事件都做一层代理，\n      // 是否真正执行相应的事件方法取决于该方法是否仍然存在 events 中\n      // 实现 events 的动态响应\n      var self = this;\n      var keys = Object.keys(this.events || {});\n      keys.length && keys.forEach(function (ev) {\n        if (_this4.registeredEvents.indexOf(ev) === -1) {\n          _this4.registeredEvents.push(ev);\n          _this4.echarts.on(ev, function (ev) {\n            return function () {\n              if (ev in self.events) {\n                for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n                  args[_key] = arguments[_key];\n                }\n\n                self.events[ev].apply(null, args);\n              }\n            };\n          }(ev));\n        }\n      });\n    }\n  },\n\n  created: function created() {\n    this.echarts = null;\n    this.registeredEvents = [];\n    this._once = {};\n    this.addWatchToProps();\n    if (this.theme) this.registerTheme();\n  },\n  mounted: function mounted() {\n    this.init();\n    window.addEventListener('resize', this.echarts.resize);\n  },\n  beforeDestroy: function beforeDestroy() {\n    window.removeEventListener('resize', this.echarts.resize);\n    this.echarts.dispose();\n  }\n};\n\nvar index = {\n  name: 'VeLine',\n  mixins: [Core],\n  created: function created() {\n    this.chartHandler = line;\n    this.echartsLib = echarts;\n  }\n};\n\nreturn index;\n\n})));\n\n\n/***/ }),\n/* 389 */,\n/* 390 */,\n/* 391 */,\n/* 392 */,\n/* 393 */,\n/* 394 */,\n/* 395 */,\n/* 396 */,\n/* 397 */,\n/* 398 */,\n/* 399 */,\n/* 400 */,\n/* 401 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', [_c('mt-header', {\n    attrs: {\n      \"title\": \"图表示例\"\n    }\n  }, [_c('router-link', {\n    attrs: {\n      \"slot\": \"left\",\n      \"to\": \"/index\"\n    },\n    slot: \"left\"\n  }, [_c('mt-button', {\n    attrs: {\n      \"icon\": \"back\"\n    }\n  }, [_vm._v(\"返回\")])], 1), _vm._v(\" \"), _c('mt-button', {\n    attrs: {\n      \"slot\": \"right\",\n      \"icon\": \"more\"\n    },\n    slot: \"right\"\n  })], 1), _vm._v(\" \"), _c('ve-line', {\n    attrs: {\n      \"data\": _vm.chartData\n    }\n  })], 1)\n},staticRenderFns: []}\n\n/***/ }),\n/* 402 */,\n/* 403 */,\n/* 404 */,\n/* 405 */,\n/* 406 */,\n/* 407 */,\n/* 408 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(204);\n\nvar vec2 = __webpack_require__(207);\n\nvar Draggable = __webpack_require__(440);\n\nvar Eventful = __webpack_require__(224);\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = proxy; // Attach handler\n\n  proxy.handler = this;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  util.each(handlerNames, function (name) {\n    proxy.on && proxy.on(name, this[name], this);\n  }, this);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mosueup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;\n\n/***/ }),\n/* 409 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(204);\n\nvar _config = __webpack_require__(229);\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = __webpack_require__(270);\n\nvar Pattern = __webpack_require__(269);\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style; // 没append呢，请原谅我这样写，清晰~\n\n  newDomStyle.position = 'absolute';\n  newDomStyle.left = 0;\n  newDomStyle.top = 0;\n  newDomStyle.width = width + 'px';\n  newDomStyle.height = height + 'px';\n  newDom.width = width * dpr;\n  newDom.height = height * dpr; // id不作为索引用，避免可能造成的重名，定义为私有属性\n\n  newDom.setAttribute('data-zr-dom-id', id);\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  elCount: 0,\n  __dirty: true,\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.__currentValues = {};\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n    this.ctxBack.__currentValues = {};\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n    domStyle.width = width + 'px';\n    domStyle.height = height + 'px';\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} clearAll Clear all with out motion blur\n   */\n  clear: function (clearAll) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor) {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;\n\n/***/ }),\n/* 410 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(229);\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = __webpack_require__(204);\n\nvar log = __webpack_require__(267);\n\nvar BoundingRect = __webpack_require__(214);\n\nvar timsort = __webpack_require__(237);\n\nvar Layer = __webpack_require__(409);\n\nvar requestAnimationFrame = __webpack_require__(261);\n\nvar Image = __webpack_require__(268);\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n// PENDIGN\n// Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n//\n// Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\nvar MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction preProcessLayer(layer) {\n  layer.__unusedCount++;\n}\n\nfunction postProcessLayer(layer) {\n  if (layer.__unusedCount == 1) {\n    layer.clear();\n  }\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @type {private}\n   */\n\n  this._layerConfig = {};\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    if (opts.width != null) {\n      root.width = opts.width;\n    }\n\n    if (opts.height != null) {\n      root.height = opts.height;\n    } // Use canvas width and height directly\n\n\n    var width = root.width;\n    var height = root.height;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n\n    var mainLayer = new Layer(root, this, 1);\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[0] = mainLayer;\n    zlevelList.push(0);\n    this._domRoot = root;\n  } // Layers for progressive rendering\n\n\n  this._progressiveLayers = [];\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n  this._hoverlayer;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n\n    this._paintList(list, paintAll); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        layer.refresh();\n      }\n    }\n\n    this.refreshHover();\n\n    if (this._progressiveLayers.length) {\n      this._startProgessive();\n    }\n\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(1e5);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  _startProgessive: function () {\n    var self = this;\n\n    if (!self._furtherProgressive) {\n      return;\n    } // Use a token to stop progress steps triggered by\n    // previous zr.refresh calling.\n\n\n    var token = self._progressiveToken = +new Date();\n    self._progress++;\n    requestAnimationFrame(step);\n\n    function step() {\n      // In case refreshed or disposed\n      if (token === self._progressiveToken && self.storage) {\n        self._doPaintList(self.storage.getDisplayList());\n\n        if (self._furtherProgressive) {\n          self._progress++;\n          requestAnimationFrame(step);\n        } else {\n          self._progressiveToken = -1;\n        }\n      }\n    }\n  },\n  _clearProgressive: function () {\n    this._progressiveToken = -1;\n    this._progress = 0;\n    util.each(this._progressiveLayers, function (layer) {\n      layer.__dirty && layer.clear();\n    });\n  },\n  _paintList: function (list, paintAll) {\n    if (paintAll == null) {\n      paintAll = false;\n    }\n\n    this._updateLayerStatus(list);\n\n    this._clearProgressive();\n\n    this.eachBuiltinLayer(preProcessLayer);\n\n    this._doPaintList(list, paintAll);\n\n    this.eachBuiltinLayer(postProcessLayer);\n  },\n  _doPaintList: function (list, paintAll) {\n    var currentLayer;\n    var currentZLevel;\n    var ctx; // var invTransform = [];\n\n    var scope;\n    var progressiveLayerIdx = 0;\n    var currentProgressiveLayer;\n    var width = this._width;\n    var height = this._height;\n    var layerProgress;\n    var frame = this._progress;\n\n    function flushProgressiveLayer(layer) {\n      var dpr = ctx.dpr || 1;\n      ctx.save();\n      ctx.globalAlpha = 1;\n      ctx.shadowBlur = 0; // Avoid layer don't clear in next progressive frame\n\n      currentLayer.__dirty = true;\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n      ctx.restore();\n    }\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n      var elFrame = el.__frame; // Flush at current context\n      // PENDING\n\n      if (elFrame < 0 && currentProgressiveLayer) {\n        flushProgressiveLayer(currentProgressiveLayer);\n        currentProgressiveLayer = null;\n      } // Change draw layer\n\n\n      if (currentZLevel !== elZLevel) {\n        if (ctx) {\n          ctx.restore();\n        } // Reset scope\n\n\n        scope = {}; // Only 0 zlevel if only has one canvas\n\n        currentZLevel = elZLevel;\n        currentLayer = this.getLayer(currentZLevel);\n\n        if (!currentLayer.__builtin__) {\n          log('ZLevel ' + currentZLevel + ' has been used by unkown layer ' + currentLayer.id);\n        }\n\n        ctx = currentLayer.ctx;\n        ctx.save(); // Reset the count\n\n        currentLayer.__unusedCount = 0;\n\n        if (currentLayer.__dirty || paintAll) {\n          currentLayer.clear();\n        }\n      }\n\n      if (!(currentLayer.__dirty || paintAll)) {\n        continue;\n      }\n\n      if (elFrame >= 0) {\n        // Progressive layer changed\n        if (!currentProgressiveLayer) {\n          currentProgressiveLayer = this._progressiveLayers[Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)];\n          currentProgressiveLayer.ctx.save();\n          currentProgressiveLayer.renderScope = {};\n\n          if (currentProgressiveLayer && currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress) {\n            // flushProgressiveLayer(currentProgressiveLayer);\n            // Quick jump all progressive elements\n            // All progressive element are not dirty, jump over and flush directly\n            i = currentProgressiveLayer.__nextIdxNotProg - 1; // currentProgressiveLayer = null;\n\n            continue;\n          }\n\n          layerProgress = currentProgressiveLayer.__progress;\n\n          if (!currentProgressiveLayer.__dirty) {\n            // Keep rendering\n            frame = layerProgress;\n          }\n\n          currentProgressiveLayer.__progress = frame + 1;\n        }\n\n        if (elFrame === frame) {\n          this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n        }\n      } else {\n        this._doPaintEl(el, currentLayer, paintAll, scope);\n      }\n\n      el.__dirty = false;\n    }\n\n    if (currentProgressiveLayer) {\n      flushProgressiveLayer(currentProgressiveLayer);\n    } // Restore the lastLayer ctx\n\n\n    ctx && ctx.restore(); // If still has clipping state\n    // if (scope.prevElClipPaths) {\n    //     ctx.restore();\n    // }\n\n    this._furtherProgressive = false;\n    util.each(this._progressiveLayers, function (layer) {\n      if (layer.__maxProgress >= layer.__progress) {\n        this._furtherProgressive = true;\n      }\n    }, this);\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (scope.prevClipLayer !== currentLayer || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          scope.prevClipLayer.ctx.restore();\n          scope.prevClipLayer = scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevClipLayer = currentLayer;\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel) {\n    if (this._singleCanvas) {\n      return this._layers[0];\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    var layers = this._layers;\n    var progressiveLayers = this._progressiveLayers;\n    var elCountsLastFrame = {};\n    var progressiveElCountsLastFrame = {};\n    this.eachBuiltinLayer(function (layer, z) {\n      elCountsLastFrame[z] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    util.each(progressiveLayers, function (layer, idx) {\n      progressiveElCountsLastFrame[idx] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    var progressiveLayerCount = 0;\n    var currentProgressiveLayer;\n    var lastProgressiveKey;\n    var frameCount = 0;\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var zlevel = this._singleCanvas ? 0 : el.zlevel;\n      var layer = layers[zlevel];\n      var elProgress = el.progressive;\n\n      if (layer) {\n        layer.elCount++;\n        layer.__dirty = layer.__dirty || el.__dirty;\n      } /////// Update progressive\n\n\n      if (elProgress >= 0) {\n        // Fix wrong progressive sequence problem.\n        if (lastProgressiveKey !== elProgress) {\n          lastProgressiveKey = elProgress;\n          frameCount++;\n        }\n\n        var elFrame = el.__frame = frameCount - 1;\n\n        if (!currentProgressiveLayer) {\n          var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n          currentProgressiveLayer = progressiveLayers[idx];\n\n          if (!currentProgressiveLayer) {\n            currentProgressiveLayer = progressiveLayers[idx] = new Layer('progressive', this, this.dpr);\n            currentProgressiveLayer.initContext();\n          }\n\n          currentProgressiveLayer.__maxProgress = 0;\n        }\n\n        currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n        currentProgressiveLayer.elCount++;\n        currentProgressiveLayer.__maxProgress = Math.max(currentProgressiveLayer.__maxProgress, elFrame);\n\n        if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n          // Should keep rendering this  layer because progressive rendering is not finished yet\n          layer.__dirty = true;\n        }\n      } else {\n        el.__frame = -1;\n\n        if (currentProgressiveLayer) {\n          currentProgressiveLayer.__nextIdxNotProg = i;\n          progressiveLayerCount++;\n          currentProgressiveLayer = null;\n        }\n      }\n    }\n\n    if (currentProgressiveLayer) {\n      progressiveLayerCount++;\n      currentProgressiveLayer.__nextIdxNotProg = i;\n    } // 层中的元素数量有发生变化\n\n\n    this.eachBuiltinLayer(function (layer, z) {\n      if (elCountsLastFrame[z] !== layer.elCount) {\n        layer.__dirty = true;\n      }\n    });\n    progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n    util.each(progressiveLayers, function (layer, idx) {\n      if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n        el.__dirty = true;\n      }\n\n      if (layer.__dirty) {\n        layer.__progress = 0;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      var layer = this._layers[zlevel];\n\n      if (layer) {\n        util.merge(layer, layerConfig[zlevel], true);\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    var domRoot = this._domRoot; // FIXME Why ?\n\n    domRoot.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    domRoot.style.display = ''; // 优化没有实际改变的resize\n\n    if (this._width != width || height != this._height) {\n      domRoot.style.width = width + 'px';\n      domRoot.style.height = height + 'px';\n\n      for (var id in this._layers) {\n        if (this._layers.hasOwnProperty(id)) {\n          this._layers[id].resize(width, height);\n        }\n      }\n\n      util.each(this._progressiveLayers, function (layer) {\n        layer.resize(width, height);\n      });\n      this.refresh(true);\n    }\n\n    this._width = width;\n    this._height = height;\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas) {\n      return this._layers[0].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clearColor = opts.backgroundColor;\n    imageLayer.clear();\n    var displayList = this.storage.getDisplayList(true);\n    var scope = {};\n    var zlevel;\n    var self = this;\n\n    function findAndDrawOtherLayer(smaller, larger) {\n      var zlevelList = self._zlevelList;\n\n      if (smaller == null) {\n        smaller = -Infinity;\n      }\n\n      var intermediateLayer;\n\n      for (var i = 0; i < zlevelList.length; i++) {\n        var z = zlevelList[i];\n        var layer = self._layers[z];\n\n        if (!layer.__builtin__ && z > smaller && z < larger) {\n          intermediateLayer = layer;\n          break;\n        }\n      }\n\n      if (intermediateLayer && intermediateLayer.renderToCanvas) {\n        imageLayer.ctx.save();\n        intermediateLayer.renderToCanvas(imageLayer.ctx);\n        imageLayer.ctx.restore();\n      }\n    }\n\n    for (var i = 0; i < displayList.length; i++) {\n      var el = displayList[i];\n\n      if (el.zlevel !== zlevel) {\n        findAndDrawOtherLayer(zlevel, el.zlevel);\n        zlevel = el.zlevel;\n      }\n\n      this._doPaintEl(el, imageLayer, true, scope);\n    }\n\n    findAndDrawOtherLayer(zlevel, Infinity);\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur;\n    var shadowOffsetX = style.shadowOffsetX;\n    var shadowOffsetY = style.shadowOffsetY;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;\n\n/***/ }),\n/* 411 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(204);\n\nvar env = __webpack_require__(212);\n\nvar Group = __webpack_require__(230);\n\nvar timsort = __webpack_require__(237);\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen; // for (var i = 0, len = displayList.length; i < len; i++) {\n    //     displayList[i].__renderidx = i;\n    // }\n    // displayList.sort(shapeCompareFunc);\n\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    el.__storage = this;\n    el.dirty(false);\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;\n\n/***/ }),\n/* 412 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(204);\n\nvar _event = __webpack_require__(223);\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = __webpack_require__(261);\n\nvar Animator = __webpack_require__(260);\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta);\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * 开始运行动画\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * 停止运行动画\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * 清除所有动画片段\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] 是否循环播放动画\n   * @param  {Function} [options.getter=null]\n   *         如果指定getter函数，会通过getter函数取属性值\n   * @param  {Function} [options.setter=null]\n   *         如果指定setter函数，会通过setter函数设置属性值\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;\n\n/***/ }),\n/* 413 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar easingFuncs = __webpack_require__(414);\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;\n\n/***/ }),\n/* 414 */\n/***/ (function(module, exports) {\n\n/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;\n\n/***/ }),\n/* 415 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(262);\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n/* 416 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar curve = __webpack_require__(221);\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n/* 417 */\n/***/ (function(module, exports) {\n\n/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n/* 418 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar PathProxy = __webpack_require__(231);\n\nvar line = __webpack_require__(417);\n\nvar cubic = __webpack_require__(416);\n\nvar quadratic = __webpack_require__(420);\n\nvar arc = __webpack_require__(415);\n\nvar _util = __webpack_require__(262);\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = __webpack_require__(221);\n\nvar windingLine = __webpack_require__(263);\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;\n\n/***/ }),\n/* 419 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar windingLine = __webpack_require__(263);\n\nvar EPSILON = 1e-8;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nfunction contain(points, x, y) {\n  var w = 0;\n  var p = points[0];\n\n  if (!p) {\n    return false;\n  }\n\n  for (var i = 1; i < points.length; i++) {\n    var p2 = points[i];\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n    p = p2;\n  } // Close polygon\n\n\n  var p0 = points[0];\n\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n  }\n\n  return w !== 0;\n}\n\nexports.contain = contain;\n\n/***/ }),\n/* 420 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curve = __webpack_require__(221);\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n/* 421 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar eventUtil = __webpack_require__(223);\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;\n\n/***/ }),\n/* 422 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _event = __webpack_require__(223);\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = __webpack_require__(204);\n\nvar Eventful = __webpack_require__(224);\n\nvar env = __webpack_require__(212);\n\nvar GestureMgr = __webpack_require__(421);\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style.cursor = cursorStyle || 'default';\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;\n\n/***/ }),\n/* 423 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(210);\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 424 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(204);\n\nvar Gradient = __webpack_require__(239);\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;\n\n/***/ }),\n/* 425 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(204);\n\nvar Gradient = __webpack_require__(239);\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;\n\n/***/ }),\n/* 426 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(238);\n\nvar zrUtil = __webpack_require__(204);\n\nvar textContain = __webpack_require__(220);\n\nvar textHelper = __webpack_require__(274);\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;\n\n/***/ }),\n/* 427 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(207);\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 428 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(207);\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 429 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar textHelper = __webpack_require__(274);\n\nvar BoundingRect = __webpack_require__(214);\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;\n\n/***/ }),\n/* 430 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(210);\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 431 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(210);\n\nvar vec2 = __webpack_require__(207);\n\nvar _curve = __webpack_require__(221);\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 432 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(210);\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 433 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(210);\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 434 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(210);\n\nvar polyHelper = __webpack_require__(272);\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 435 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(210);\n\nvar polyHelper = __webpack_require__(272);\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 436 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(210);\n\nvar roundRectHelper = __webpack_require__(273);\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 437 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(210);\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 438 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(210);\n\nvar fixClipWithShadow = __webpack_require__(271);\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 439 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Animator = __webpack_require__(260);\n\nvar log = __webpack_require__(267);\n\nvar _util = __webpack_require__(204);\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;\n\n/***/ }),\n/* 440 */\n/***/ (function(module, exports) {\n\n// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;\n\n/***/ }),\n/* 441 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(210);\n\nvar PathProxy = __webpack_require__(231);\n\nvar transformPath = __webpack_require__(442);\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;\n\n/***/ }),\n/* 442 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar PathProxy = __webpack_require__(231);\n\nvar _vector = __webpack_require__(207);\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;\n\n/***/ })\n]));\n\n\n// WEBPACK FOOTER //\n// static/js/0.443de346fa084594d539.js","var Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./vcharts.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-6b10354f\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./vcharts.vue\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/vcharts.vue\n// module id = 203\n// module chunks = 0","/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    result = [];\n\n    for (var i = 0, len = source.length; i < len; i++) {\n      result[i] = clone(source[i]);\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    var Ctor = source.constructor;\n\n    if (source.constructor.from) {\n      result = Ctor.from(source);\n    } else {\n      result = new Ctor(source.length);\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  obj && each(obj, function (value, key) {\n    this.set(key, value);\n  }, this);\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nvar HASH_MAP_PREFIX = '_ec_';\nvar HASH_MAP_PREFIX_LENGTH = 4;\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this[HASH_MAP_PREFIX + key];\n  },\n  set: function (key, value) {\n    this[HASH_MAP_PREFIX + key] = value; // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n\n    return value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var prefixedKey in this) {\n      this.hasOwnProperty(prefixedKey) && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[HASH_MAP_PREFIX + key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.noop = noop;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/util.js\n// module id = 204\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar pathTool = require(\"zrender/lib/tool/path\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\nvar Image = require(\"zrender/lib/graphic/Image\");\n\nexports.Image = Image;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nexports.Group = Group;\n\nvar Text = require(\"zrender/lib/graphic/Text\");\n\nexports.Text = Text;\n\nvar Circle = require(\"zrender/lib/graphic/shape/Circle\");\n\nexports.Circle = Circle;\n\nvar Sector = require(\"zrender/lib/graphic/shape/Sector\");\n\nexports.Sector = Sector;\n\nvar Ring = require(\"zrender/lib/graphic/shape/Ring\");\n\nexports.Ring = Ring;\n\nvar Polygon = require(\"zrender/lib/graphic/shape/Polygon\");\n\nexports.Polygon = Polygon;\n\nvar Polyline = require(\"zrender/lib/graphic/shape/Polyline\");\n\nexports.Polyline = Polyline;\n\nvar Rect = require(\"zrender/lib/graphic/shape/Rect\");\n\nexports.Rect = Rect;\n\nvar Line = require(\"zrender/lib/graphic/shape/Line\");\n\nexports.Line = Line;\n\nvar BezierCurve = require(\"zrender/lib/graphic/shape/BezierCurve\");\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = require(\"zrender/lib/graphic/shape/Arc\");\n\nexports.Arc = Arc;\n\nvar CompoundPath = require(\"zrender/lib/graphic/CompoundPath\");\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = require(\"zrender/lib/graphic/RadialGradient\");\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nexports.BoundingRect = BoundingRect;\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n  var boundingRect = path.getBoundingRect();\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, boundingRect);\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new Image({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke != 'none';\n}\n\nfunction liftColor(color) {\n  return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n}\n/**\n * @private\n */\n\n\nfunction cacheElementStl(el) {\n  if (el.__hoverStlDirty) {\n    var stroke = el.style.stroke;\n    var fill = el.style.fill; // Create hoverStyle on mouseover\n\n    var hoverStyle = el.__hoverStl;\n    hoverStyle.fill = hoverStyle.fill || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n    hoverStyle.stroke = hoverStyle.stroke || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n    var normalStyle = {};\n\n    for (var name in hoverStyle) {\n      // See comment in `doSingleEnterHover`.\n      if (hoverStyle[name] != null) {\n        normalStyle[name] = el.style[name];\n      }\n    }\n\n    el.__normalStl = normalStyle;\n    el.__hoverStlDirty = false;\n  }\n}\n/**\n * @private\n */\n\n\nfunction doSingleEnterHover(el) {\n  if (el.__isHover) {\n    return;\n  }\n\n  cacheElementStl(el);\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.addHover(el, el.__hoverStl);\n  } else {\n    var style = el.style;\n    var insideRollbackOpt = style.insideRollbackOpt; // Consider case: only `position: 'top'` is set on emphasis, then text\n    // color should be returned to `autoColor`, rather than remain '#fff'.\n    // So we should rollback then apply again after style merging.\n\n    insideRollbackOpt && rollbackInsideStyle(style); // styles can be:\n    // {\n    //     label: {\n    //         normal: {\n    //             show: false,\n    //             position: 'outside',\n    //             fontSize: 18\n    //         },\n    //         emphasis: {\n    //             show: true\n    //         }\n    //     }\n    // },\n    // where properties of `emphasis` may not appear in `normal`. We previously use\n    // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n    // But consider rich text and setOption in merge mode, it is impossible to cover\n    // all properties in merge. So we use merge mode when setting style here, where\n    // only properties that is not `null/undefined` can be set. The disadventage:\n    // null/undefined can not be used to remove style any more in `emphasis`.\n\n    style.extendFrom(el.__hoverStl); // Do not save `insideRollback`.\n\n    if (insideRollbackOpt) {\n      applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt); // textFill may be rollbacked to null.\n\n      if (style.textFill == null) {\n        style.textFill = insideRollbackOpt.autoColor;\n      }\n    }\n\n    el.dirty(false);\n    el.z2 += 1;\n  }\n\n  el.__isHover = true;\n}\n/**\n * @inner\n */\n\n\nfunction doSingleLeaveHover(el) {\n  if (!el.__isHover) {\n    return;\n  }\n\n  var normalStl = el.__normalStl;\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.removeHover(el);\n  } else {\n    // Consider null/undefined value, should use\n    // `setStyle` but not `extendFrom(stl, true)`.\n    normalStl && el.setStyle(normalStl);\n    el.z2 -= 1;\n  }\n\n  el.__isHover = false;\n}\n/**\n * @inner\n */\n\n\nfunction doEnterHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleEnterHover(child);\n    }\n  }) : doSingleEnterHover(el);\n}\n\nfunction doLeaveHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleLeaveHover(child);\n    }\n  }) : doSingleLeaveHover(el);\n}\n/**\n * @inner\n */\n\n\nfunction setElementHoverStl(el, hoverStl) {\n  // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n  // Often used when item group has a label element and it's hoverStyle is different\n  el.__hoverStl = el.hoverStyle || hoverStl || {};\n  el.__hoverStlDirty = true;\n\n  if (el.__isHover) {\n    cacheElementStl(el);\n  }\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doLeaveHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction enterEmphasis() {\n  this.__isEmphasis = true;\n  doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction leaveEmphasis() {\n  this.__isEmphasis = false;\n  doLeaveHover(this);\n}\n/**\n * Set hover style of element.\n * This method can be called repeatly without side-effects.\n * @param {module:zrender/Element} el\n * @param {Object} [hoverStyle]\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conviniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      setElementHoverStl(child, hoverStyle);\n    }\n  }) : setElementHoverStl(el, hoverStyle); // Duplicated function will be auto-ignored, see Eventful.js.\n\n  el.on('mouseover', onElementMouseOver).on('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n  el.on('emphasis', enterEmphasis).on('normal', leaveEmphasis);\n}\n/**\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {Object} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText = showNormal || showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex) : null, opt.defaultText) : null;\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             normal: {\n  //                 rich: {\n  //                     // no 'a' here but using parent 'a'.\n  //                 }\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             normal: {\n//                 rich: {\n//                     // no 'a' here but using parent 'a'.\n//                 }\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      // Always set `insideRollback`, for clearing previous.\n      var originalTextPosition = textStyle.textPosition;\n      textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt); // Save original textPosition, because style.textPosition will be repalced by\n      // real location (like [10, 30]) in zrender.\n\n      textStyle.insideOriginalTextPosition = originalTextPosition;\n      textStyle.insideRollbackOpt = opt;\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n\nfunction applyInsideStyle(textStyle, textPosition, opt) {\n  var useInsideStyle = opt.useInsideStyle;\n  var insideRollback;\n\n  if (textStyle.textFill == null && useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = opt.autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  }\n\n  return insideRollback;\n}\n\nfunction rollbackInsideStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return [// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' ');\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new Image(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setHoverStyle = setHoverStyle;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/graphic.js\n// module id = 205\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar formatUtil = require(\"./format\");\n\nvar nubmerUtil = require(\"./number\");\n\nvar Model = require(\"../model/Model\");\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *         normal: {\n *             show: false,\n *             position: 'outside',\n *             fontSize: 18\n *         },\n *         emphasis: {\n *             show: true\n *         }\n *     }\n * @param {Object} opt\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, subOpts) {\n  if (opt) {\n    var emphasisOpt = opt.emphasis = opt.emphasis || {};\n    var normalOpt = opt.normal = opt.normal || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!emphasisOpt.hasOwnProperty(subOptName) && normalOpt.hasOwnProperty(subOptName)) {\n        emphasisOpt[subOptName] = normalOpt[subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  // Performance sensitive.\n  return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    return value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +nubmerUtil.parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n}\n/**\n * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n * @param {module:echarts/data/List} data\n * @param {Object} opt\n * @param {string} [opt.seriesIndex]\n * @param {Object} [opt.name]\n * @param {Object} [opt.mainType]\n * @param {Object} [opt.subType]\n */\n\n\nfunction createDataFormatModel(data, opt) {\n  var model = new Model();\n  zrUtil.mixin(model, dataFormatMixin);\n  model.seriesIndex = opt.seriesIndex;\n  model.name = opt.name || '';\n  model.mainType = opt.mainType;\n  model.subType = opt.subType;\n\n  model.getData = function () {\n    return data;\n  };\n\n  return model;\n} // PENDING A little ugly\n\n\nvar dataFormatMixin = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex, true);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    return {\n      componentType: this.mainType,\n      componentSubType: this.subType,\n      seriesType: this.mainType === 'series' ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: this.id,\n      seriesName: this.name,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      marker: formatUtil.getTooltipMarker(color),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex]\n   * @param {string} [labelProp='label']\n   * @return {string}\n   */\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      return formatUtil.formatTpl(formatter, params);\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getRawValue: function (idx, dataType) {\n    var data = this.getData(dataType);\n    var dataItem = data.getRawDataItem(idx);\n\n    if (dataItem != null) {\n      return isObject(dataItem) && !(dataItem instanceof Array) ? dataItem.value : dataItem;\n    }\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: zrUtil.noop\n};\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name : '\\0-'; // name may be displayed on screen, so use '-'.\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var get = modelUitl.makeGetter();\n *\n * function some(hostObj) {\n *      get(hostObj)._someProperty = 1212;\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nvar makeGetter = function () {\n  var index = 0;\n  return function () {\n    var key = '\\0__ec_prop_getter_' + index++;\n    return function (hostObj) {\n      return hostObj[key] || (hostObj[key] = {});\n    };\n  };\n}();\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string|number} dataDim\n * @return {string}\n */\n\n\nfunction dataDimToCoordDim(data, dataDim) {\n  var dimensions = data.dimensions;\n  dataDim = data.getDimension(dataDim);\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimItem = data.getDimensionInfo(dimensions[i]);\n\n    if (dimItem.name === dataDim) {\n      return dimItem.coordDim;\n    }\n  }\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string} coordDim\n * @return {Array.<string>} data dimensions on the coordDim.\n */\n\n\nfunction coordDimToDataDim(data, coordDim) {\n  var dataDim = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n\n    if (dimItem.coordDim === coordDim) {\n      dataDim[dimItem.coordDimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string} otherDim Can be `otherDims`\n *                        like 'label' or 'tooltip'.\n * @return {Array.<string>} data dimensions on the otherDim.\n */\n\n\nfunction otherDimToDataDim(data, otherDim) {\n  var dataDim = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var otherDims = dimItem.otherDims;\n    var dimIndex = otherDims[otherDim];\n\n    if (dimIndex != null && dimIndex !== false) {\n      dataDim[dimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.converDataValue = converDataValue;\nexports.createDataFormatModel = createDataFormatModel;\nexports.dataFormatMixin = dataFormatMixin;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeGetter = makeGetter;\nexports.parseFinder = parseFinder;\nexports.dataDimToCoordDim = dataDimToCoordDim;\nexports.coordDimToDataDim = coordDimToDataDim;\nexports.otherDimToDataDim = otherDimToDataDim;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/model.js\n// module id = 206\n// module chunks = 0","var ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/vector.js\n// module id = 207\n// module chunks = 0","var _config = require(\"./config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = require(\"zrender/lib/zrender\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar timsort = require(\"zrender/lib/core/timsort\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar GlobalModel = require(\"./model/Global\");\n\nvar ExtensionAPI = require(\"./ExtensionAPI\");\n\nvar CoordinateSystemManager = require(\"./CoordinateSystem\");\n\nvar OptionManager = require(\"./model/OptionManager\");\n\nvar backwardCompat = require(\"./preprocessor/backwardCompat\");\n\nvar ComponentModel = require(\"./model/Component\");\n\nvar SeriesModel = require(\"./model/Series\");\n\nvar ComponentView = require(\"./view/Component\");\n\nvar ChartView = require(\"./view/Chart\");\n\nvar graphic = require(\"./util/graphic\");\n\nvar modelUtil = require(\"./util/model\");\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = require(\"./visual/seriesColor\");\n\nvar loadingDefault = require(\"./loading/default\");\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\nvar each = zrUtil.each;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '3.8.5';\nvar dependencies = {\n  zrender: '3.7.4'\n};\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  this._api = createExtensionAPI(this);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = []; // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.prio - b.prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  zr.animation.on('frame', this._onframe, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  // Lazy update\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    updateMethods.prepareAndUpdate.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (zrUtil.isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    updateMethods.prepareAndUpdate.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToSvg();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var coordSysMgr = this._coordSysMgr;\n    var zr = this._zr; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // Fixme First time update ?\n\n\n    ecModel.restoreData(); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(this._model, this._api);\n    processData.call(this, ecModel, api);\n    stackSeriesData.call(this, ecModel);\n    coordSysMgr.update(ecModel, api);\n    doVisualEncoding.call(this, ecModel, payload);\n    doRender.call(this, ecModel, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n    var painter = zr.painter; // TODO all use clearColor ?\n\n    if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n      zr.configLayer(0, {\n        clearColor: backgroundColor\n      });\n    } else {\n      // In IE8\n      if (!env.canvasSupported) {\n        var colorArr = colorTool.parse(backgroundColor);\n        backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n        if (colorArr[3] === 0) {\n          backgroundColor = 'transparent';\n        }\n      }\n\n      if (backgroundColor.colorStops || backgroundColor.image) {\n        // Gradient background\n        // FIXME Fixed layer？\n        zr.configLayer(0, {\n          clearColor: backgroundColor\n        });\n        this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n        this._dom.style.background = 'transparent';\n      } else {\n        if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n          zr.configLayer(0, {\n            clearColor: null\n          });\n        }\n\n        this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n        this._dom.style.background = backgroundColor;\n      }\n    }\n\n    each(postUpdateFuncs, function (func) {\n      func(ecModel, api);\n    }); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload, true);\n    invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    doLayout.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  prepareAndUpdate: function (payload) {\n    var ecModel = this._model;\n    prepareView.call(this, 'component', ecModel);\n    prepareView.call(this, 'chart', ecModel);\n    updateMethods.update.call(this, payload);\n  }\n};\n/**\n * @private\n */\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n  // If dispatchAction before setOption, do nothing.\n\n  ecModel && ecModel.eachComponent(condition, function (model, index) {\n    callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this[IN_MAIN_PROCESS] = true;\n\n  this._zr.resize(opts);\n\n  var optionChanged = this._model && this._model.resetOption('media');\n\n  var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n  updateMethods[updateMethod].call(this); // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n  this[IN_MAIN_PROCESS] = false;\n  var silent = opts && opts.silent;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (zrUtil.isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!zrUtil.isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      updateMethods.prepareAndUpdate.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * @param {string} methodName\n * @private\n */\n\nfunction invokeUpdateMethod(methodName, ecModel, payload) {\n  var api = this._api; // Update all components\n\n  each(this._componentsViews, function (component) {\n    var componentModel = component.__model;\n    component[methodName](componentModel, ecModel, api, payload);\n    updateZ(componentModel, component);\n  }, this); // Upate all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chart = this._chartsMap[seriesModel.__viewId];\n    chart[methodName](seriesModel, ecModel, api, payload);\n    updateZ(seriesModel, chart);\n    updateProgressiveAndBlend(seriesModel, chart);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Post render\n\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction prepareView(type, ecModel) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? this._componentsViews : this._chartsViews;\n  var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n  var zr = this._zr;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n    if (isComponent) {\n      if (componentType === 'series') {\n        return;\n      }\n    } else {\n      model = componentType;\n    } // Consider: id same and type changed.\n\n\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n\n      if (Clazz) {\n        view = new Clazz();\n        view.init(ecModel, this._api);\n        viewMap[viewId] = view;\n        viewList.push(view);\n        zr.add(view.group);\n      } else {\n        // Error\n        return;\n      }\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n  }, this);\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      zr.remove(view.group);\n      view.dispose(ecModel, this._api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n}\n/**\n * Processor data in each series\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction processData(ecModel, api) {\n  each(dataProcessorFuncs, function (process) {\n    process.func(ecModel, api);\n  });\n}\n/**\n * @private\n */\n\n\nfunction stackSeriesData(ecModel) {\n  var stackedDataMap = {};\n  ecModel.eachSeries(function (series) {\n    var stack = series.get('stack');\n    var data = series.getData();\n\n    if (stack && data.type === 'list') {\n      var previousStack = stackedDataMap[stack]; // Avoid conflict with Object.prototype\n\n      if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n        data.stackedOn = previousStack;\n      }\n\n      stackedDataMap[stack] = data;\n    }\n  });\n}\n/**\n * Layout before each chart render there series, special visual encoding stage\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction doLayout(ecModel, payload) {\n  var api = this._api;\n  each(visualFuncs, function (visual) {\n    if (visual.isLayout) {\n      visual.func(ecModel, api, payload);\n    }\n  });\n}\n/**\n * Encode visual infomation from data after data processing\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {object} layout\n * @param {boolean} [excludesLayout]\n * @private\n */\n\n\nfunction doVisualEncoding(ecModel, payload, excludesLayout) {\n  var api = this._api;\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n  each(visualFuncs, function (visual) {\n    (!excludesLayout || !visual.isLayout) && visual.func(ecModel, api, payload);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction doRender(ecModel, payload) {\n  var api = this._api; // Render all components\n\n  each(this._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  }, this);\n  each(this._chartsViews, function (chart) {\n    chart.__alive = false;\n  }, this); // Render all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chartView = this._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    chartView.render(seriesModel, ecModel, api, payload);\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateProgressiveAndBlend(seriesModel, chartView);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Remove groups of unrendered charts\n\n  each(this._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  }, this);\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateProgressiveAndBlend(seriesModel, chartView) {\n  // Progressive configuration\n  var elCount = 0;\n  chartView.group.traverse(function (el) {\n    if (el.type !== 'group' && !el.ignore) {\n      elCount++;\n    }\n  });\n  var frameDrawNum = +seriesModel.get('progressive');\n  var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n\n  if (needProgressive) {\n    chartView.group.traverse(function (el) {\n      // FIXME marker and other components\n      if (!el.isGroup) {\n        el.progressive = needProgressive ? Math.floor(elCount++ / frameDrawNum) : -1;\n\n        if (needProgressive) {\n          el.stopAnimation(true);\n        }\n      }\n    });\n  } // Blend configration\n\n\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      el.setStyle('blend', blendMode);\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nvar mapDataStores = {};\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  zrUtil.each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        zrUtil.each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n\n  if (dom.setAttribute) {\n    dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n  } else {\n    dom[DOM_ATTRIBUTE_KEY] = chart.id;\n  }\n\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    zrUtil.each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    zrUtil.each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  var key;\n\n  if (dom.getAttribute) {\n    key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n  } else {\n    key = dom[DOM_ATTRIBUTE_KEY];\n  }\n\n  return instances[key];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Function} processorFunc\n */\n\n\nfunction registerProcessor(priority, processorFunc) {\n  if (typeof priority === 'function') {\n    processorFunc = priority;\n    priority = PRIORITY_PROCESSOR_FILTER;\n  }\n\n  dataProcessorFuncs.push({\n    prio: priority,\n    func: processorFunc\n  });\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = zrUtil.isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutFunc\n */\n\n\nfunction registerLayout(priority, layoutFunc) {\n  if (typeof priority === 'function') {\n    layoutFunc = priority;\n    priority = PRIORITY_VISUAL_LAYOUT;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: layoutFunc,\n    isLayout: true\n  });\n}\n/**\n * @param {number} [priority=3000]\n * @param {Function} visualFunc\n */\n\n\nfunction registerVisual(priority, visualFunc) {\n  if (typeof priority === 'function') {\n    visualFunc = priority;\n    priority = PRIORITY_VISUAL_CHART;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: visualFunc\n  });\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  if (geoJson.geoJson && !geoJson.features) {\n    specialAreas = geoJson.specialAreas;\n    geoJson = geoJson.geoJson;\n  }\n\n  if (typeof geoJson === 'string') {\n    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n  }\n\n  mapDataStores[mapName] = {\n    geoJson: geoJson,\n    specialAreas: specialAreas\n  };\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  return mapDataStores[mapName];\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = require(\"./export\");\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/echarts.js\n// module id = 208\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nfunction quantityExponent(val) {\n  return Math.floor(Math.log(val) / Math.LN10);\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.nice = nice;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/number.js\n// module id = 209\n// module chunks = 0","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar pathContain = require(\"../contain/path\");\n\nvar Pattern = require(\"./Pattern\");\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Path.js\n// module id = 210\n// module chunks = 0","// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/config.js\n// module id = 211\n// module chunks = 0","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11)\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/env.js\n// module id = 212\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar numberUtil = require(\"./number\");\n\n/**\n * 每三位默认加,格式化\n * @param {string|number} x\n * @return {string}\n */\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\n\nfunction encodeHTML(source) {\n  return String(source).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    var val = wrapVar(alias, 0);\n    tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {string} color\n * @param {string} [extraCssText]\n * @return {string}\n */\n\n\nfunction getTooltipMarker(color, extraCssText) {\n  return color ? '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '';\n}\n/**\n * @param {string} str\n * @return {string}\n * @inner\n */\n\n\nvar s2d = function (str) {\n  return str < 10 ? '0' + str : str;\n};\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  tpl = tpl.replace('MM', s2d(M)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', s2d(d)).replace('d', d).replace('hh', s2d(h)).replace('h', h).replace('mm', s2d(m)).replace('m', m).replace('ss', s2d(s)).replace('s', s);\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\nvar getTextRect = textContain.getBoundingRect;\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextRect = getTextRect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/format.js\n// module id = 213\n// module chunks = 0","var vec2 = require(\"./vector\");\n\nvar matrix = require(\"./matrix\");\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/BoundingRect.js\n// module id = 214\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar lineStyleMixin = require(\"./mixin/lineStyle\");\n\nvar areaStyleMixin = require(\"./mixin/areaStyle\");\n\nvar textStyleMixin = require(\"./mixin/textStyle\");\n\nvar itemStyleMixin = require(\"./mixin/itemStyle\");\n\n/**\n * @module echarts/model/Model\n */\nvar mixin = zrUtil.mixin;\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function (option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function (path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function (key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function () {\n    return this.option == null;\n  },\n  restoreData: function () {},\n  // Pending\n  clone: function () {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function (properties) {\n    clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function (path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function (getParentMethod) {\n    clazzUtil.set(this, 'getParent', getParentMethod);\n  },\n  isAnimationEnabled: function () {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = clazzUtil.get(model, 'getParent');\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nclazzUtil.enableClassExtend(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Model.js\n// module id = 215\n// module chunks = 0","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\nvar MEMBER_PRIFIX = '\\0ec_\\0';\n/**\n * Hide private class member.\n * The same behavior as `host[name] = value;` (can be right-value)\n * @public\n */\n\nfunction set(host, name, value) {\n  return host[MEMBER_PRIFIX + name] = value;\n}\n/**\n * Hide private class member.\n * The same behavior as `host[name];`\n * @public\n */\n\n\nfunction get(host, name) {\n  return host[MEMBER_PRIFIX + name];\n}\n/**\n * For hidden private class member.\n * The same behavior as `host.hasOwnProperty(name);`\n * @public\n */\n\n\nfunction hasOwn(host, name) {\n  return host.hasOwnProperty(MEMBER_PRIFIX + name);\n}\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function () {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.set = set;\nexports.get = get;\nexports.hasOwn = hasOwn;\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/clazz.js\n// module id = 216\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"./Model\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar layout = require(\"../util/layout\");\n\nvar boxLayoutMixin = require(\"./mixin/boxLayout\");\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar arrayPush = Array.prototype.push;\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('componentModel');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      clazzUtil.set(this, '__defaultOption', defaultOption);\n    }\n\n    return clazzUtil.get(this, '__defaultOption');\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n  }); // Ensure main type\n\n  return zrUtil.map(deps, function (type) {\n    return clazzUtil.parseClassType(type).main;\n  });\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Component.js\n// module id = 217\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"./number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = require(\"./format\");\n\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransfrom),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/layout.js\n// module id = 218\n// module chunks = 0","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar OrdinalScale = require(\"../scale/Ordinal\");\n\nvar IntervalScale = require(\"../scale/Interval\");\n\nvar Scale = require(\"../scale/Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nrequire(\"../scale/Time\");\n\nrequire(\"../scale/Log\");\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var fixMin = min != null;\n  var fixMax = max != null;\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = (model.get('data') || []).length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max)); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  }\n\n  return [min, max];\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extent = getScaleExtent(scale, model);\n  var fixMin = model.getMin() != null;\n  var fixMax = model.getMax() != null;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: fixMin,\n    fixMax: fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {Array.<number>} tickCoords In axis self coordinate.\n * @param {Array.<string>} labels\n * @param {string} font\n * @param {number} axisRotate 0: towards right horizontally, clock-wise is negative.\n * @param {number} [labelRotate=0] 0: towards right horizontally, clock-wise is negative.\n * @return {number}\n */\n\n\nfunction getAxisLabelInterval(tickCoords, labels, font, axisRotate, labelRotate) {\n  var textSpaceTakenRect;\n  var autoLabelInterval = 0;\n  var accumulatedLabelInterval = 0;\n  var rotation = (axisRotate - labelRotate) / 180 * Math.PI;\n  var step = 1;\n\n  if (labels.length > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.floor(labels.length / 40);\n  }\n\n  for (var i = 0; i < tickCoords.length; i += step) {\n    var tickCoord = tickCoords[i]; // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labels[i], font, 'center', 'top');\n    rect.x += tickCoord * Math.cos(rotation);\n    rect.y += tickCoord * Math.sin(rotation); // Magic number\n\n    rect.width *= 1.3;\n    rect.height *= 1.3;\n\n    if (!textSpaceTakenRect) {\n      textSpaceTakenRect = rect.clone();\n    } // There is no space for current label;\n    else if (textSpaceTakenRect.intersect(rect)) {\n        accumulatedLabelInterval++;\n        autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n      } else {\n        textSpaceTakenRect.union(rect); // Reset\n\n        accumulatedLabelInterval = 0;\n      }\n  }\n\n  if (autoLabelInterval === 0 && step > 1) {\n    return step;\n  }\n\n  return (autoLabelInterval + 1) * step - 1;\n}\n/**\n * @param {Object} axis\n * @param {Function} labelFormatter\n * @return {Array.<string>}\n */\n\n\nfunction getFormattedLabels(axis, labelFormatter) {\n  var scale = axis.scale;\n  var labels = scale.getTicksLabels();\n  var ticks = scale.getTicks();\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return zrUtil.map(labels, labelFormatter);\n  } else if (typeof labelFormatter === 'function') {\n    return zrUtil.map(ticks, function (tick, idx) {\n      return labelFormatter(getAxisRawValue(axis, tick), idx);\n    }, this);\n  } else {\n    return labels;\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.getAxisLabelInterval = getAxisLabelInterval;\nexports.getFormattedLabels = getFormattedLabels;\nexports.getAxisRawValue = getAxisRawValue;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisHelper.js\n// module id = 219\n// module chunks = 0","var BoundingRect = require(\"../core/BoundingRect\");\n\nvar imageHelper = require(\"../graphic/helper/image\");\n\nvar _util = require(\"../core/util\");\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  return (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ') || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/text.js\n// module id = 220\n// module chunks = 0","var _vector = require(\"./vector\");\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/curve.js\n// module id = 221\n// module chunks = 0","/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个单位矩阵\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/matrix.js\n// module id = 222\n// module chunks = 0","var Eventful = require(\"../mixin/Eventful\");\n\nexports.Dispatcher = Eventful;\n\nvar env = require(\"./env\");\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/event.js\n// module id = 223\n// module chunks = 0","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Eventful.js\n// module id = 224\n// module chunks = 0","var LRU = require(\"../core/LRU\");\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/color.js\n// module id = 225\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    labelOption.show = true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/modelHelper.js\n// module id = 226\n// module chunks = 0","var clazzUtil = require(\"../util/clazz\");\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getDataExtent(dim, true));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * @return {Array.<string>}\n */\n\n\nScale.prototype.getTicksLabels = function () {\n  var labels = [];\n  var ticks = this.getTicks();\n\n  for (var i = 0; i < ticks.length; i++) {\n    labels.push(this.getLabel(ticks[i]));\n  }\n\n  return labels;\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Scale.js\n// module id = 227\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"./graphic\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function (x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function (x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function (x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  beforeBrush: function () {\n    var style = this.style;\n    var shape = this.shape; // FIXME\n\n    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      style.textPosition = ['50%', '40%'];\n      style.textAlign = 'center';\n      style.textVerticalAlign = 'middle';\n    }\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n    var proxySymbol = symbolBuildProxies[symbolType];\n\n    if (shape.symbolType !== 'none') {\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/symbol.js\n// module id = 228\n// module chunks = 0","var dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/config.js\n// module id = 229\n// module chunks = 0","var zrUtil = require(\"../core/util\");\n\nvar Element = require(\"../Element\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/container/Group.js\n// module id = 230\n// module chunks = 0","var curve = require(\"./curve\");\n\nvar vec2 = require(\"./vector\");\n\nvar bbox = require(\"./bbox\");\n\nvar BoundingRect = require(\"./BoundingRect\");\n\nvar _config = require(\"../config\");\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/PathProxy.js\n// module id = 231\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar coordinateSystemCreators = {};\n\nfunction CoordinateSystemManager() {\n  this._coordinateSystems = [];\n}\n\nCoordinateSystemManager.prototype = {\n  constructor: CoordinateSystemManager,\n  create: function (ecModel, api) {\n    var coordinateSystems = [];\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n      var list = creater.create(ecModel, api);\n      coordinateSystems = coordinateSystems.concat(list || []);\n    });\n    this._coordinateSystems = coordinateSystems;\n  },\n  update: function (ecModel, api) {\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\n      // FIXME MUST have\n      coordSys.update && coordSys.update(ecModel, api);\n    });\n  },\n  getCoordinateSystems: function () {\n    return this._coordinateSystems.slice();\n  }\n};\n\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n  coordinateSystemCreators[type] = coordinateSystemCreator;\n};\n\nCoordinateSystemManager.get = function (type) {\n  return coordinateSystemCreators[type];\n};\n\nvar _default = CoordinateSystemManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/CoordinateSystem.js\n// module id = 232\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\n// TODO Parse shadow style\n// TODO Only shallow path support\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/makeStyleMapper.js\n// module id = 233\n// module chunks = 0","var numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar Scale = require(\"./Scale\");\n\nvar helper = require(\"./helper\");\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function (start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function () {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function (interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getTicksLabels: function () {\n    var labels = [];\n    var ticks = this.getTicks();\n\n    for (var i = 0; i < ticks.length; i++) {\n      labels.push(this.getLabel(ticks[i]));\n    }\n\n    return labels;\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function (data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Interval.js\n// module id = 234\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"./clazz\");\n\nvar parseClassType = _clazz.parseClassType;\nvar base = 0;\nvar DELIMITER = '_';\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random()].join(DELIMITER);\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/component.js\n// module id = 235\n// module chunks = 0","var ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function () {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer);\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/throttle.js\n// module id = 236\n// module chunks = 0","// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/timsort.js\n// module id = 237\n// module chunks = 0","var zrUtil = require(\"../core/util\");\n\nvar Style = require(\"./Style\");\n\nvar Element = require(\"../Element\");\n\nvar RectText = require(\"./mixin/RectText\");\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {number}\n   */\n  progressive: -1,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Displayable.js\n// module id = 238\n// module chunks = 0","/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Gradient.js\n// module id = 239\n// module chunks = 0","var LRU = require(\"../../core/LRU\");\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/image.js\n// module id = 240\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _labelHelper = require(\"./labelHelper\");\n\nvar findLabelValueDim = _labelHelper.findLabelValueDim;\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nfunction getSymbolSize(data, idx) {\n  var symbolSize = data.getItemVisual(idx, 'symbolSize');\n  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n}\n\nfunction getScale(symbolSize) {\n  return [symbolSize[0] / 2, symbolSize[1] / 2];\n}\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/Symbol}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction SymbolClz(data, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.updateData(data, idx, seriesScope);\n}\n\nvar symbolProto = SymbolClz.prototype;\n\nfunction driftSymbol(dx, dy) {\n  this.parent.drift(dx, dy);\n}\n\nsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n  // Remove paths created before\n  this.removeAll();\n  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\n  //     symbolType, -0.5, -0.5, 1, 1, color\n  // );\n  // If width/height are set too small (e.g., set to 1) on ios10\n  // and macOS Sierra, a circle stroke become a rect, no matter what\n  // the scale is set. So we set width/height as 2. See #4150.\n\n  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color);\n  symbolPath.attr({\n    z2: 100,\n    culling: true,\n    scale: getScale(symbolSize)\n  }); // Rewrite drift method\n\n  symbolPath.drift = driftSymbol;\n  this._symbolType = symbolType;\n  this.add(symbolPath);\n};\n/**\n * Stop animation\n * @param {boolean} toLastFrame\n */\n\n\nsymbolProto.stopSymbolAnimation = function (toLastFrame) {\n  this.childAt(0).stopAnimation(toLastFrame);\n};\n/**\n * FIXME:\n * Caution: This method breaks the encapsulation of this module,\n * but it indeed brings convenience. So do not use the method\n * unless you detailedly know all the implements of `Symbol`,\n * especially animation.\n *\n * Get symbol path element.\n */\n\n\nsymbolProto.getSymbolPath = function () {\n  return this.childAt(0);\n};\n/**\n * Get scale(aka, current symbol size).\n * Including the change caused by animation\n */\n\n\nsymbolProto.getScale = function () {\n  return this.childAt(0).scale;\n};\n/**\n * Highlight symbol\n */\n\n\nsymbolProto.highlight = function () {\n  this.childAt(0).trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\nsymbolProto.downplay = function () {\n  this.childAt(0).trigger('normal');\n};\n/**\n * @param {number} zlevel\n * @param {number} z\n */\n\n\nsymbolProto.setZ = function (zlevel, z) {\n  var symbolPath = this.childAt(0);\n  symbolPath.zlevel = zlevel;\n  symbolPath.z = z;\n};\n\nsymbolProto.setDraggable = function (draggable) {\n  var symbolPath = this.childAt(0);\n  symbolPath.draggable = draggable;\n  symbolPath.cursor = draggable ? 'move' : 'pointer';\n};\n/**\n * Update symbol properties\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Object} [seriesScope]\n * @param {Object} [seriesScope.itemStyle]\n * @param {Object} [seriesScope.hoverItemStyle]\n * @param {Object} [seriesScope.symbolRotate]\n * @param {Object} [seriesScope.symbolOffset]\n * @param {module:echarts/model/Model} [seriesScope.labelModel]\n * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\n * @param {boolean} [seriesScope.hoverAnimation]\n * @param {Object} [seriesScope.cursorStyle]\n * @param {module:echarts/model/Model} [seriesScope.itemModel]\n * @param {string} [seriesScope.symbolInnerColor]\n * @param {Object} [seriesScope.fadeIn=false]\n */\n\n\nsymbolProto.updateData = function (data, idx, seriesScope) {\n  this.silent = false;\n  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n  var seriesModel = data.hostModel;\n  var symbolSize = getSymbolSize(data, idx);\n  var isInit = symbolType !== this._symbolType;\n\n  if (isInit) {\n    this._createSymbol(symbolType, data, idx, symbolSize);\n  } else {\n    var symbolPath = this.childAt(0);\n    symbolPath.silent = false;\n    graphic.updateProps(symbolPath, {\n      scale: getScale(symbolSize)\n    }, seriesModel, idx);\n  }\n\n  this._updateCommon(data, idx, symbolSize, seriesScope);\n\n  if (isInit) {\n    var symbolPath = this.childAt(0);\n    var fadeIn = seriesScope && seriesScope.fadeIn;\n    var target = {\n      scale: symbolPath.scale.slice()\n    };\n    fadeIn && (target.style = {\n      opacity: symbolPath.style.opacity\n    });\n    symbolPath.scale = [0, 0];\n    fadeIn && (symbolPath.style.opacity = 0);\n    graphic.initProps(symbolPath, target, seriesModel, idx);\n  }\n\n  this._seriesModel = seriesModel;\n}; // Update common properties\n\n\nvar normalStyleAccessPath = ['itemStyle', 'normal'];\nvar emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\nvar normalLabelAccessPath = ['label', 'normal'];\nvar emphasisLabelAccessPath = ['label', 'emphasis'];\n/**\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Array.<number>} symbolSize\n * @param {Object} [seriesScope]\n */\n\nsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n  var symbolPath = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var color = data.getItemVisual(idx, 'color'); // Reset style\n\n  if (symbolPath.type !== 'image') {\n    symbolPath.useStyle({\n      strokeNoScale: true\n    });\n  }\n\n  var itemStyle = seriesScope && seriesScope.itemStyle;\n  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n  var symbolRotate = seriesScope && seriesScope.symbolRotate;\n  var symbolOffset = seriesScope && seriesScope.symbolOffset;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n  var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n  if (!seriesScope || data.hasItemOption) {\n    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\n    // Because symbol provide setColor individually to set fill and stroke\n\n    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n    symbolRotate = itemModel.getShallow('symbolRotate');\n    symbolOffset = itemModel.getShallow('symbolOffset');\n    labelModel = itemModel.getModel(normalLabelAccessPath);\n    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n    hoverAnimation = itemModel.getShallow('hoverAnimation');\n    cursorStyle = itemModel.getShallow('cursor');\n  } else {\n    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n  }\n\n  var elStyle = symbolPath.style;\n  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n  if (symbolOffset) {\n    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\n  }\n\n  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\n\n  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\n  symbolPath.setStyle(itemStyle);\n  var opacity = data.getItemVisual(idx, 'opacity');\n\n  if (opacity != null) {\n    elStyle.opacity = opacity;\n  }\n\n  var useNameLabel = seriesScope && seriesScope.useNameLabel;\n  var valueDim = !useNameLabel && findLabelValueDim(data);\n\n  if (useNameLabel || valueDim != null) {\n    graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\n      labelFetcher: seriesModel,\n      labelDataIndex: idx,\n      defaultText: useNameLabel ? data.getName(idx) : data.get(valueDim, idx),\n      isRectText: true,\n      autoColor: color\n    });\n  }\n\n  symbolPath.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  symbolPath.hoverStyle = hoverItemStyle; // FIXME\n  // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n\n  graphic.setHoverStyle(symbolPath);\n  var scale = getScale(symbolSize);\n\n  if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n    var onEmphasis = function () {\n      var ratio = scale[1] / scale[0];\n      this.animateTo({\n        scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\n      }, 400, 'elasticOut');\n    };\n\n    var onNormal = function () {\n      this.animateTo({\n        scale: scale\n      }, 400, 'elasticOut');\n    };\n\n    symbolPath.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n};\n/**\n * @param {Function} cb\n * @param {Object} [opt]\n * @param {Object} [opt.keepLabel=true]\n */\n\n\nsymbolProto.fadeOut = function (cb, opt) {\n  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\n\n  this.silent = symbolPath.silent = true; // Not show text when animating\n\n  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\n  graphic.updateProps(symbolPath, {\n    style: {\n      opacity: 0\n    },\n    scale: [0, 0]\n  }, this._seriesModel, this.dataIndex, cb);\n};\n\nzrUtil.inherits(SymbolClz, graphic.Group);\nvar _default = SymbolClz;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/Symbol.js\n// module id = 242\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\nvar converDataValue = _model.converDataValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nfunction ifNeedCompleteOrdinalData(data) {\n  var sampleItem = firstDataNotNull(data);\n  return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n}\n/**\n * Helper function to create a list from option data\n */\n\n\nfunction createListFromArray(data, seriesModel, ecModel) {\n  // If data is undefined\n  data = data || [];\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var creator = creators[coordSysName];\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var completeDimOpt = {\n    encodeDef: seriesModel.get('encode'),\n    dimsDef: seriesModel.get('dimensions')\n  }; // FIXME\n\n  var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n  var dimensions = axesInfo && axesInfo.dimensions;\n\n  if (!dimensions) {\n    // Get dimensions from registered coordinate system\n    dimensions = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n  }\n\n  var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n  var list = new List(dimensions, seriesModel);\n  var nameList = createNameList(axesInfo, data);\n  var categories = {};\n  var dimValueGetter = categoryIndex >= 0 && ifNeedCompleteOrdinalData(data) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // If any dataItem is like { value: 10 }\n    if (isDataItemOption(itemOpt)) {\n      list.hasItemOption = true;\n    } // Use dataIndex as ordinal value in categoryAxis\n\n\n    return dimIndex === categoryIndex ? dataIndex : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n  } : function (itemOpt, dimName, dataIndex, dimIndex) {\n    var value = getDataItemValue(itemOpt);\n    var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]); // If any dataItem is like { value: 10 }\n\n    if (isDataItemOption(itemOpt)) {\n      list.hasItemOption = true;\n    }\n\n    var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n\n    if (categoryAxesModels && categoryAxesModels[dimName]) {\n      // If given value is a category string\n      if (typeof val === 'string') {\n        // Lazy get categories\n        categories[dimName] = categories[dimName] || categoryAxesModels[dimName].getCategories();\n        val = zrUtil.indexOf(categories[dimName], val);\n\n        if (val < 0 && !isNaN(val)) {\n          // In case some one write '1', '2' istead of 1, 2\n          val = +val;\n        }\n      }\n    }\n\n    return val;\n  };\n  list.hasItemOption = false;\n  list.initData(data, nameList, dimValueGetter);\n  return list;\n}\n\nfunction isStackable(axisType) {\n  return axisType !== 'category' && axisType !== 'time';\n}\n\nfunction getDimTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n/**\n * Creaters for each coord system.\n */\n\n\nvar creators = {\n  cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n    var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n      return ecModel.queryComponents({\n        mainType: name,\n        index: seriesModel.get(name + 'Index'),\n        id: seriesModel.get(name + 'Id')\n      })[0];\n    });\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var xAxisType = xAxisModel.get('type');\n    var yAxisType = yAxisModel.get('type');\n    var dimensions = [{\n      name: 'x',\n      type: getDimTypeByAxis(xAxisType),\n      stackable: isStackable(xAxisType)\n    }, {\n      name: 'y',\n      // If two category axes\n      type: getDimTypeByAxis(yAxisType),\n      stackable: isStackable(yAxisType)\n    }];\n    var isXAxisCateogry = xAxisType === 'category';\n    var isYAxisCategory = yAxisType === 'category';\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isXAxisCateogry) {\n      categoryAxesModels.x = xAxisModel;\n    }\n\n    if (isYAxisCategory) {\n      categoryAxesModels.y = yAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isXAxisCateogry ? 0 : isYAxisCategory ? 1 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: seriesModel.get('singleAxisIndex'),\n      id: seriesModel.get('singleAxisId')\n    })[0];\n    var singleAxisType = singleAxisModel.get('type');\n    var isCategory = singleAxisType === 'category';\n    var dimensions = [{\n      name: 'single',\n      type: getDimTypeByAxis(singleAxisType),\n      stackable: isStackable(singleAxisType)\n    }];\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isCategory) {\n      categoryAxesModels.single = singleAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isCategory ? 0 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  polar: function (data, seriesModel, ecModel, completeDimOpt) {\n    var polarModel = ecModel.queryComponents({\n      mainType: 'polar',\n      index: seriesModel.get('polarIndex'),\n      id: seriesModel.get('polarId')\n    })[0];\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var radiusAxisType = radiusAxisModel.get('type');\n    var angleAxisType = angleAxisModel.get('type');\n    var dimensions = [{\n      name: 'radius',\n      type: getDimTypeByAxis(radiusAxisType),\n      stackable: isStackable(radiusAxisType)\n    }, {\n      name: 'angle',\n      type: getDimTypeByAxis(angleAxisType),\n      stackable: isStackable(angleAxisType)\n    }];\n    var isAngleAxisCateogry = angleAxisType === 'category';\n    var isRadiusAxisCateogry = radiusAxisType === 'category';\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isRadiusAxisCateogry) {\n      categoryAxesModels.radius = radiusAxisModel;\n    }\n\n    if (isAngleAxisCateogry) {\n      categoryAxesModels.angle = angleAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isAngleAxisCateogry ? 1 : isRadiusAxisCateogry ? 0 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  geo: function (data, seriesModel, ecModel, completeDimOpt) {\n    // TODO Region\n    // 多个散点图系列在同一个地区的时候\n    return {\n      dimensions: completeDimensions([{\n        name: 'lng'\n      }, {\n        name: 'lat'\n      }], data, completeDimOpt)\n    };\n  }\n};\n\nfunction createNameList(result, data) {\n  var nameList = [];\n  var categoryDim = result && result.dimensions[result.categoryIndex];\n  var categoryAxisModel;\n\n  if (categoryDim) {\n    categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n  }\n\n  if (categoryAxisModel) {\n    // FIXME Two category axis\n    var categories = categoryAxisModel.getCategories();\n\n    if (categories) {\n      var dataLen = data.length; // Ordered data is given explicitly like\n      // [[3, 0.2], [1, 0.3], [2, 0.15]]\n      // or given scatter data,\n      // pick the category\n\n      if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n        nameList = [];\n\n        for (var i = 0; i < dataLen; i++) {\n          nameList[i] = categories[data[i][result.categoryIndex || 0]];\n        }\n      } else {\n        nameList = categories.slice(0);\n      }\n    }\n  }\n\n  return nameList;\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/createListFromArray.js\n// module id = 243\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return seriesModel.coordDimToDataDim(dim)[0];\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/findPointFromSeries.js\n// module id = 244\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar get = modelUtil.makeGetter();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  get(zr).records || (get(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = get(zr).records[key] || (get(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (get(zr).initialized) {\n    return;\n  }\n\n  get(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(get(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (get(zr).records || {})[key];\n\n  if (record) {\n    get(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/globalListener.js\n// module id = 245\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/viewHelper.js\n// module id = 246\n// module chunks = 0","var _util = require(\"zrender/lib/core/util\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _number = require(\"../../util/number\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\n\nvar _vector = require(\"zrender/lib/core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.labelInterval] Default label interval when label\n *                                     interval from model is null or 'auto'.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([[opt.rotation + Math.PI / 2, pt1], [opt.rotation - Math.PI / 2, pt2]], function (item, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true);\n          symbol.attr({\n            rotation: item[0],\n            position: item[1],\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n/**\n * @static\n */\n\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval, ticksCnt, showMinLabel, showMaxLabel) {\n  if (i === 0 && showMinLabel || i === ticksCnt - 1 && showMaxLabel) {\n    return false;\n  } // FIXME\n  // Have not consider label overlap (if label is too long) yet.\n\n\n  var rawTick;\n  var scale = axis.scale;\n  return scale.type === 'ordinal' && (typeof interval === 'function' ? (rawTick = scale.getTicks()[i], !interval(rawTick, scale.getLabel(rawTick))) : i % (interval + 1));\n};\n/**\n * @static\n */\n\n\nvar getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n  var interval = model.get('interval');\n\n  if (interval == null || interval == 'auto') {\n    interval = labelInterval;\n  }\n\n  return interval;\n};\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var tickInterval = getInterval(tickModel, opt.labelInterval);\n  var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel')); // FIXME\n  // Corresponds to ticksCoords ?\n\n  var ticks = axis.scale.getTicks();\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n  var ticksCnt = ticksCoords.length;\n\n  for (var i = 0; i < ticksCnt; i++) {\n    // Only ordinal scale support tick interval\n    if (ifIgnoreOnTick(axis, i, tickInterval, ticksCnt, showMinLabel, showMaxLabel)) {\n      continue;\n    }\n\n    var tickCoord = ticksCoords[i];\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticks[i],\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var ticks = axis.scale.getTicks();\n  var labels = axisModel.getFormattedLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var categoryData = axisModel.get('data');\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  each(ticks, function (tickVal, index) {\n    if (ifIgnoreOnTick(axis, index, opt.labelInterval, ticks.length, showMinLabel, showMaxLabel)) {\n      return;\n    }\n\n    var itemLabelModel = labelModel;\n\n    if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n      itemLabelModel = new Model(categoryData[tickVal].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickVal);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var labelStr = axis.scale.getLabel(tickVal);\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickVal,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: labels[index],\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always returns labelStr.\n      // But in interval scale labelStr is like '223,445', which maked\n      // user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = labelStr;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/AxisBuilder.js\n// module id = 247\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar axisPointerModelHelper = require(\"../axisPointer/modelHelper\");\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/AxisView.js\n// module id = 248\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var rawAxisPosition = axis.position;\n  var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (axis.onZero) {\n    var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n    var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // label interval when auto mode.\n\n  layout.labelInterval = axis.getLabelInterval(); // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/cartesianAxisHelper.js\n// module id = 249\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar axisHelper = require(\"./axisHelper\");\n\nvar linearMap = numberUtil.linearMap;\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n}\n\nvar normalizedExtent = [0, 1];\n/**\n * @name module:echarts/coord/CartesianAxis\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._labelInterval;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return numberUtil.getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has a ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, normalizedExtent, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has a ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, normalizedExtent, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicksCoords: function (alignWithLabel) {\n    if (this.onBand && !alignWithLabel) {\n      var bands = this.getBands();\n      var coords = [];\n\n      for (var i = 0; i < bands.length; i++) {\n        coords.push(bands[i][0]);\n      }\n\n      if (bands[i - 1]) {\n        coords.push(bands[i - 1][1]);\n      }\n\n      return coords;\n    } else {\n      return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n    }\n  },\n\n  /**\n   * Coords of labels are on the ticks or on the middle of bands\n   * @return {Array.<number>}\n   */\n  getLabelsCoords: function () {\n    return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n  },\n\n  /**\n   * Get bands.\n   *\n   * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n   * |---1---|---2---|---3---|---4---|.\n   *\n   * @return {Array}\n   */\n  // FIXME Situation when labels is on ticks\n  getBands: function () {\n    var extent = this.getExtent();\n    var bands = [];\n    var len = this.scale.count();\n    var start = extent[0];\n    var end = extent[1];\n    var span = end - start;\n\n    for (var i = 0; i < len; i++) {\n      bands.push([span * i / len + start, span * (i + 1) / len + start]);\n    }\n\n    return bands;\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Get interval of the axis label.\n   * To get precise result, at least one of `getRotate` and `isHorizontal`\n   * should be implemented.\n   * @return {number}\n   */\n  getLabelInterval: function () {\n    var labelInterval = this._labelInterval;\n\n    if (!labelInterval) {\n      var axisModel = this.model;\n      var labelModel = axisModel.getModel('axisLabel');\n      labelInterval = labelModel.get('interval');\n\n      if (this.type === 'category' && (labelInterval == null || labelInterval === 'auto')) {\n        labelInterval = axisHelper.getAxisLabelInterval(zrUtil.map(this.scale.getTicks(), this.dataToCoord, this), axisModel.getFormattedLabels(), labelModel.getFont(), this.getRotate ? this.getRotate() : this.isHorizontal && !this.isHorizontal() ? 90 : 0, labelModel.get('rotate'));\n      }\n\n      this._labelInterval = labelInterval;\n    }\n\n    return labelInterval;\n  }\n};\nvar _default = Axis;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/Axis.js\n// module id = 250\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisHelper = require(\"./axisHelper\");\n\nfunction getName(obj) {\n  if (zrUtil.isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = {\n  /**\n   * Format labels\n   * @return {Array.<string>}\n   */\n  getFormattedLabels: function () {\n    return axisHelper.getFormattedLabels(this.axis, this.get('axisLabel.formatter'));\n  },\n\n  /**\n   * Get categories\n   */\n  getCategories: function () {\n    return this.get('type') === 'category' && zrUtil.map(this.get('data'), getName);\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function (origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function (origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function () {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function (rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function () {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisModelCommonMixin.js\n// module id = 251\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/AxisModel.js\n// module id = 252\n// module chunks = 0","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar DataDiffer = require(\"./DataDiffer\");\n\nvar modelUtil = require(\"../util/model\");\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined';\nvar globalObj = typeof window === UNDEFINED ? global : window;\nvar dataCtors = {\n  'float': typeof globalObj.Float64Array === UNDEFINED ? Array : globalObj.Float64Array,\n  'int': typeof globalObj.Int32Array === UNDEFINED ? Array : globalObj.Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n};\nvar TRANSFERABLE_PROPERTIES = ['stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'];\n\nfunction transferProperties(a, b) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n    if (b.hasOwnProperty(propName)) {\n      a[propName] = b[propName];\n    }\n  });\n  a.__wrappedMethods = b.__wrappedMethods;\n}\n\nfunction DefaultDataProvider(dataArray) {\n  this._array = dataArray || [];\n}\n\nDefaultDataProvider.prototype.pure = false;\n\nDefaultDataProvider.prototype.count = function () {\n  return this._array.length;\n};\n\nDefaultDataProvider.prototype.getItem = function (idx) {\n  return this._array[idx];\n};\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function (dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimensionName;\n    var dimensionInfo = {};\n\n    if (typeof dimensions[i] === 'string') {\n      dimensionName = dimensions[i];\n      dimensionInfo = {\n        name: dimensionName,\n        coordDim: dimensionName,\n        coordDimIndex: 0,\n        stackable: false,\n        // Type can be 'float', 'int', 'number'\n        // Default is number, Precision of float may not enough\n        type: 'number'\n      };\n    } else {\n      dimensionInfo = dimensions[i];\n      dimensionName = dimensionInfo.name;\n      dimensionInfo.type = dimensionInfo.type || 'number';\n\n      if (!dimensionInfo.coordDim) {\n        dimensionInfo.coordDim = dimensionName;\n        dimensionInfo.coordDimIndex = 0;\n      }\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this.indices = [];\n  /**\n   * Data storage\n   * @type {Object.<key, TypedArray|Array>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * @param {module:echarts/data/List}\n   */\n\n  this.stackedOn = null;\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent;\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * Get dimension name\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (!isNaN(dim)) {\n    dim = this.dimensions[dim] || dim;\n  }\n\n  return dim;\n};\n/**\n * Get type and stackable info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data\n * @param {Array.<string>} [nameList]\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  data = data || [];\n  var isDataArray = zrUtil.isArray(data);\n\n  if (isDataArray) {\n    data = new DefaultDataProvider(data);\n  }\n\n  this._rawData = data; // Clear\n\n  var storage = this._storage = {};\n  var indices = this.indices = [];\n  var dimensions = this.dimensions;\n  var dimensionInfoMap = this._dimensionInfos;\n  var size = data.count();\n  var idList = [];\n  var nameRepeatCount = {};\n  var nameDimIdx;\n  nameList = nameList || []; // Init storage\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimInfo = dimensionInfoMap[dimensions[i]];\n    dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n    var DataCtor = dataCtors[dimInfo.type];\n    storage[dimensions[i]] = new DataCtor(size);\n  }\n\n  var self = this;\n\n  if (!dimValueGetter) {\n    self.hasItemOption = false;\n  } // Default dim value getter\n\n\n  dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n    var value = modelUtil.getDataItemValue(dataItem); // If any dataItem is like { value: 10 }\n\n    if (modelUtil.isDataItemOption(dataItem)) {\n      self.hasItemOption = true;\n    }\n\n    return modelUtil.converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, dimensionInfoMap[dimName]);\n  };\n\n  for (var i = 0; i < size; i++) {\n    // NOTICE: Try not to write things into dataItem\n    var dataItem = data.getItem(i); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of cateogry\n    // Use a tempValue to normalize the value to be a (x, y) value\n    // Store the data by dimensions\n\n    for (var k = 0; k < dimensions.length; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim]; // PENDING NULL is empty or zero\n\n      dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n    }\n\n    indices.push(i);\n  } // Use the name in option and create id\n\n\n  for (var i = 0; i < size; i++) {\n    var dataItem = data.getItem(i);\n\n    if (!nameList[i] && dataItem) {\n      if (dataItem.name != null) {\n        nameList[i] = dataItem.name;\n      } else if (nameDimIdx != null) {\n        nameList[i] = storage[dimensions[nameDimIdx]][i];\n      }\n    }\n\n    var name = nameList[i] || ''; // Try using the id in option\n\n    var id = dataItem && dataItem.id;\n\n    if (!id && name) {\n      // Use name as id and add counter to avoid same name\n      nameRepeatCount[name] = nameRepeatCount[name] || 0;\n      id = name;\n\n      if (nameRepeatCount[name] > 0) {\n        id += '__ec__' + nameRepeatCount[name];\n      }\n\n      nameRepeatCount[name]++;\n    }\n\n    id && (idList[i] = id);\n  }\n\n  this._nameList = nameList;\n  this._idList = idList;\n};\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this.indices.length;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx, stack) {\n  var storage = this._storage;\n  var dataIndex = this.indices[idx]; // If value not exists\n\n  if (dataIndex == null || !storage[dim]) {\n    return NaN;\n  }\n\n  var value = storage[dim][dataIndex]; // FIXME ordinal data type is not stackable\n\n  if (stack) {\n    var dimensionInfo = this._dimensionInfos[dim];\n\n    if (dimensionInfo && dimensionInfo.stackable) {\n      var stackedOn = this.stackedOn;\n\n      while (stackedOn) {\n        // Get no stacked data of stacked on\n        var stackedValue = stackedOn.get(dim, idx); // Considering positive stack, negative stack and empty data\n\n        if (value >= 0 && stackedValue > 0 || // Positive stack\n        value <= 0 && stackedValue < 0 // Negative stack\n        ) {\n            value += stackedValue;\n          }\n\n        stackedOn = stackedOn.stackedOn;\n      }\n    }\n  }\n\n  return value;\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx, stack) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx, stack));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dimensions = this.dimensions;\n  var dimensionInfos = this._dimensionInfos;\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    if ( // Ordinal type can be string or number\n    dimensionInfos[dimensions[i]].type !== 'ordinal' && isNaN(this.get(dimensions[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n * @param {Function} filter\n */\n\n\nlistProto.getDataExtent = function (dim, stack, filter) {\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var dimInfo = this.getDimensionInfo(dim);\n  stack = dimInfo && dimInfo.stackable && stack;\n  var dimExtent = (this._extent || (this._extent = {}))[dim + !!stack];\n  var value;\n\n  if (dimExtent) {\n    return dimExtent;\n  } // var dimInfo = this._dimensionInfos[dim];\n\n\n  if (dimData) {\n    var min = Infinity;\n    var max = -Infinity; // var isOrdinal = dimInfo.type === 'ordinal';\n\n    for (var i = 0, len = this.count(); i < len; i++) {\n      value = this.get(dim, i, stack); // FIXME\n      // if (isOrdinal && typeof value === 'string') {\n      //     value = zrUtil.indexOf(dimData, value);\n      // }\n\n      if (!filter || filter(value, dim, i)) {\n        value < min && (min = value);\n        value > max && (max = value);\n      }\n    }\n\n    return this._extent[dim + !!stack] = [min, max];\n  } else {\n    return [Infinity, -Infinity];\n  }\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getSum = function (dim, stack) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i, stack);\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n};\n/**\n * Retreive the index with given value\n * @param {number} idx\n * @param {number} value\n * @return {number}\n */\n// FIXME Precision of float value\n\n\nlistProto.indexOf = function (dim, value) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var indices = this.indices;\n\n  if (dimData) {\n    for (var i = 0, len = indices.length; i < len; i++) {\n      var rawIndex = indices[i];\n\n      if (dimData[rawIndex] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  var indices = this.indices;\n  var nameList = this._nameList;\n\n  for (var i = 0, len = indices.length; i < len; i++) {\n    var rawIndex = indices[i];\n\n    if (nameList[rawIndex] === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  // Indices are ascending\n  var indices = this.indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = indices.length - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {boolean} stack If given value is after stacked\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} Considere multiple points has the same value.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i, stack);\n    var dist = Math.abs(diff);\n\n    if (diff <= maxDistance && dist <= minDist) {\n      // For the case of two data are same on xAxis, which has sequence data.\n      // Show the nearest index\n      // https://github.com/ecomfe/echarts/issues/2869\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndices.length = 0;\n      }\n\n      nearestIndices.push(i);\n    }\n  }\n\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = function (idx) {\n  var rawIdx = this.indices[idx];\n  return rawIdx == null ? -1 : rawIdx;\n};\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  return this._rawData.getItem(this.getRawIndex(idx));\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  return this._nameList[this.indices[idx]] || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return this._idList[this.indices[idx]] || this.getRawIndex(idx) + '';\n};\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, stack, context) {\n  if (typeof dims === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dims;\n    dims = [];\n  }\n\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var value = [];\n  var dimSize = dims.length;\n  var indices = this.indices;\n  context = context || this;\n\n  for (var i = 0; i < indices.length; i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i, stack), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n        break;\n\n      default:\n        for (var k = 0; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i, stack);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, stack, context) {\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var newIndices = [];\n  var value = [];\n  var dimSize = dimensions.length;\n  var indices = this.indices;\n  context = context || this;\n\n  for (var i = 0; i < indices.length; i++) {\n    var keep; // Simple optimization\n\n    if (!dimSize) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      keep = cb.call(context, this.get(dimensions[0], i, stack), i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = this.get(dimensions[k], i, stack);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices.push(indices[i]);\n    }\n  }\n\n  this.indices = newIndices; // Reset data extent\n\n  this._extent = {};\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, stack, context) {\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, stack, context);\n  return result;\n};\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage; // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n    var dimStore = originalStorage[dim];\n\n    if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n      storage[dim] = new dimStore.constructor(originalStorage[dim].length);\n    } else {\n      // Direct reference for other dimensions\n      storage[dim] = originalStorage[dim];\n    }\n  }\n\n  return list;\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, stack, context) {\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  var indices = list.indices = this.indices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  this.each(dimensions, function () {\n    var idx = arguments[arguments.length - 1];\n    var retValue = cb && cb.apply(this, arguments);\n\n    if (retValue != null) {\n      // a number\n      if (typeof retValue === 'number') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var dimStore = storage[dim];\n        var rawIdx = indices[idx];\n\n        if (dimStore) {\n          dimStore[rawIdx] = retValue[i];\n        }\n      }\n    }\n  }, stack, context);\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var storage = this._storage;\n  var targetStorage = list._storage;\n  var originalIndices = this.indices;\n  var indices = list.indices = [];\n  var frameValues = [];\n  var frameIndices = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count(); // Copy data from original data\n\n  for (var i = 0; i < storage[dimension].length; i++) {\n    targetStorage[dimension][i] = storage[dimension][i];\n  }\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var idx = originalIndices[i + k];\n      frameValues[k] = dimStore[idx];\n      frameIndices[k] = idx;\n    }\n\n    var value = sampleValue(frameValues);\n    var idx = frameIndices[sampleIndex(frameValues, value) || 0]; // Only write value on the filtered data\n\n    dimStore[idx] = value;\n    indices.push(idx);\n  }\n\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  idx = this.indices[idx];\n  return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var idList = this._idList;\n  var otherIdList = otherList && otherList._idList;\n  var val; // Use prefix to avoid index to be the same as otherIdList[idx],\n  // which will cause weird udpate animation.\n\n  var prefix = 'e\\0\\0';\n  return new DataDiffer(otherList ? otherList.indices : [], this.indices, function (idx) {\n    return (val = otherIdList[idx]) != null ? val : prefix + idx;\n  }, function (idx) {\n    return (val = idList[idx]) != null ? val : prefix + idx;\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n};\n\nvar setItemDataAndSeriesIndex = function (child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function () {\n  var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n  var list = new List(dimensionInfoList, this.hostModel); // FIXME\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  list.indices = this.indices.slice();\n\n  if (this._extent) {\n    list._extent = zrUtil.extend({}, this._extent);\n  }\n\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf'];\nvar _default = List;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/List.js\n// module id = 253\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/**\n * Complete dimensions by data (guess dimension).\n */\nvar each = zrUtil.each;\nvar isString = zrUtil.isString;\nvar defaults = zrUtil.defaults;\nvar OTHER_DIMS = {\n  tooltip: 1,\n  label: 1,\n  itemName: 1\n};\n/**\n * Complete the dimensions array, by user defined `dimension` and `encode`,\n * and guessing from the data structure.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: []}, ...] can be specified to give names.\n * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n *                      If not specified, extra dim names will be:\n *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @return {Array.<Object>} [{\n *      name: string mandatory,\n *      coordDim: string mandatory,\n *      coordDimIndex: number mandatory,\n *      type: string optional,\n *      tooltipName: string optional,\n *      otherDims: {\n *          tooltip: number optional,\n *          label: number optional\n *      },\n *      isExtraCoord: boolean true or undefined.\n *      other props ...\n * }]\n */\n\nfunction completeDimensions(sysDims, data, opt) {\n  data = data || [];\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n  var dataDimNameMap = zrUtil.createHashMap();\n  var coordDimNameMap = zrUtil.createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = opt.dimCount;\n\n  if (dimCount == null) {\n    var value0 = retrieveValue(data[0]);\n    dimCount = Math.max(zrUtil.isArray(value0) && value0.length || 1, sysDims.length, dimsDef.length);\n    each(sysDims, function (sysDimItem) {\n      var sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n    });\n  } // Apply user defined dims (`name` and `type`) and init result.\n\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = isString(dimsDef[i]) ? {\n      name: dimsDef[i]\n    } : dimsDef[i] || {};\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = {\n      otherDims: {}\n    }; // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option, tooltipName\n      // will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.tooltipName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        dataDims[coordDimIndex] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      sysDimItem = zrUtil.clone(sysDimItem); // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = normalizeToArray(encodeDef.get(coordDim)); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n      }\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  }); // Make sure the first extra dim is 'value'.\n\n  var extra = opt.extraPrefix || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n    var coordDim = resultItem.coordDim;\n    coordDim == null && (resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero), resultItem.coordDimIndex = 0, resultItem.isExtraCoord = true);\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n    resultItem.type == null && guessOrdinal(data, resultDimIdx) && (resultItem.type = 'ordinal');\n  }\n\n  return result;\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMS[coordDim]) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  }\n\n  function genName(name, map, fromZero) {\n    if (fromZero || map.get(name) != null) {\n      var i = 0;\n\n      while (map.get(name + i) != null) {\n        i++;\n      }\n\n      name += i;\n    }\n\n    map.set(name, true);\n    return name;\n  }\n} // The rule should not be complex, otherwise user might not\n// be able to known where the data is wrong.\n\n\nvar guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n  for (var i = 0, len = data.length; i < len; i++) {\n    var value = retrieveValue(data[i]);\n\n    if (!zrUtil.isArray(value)) {\n      return false;\n    }\n\n    var value = value[dimIndex]; // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n\n    if (value != null && isFinite(value) && value !== '') {\n      return false;\n    } else if (isString(value) && value !== '-') {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nfunction retrieveValue(o) {\n  return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value : o;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/helper/completeDimensions.js\n// module id = 254\n// module chunks = 0","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _format = require(\"../util/format\");\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar set = _clazz.set;\nvar get = _clazz.get;\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.normal.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.mergeDefaultAndTheme(option, ecModel);\n    var data = this.getInitialData(option, ecModel);\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    set(this, 'dataBeforeProcessed', data); // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n\n    this.restoreData();\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option.label, ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    var data = this.getInitialData(newSeriesOption, ecModel); // TODO Merge data?\n\n    if (data) {\n      set(this, 'data', data);\n      set(this, 'dataBeforeProcessed', data.cloneShallow());\n    }\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i].label, props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var data = get(this, 'data');\n    return dataType == null ? data : data.getLinkedData(dataType);\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    set(this, 'data', data);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return get(this, 'dataBeforeProcessed');\n  },\n\n  /**\n   * Coord dimension to data dimension.\n   *\n   * By default the result is the same as dimensions of series data.\n   * But in some series data dimensions are different from coord dimensions (i.e.\n   * candlestick and boxplot). Override this method to handle those cases.\n   *\n   * Coord dimension to data dimension can be one-to-many\n   *\n   * @param {string} coordDim\n   * @return {Array.<string>} dimensions on the axis.\n   */\n  coordDimToDataDim: function (coordDim) {\n    return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n  },\n\n  /**\n   * Convert data dimension to coord dimension.\n   *\n   * @param {string|number} dataDim\n   * @return {string}\n   */\n  dataDimToCoordDim: function (dataDim) {\n    return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    function formatArrayValue(value) {\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n      }, 0);\n      var result = [];\n      var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dimIdx) {\n        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dimIdx) {\n        var dimInfo = data.getDimensionInfo(dimIdx); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '') + (dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(encodeHTML(valStr));\n      }\n\n      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n    }\n\n    var data = get(this, 'data');\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? formatArrayValue(value) : encodeHTML(addCommas(value));\n    var name = data.getName(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent';\n    var colorEl = getTooltipMarker(color);\n    var seriesName = this.name; // FIXME\n\n    if (seriesName === '\\0-') {\n      // Not show '-'\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n  },\n  getColorFromPalette: function (name, scope) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope);\n    }\n\n    return color;\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null\n});\nzrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\nvar _default = SeriesModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Series.js\n// module id = 255\n// module chunks = 0","var _clazz = require(\"../../util/clazz\");\n\nvar set = _clazz.set;\nvar get = _clazz.get;\nvar _default = {\n  clearColorPalette: function () {\n    set(this, 'colorIdx', 0);\n    set(this, 'colorNameMap', {});\n  },\n  getColorFromPalette: function (name, scope) {\n    scope = scope || this;\n    var colorIdx = get(scope, 'colorIdx') || 0;\n    var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {}); // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var colorPalette = this.get('color', true) || [];\n\n    if (!colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n    return color;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/colorPalette.js\n// module id = 256\n// module chunks = 0","var numberUtil = require(\"../util/number\");\n\n/**\n * For testable.\n */\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n  var ticks = []; // If interval is 0, return [];\n\n  if (!interval) {\n    return ticks;\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n  var safeLimit = 10000;\n\n  if (extent[0] < niceTickExtent[0]) {\n    ticks.push(extent[0]);\n  }\n\n  var tick = niceTickExtent[0];\n\n  while (tick <= niceTickExtent[1]) {\n    ticks.push(tick); // Avoid rounding error\n\n    tick = roundNumber(tick + interval, intervalPrecision);\n\n    if (tick === ticks[ticks.length - 1]) {\n      // Consider out of safe float point, e.g.,\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\n      break;\n    }\n\n    if (ticks.length > safeLimit) {\n      return [];\n    }\n  } // Consider this case: the last item of ticks is smaller\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n    ticks.push(extent[1]);\n  }\n\n  return ticks;\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;\nexports.intervalScaleGetTicks = intervalScaleGetTicks;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/helper.js\n// module id = 257\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar modelUtil = require(\"../util/model\");\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {}\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n * @inner\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\nvar _default = Chart;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/view/Chart.js\n// module id = 258\n// module chunks = 0","var guid = require(\"./core/guid\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar Transformable = require(\"./mixin/Transformable\");\n\nvar Animatable = require(\"./mixin/Animatable\");\n\nvar zrUtil = require(\"./core/util\");\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Element.js\n// module id = 259\n// module chunks = 0","var Clip = require(\"./Clip\");\n\nvar color = require(\"../tool/color\");\n\nvar _util = require(\"../core/util\");\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Animator.js\n// module id = 260\n// module chunks = 0","var _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/requestAnimationFrame.js\n// module id = 261\n// module chunks = 0","var PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/util.js\n// module id = 262\n// module chunks = 0","function windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0;\n  return x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/windingLine.js\n// module id = 263\n// module chunks = 0","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/LRU.js\n// module id = 264\n// module chunks = 0","var vec2 = require(\"./vector\");\n\nvar curve = require(\"./curve\");\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/bbox.js\n// module id = 265\n// module chunks = 0","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/guid.js\n// module id = 266\n// module chunks = 0","var _config = require(\"../config\");\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/log.js\n// module id = 267\n// module chunks = 0","var Displayable = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar imageHelper = require(\"./helper/image\");\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Image.js\n// module id = 268\n// module chunks = 0","var Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Pattern.js\n// module id = 269\n// module chunks = 0","var STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  }\n\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = style[styleName] || prop[1];\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Style.js\n// module id = 270\n// module chunks = 0","var env = require(\"../../core/env\");\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/fixClipWithShadow.js\n// module id = 271\n// module chunks = 0","var smoothSpline = require(\"./smoothSpline\");\n\nvar smoothBezier = require(\"./smoothBezier\");\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/poly.js\n// module id = 272\n// module chunks = 0","function buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.quadraticCurveTo(x + width, y, x + width, y + r2);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.quadraticCurveTo(x + width, y + height, x + width - r3, y + height);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.quadraticCurveTo(x, y + height, x, y + height - r4);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n}\n\nexports.buildPath = buildPath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/roundRect.js\n// module id = 273\n// module chunks = 0","var _util = require(\"../../core/util\");\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = require(\"../../contain/text\");\n\nvar roundRectHelper = require(\"./roundRect\");\n\nvar imageHelper = require(\"./image\");\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  // FIXME ??? performance try\n  // if (ctx.__currentValues[prop] !== value) {\n  // ctx[prop] = ctx.__currentValues[prop] = value;\n  ctx[prop] = value; // }\n\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/text.js\n// module id = 274\n// module chunks = 0","var matrix = require(\"../core/matrix\");\n\nvar vector = require(\"../core/vector\");\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Transformable.js\n// module id = 275\n// module chunks = 0","var guid = require(\"./core/guid\");\n\nvar env = require(\"./core/env\");\n\nvar zrUtil = require(\"./core/util\");\n\nvar Handler = require(\"./Handler\");\n\nvar Storage = require(\"./Storage\");\n\nvar Painter = require(\"./Painter\");\n\nvar Animation = require(\"./animation/Animation\");\n\nvar HandlerProxy = require(\"./dom/HandlerProxy\");\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '3.7.4';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    this.painter.configLayer(zLevel, config);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    if (this._needsRefresh) {\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      this.refreshHoverImmediately();\n    }\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/zrender.js\n// module id = 276\n// module chunks = 0","<template>\r\n  <div>\r\n    <!--头部-->\r\n    <mt-header title=\"图表示例\">\r\n      <router-link to=\"/index\" slot=\"left\">\r\n        <mt-button icon=\"back\">返回</mt-button>\r\n      </router-link>\r\n      <mt-button icon=\"more\" slot=\"right\"></mt-button>\r\n    </mt-header>\r\n    <ve-line :data=\"chartData\"></ve-line>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import VeLine from 'v-charts/lib/line'\r\n  export default {\r\n    created () {\r\n      this.chartData = {\r\n        columns: ['日期', '销售量'],\r\n        rows: [\r\n          { '日期': '1月1日', '销售量': 123 },\r\n          { '日期': '1月2日', '销售量': 1223 },\r\n          { '日期': '1月3日', '销售量': 2123 },\r\n          { '日期': '1月4日', '销售量': 4123 },\r\n          { '日期': '1月5日', '销售量': 3123 },\r\n          { '日期': '1月6日', '销售量': 7123 }\r\n        ]\r\n      }\r\n    },\r\n\r\n    components: { VeLine }\r\n  }\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// vcharts.vue?3636cb92","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/ExtensionAPI.js\n// module id = 315\n// module chunks = 0","var graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"./Symbol\");\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n/**\n * @constructor\n * @alias module:echarts/chart/helper/SymbolDraw\n * @param {module:zrender/graphic/Group} [symbolCtor]\n */\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, idx, isIgnore) {\n  var point = data.getItemLayout(idx); // Is an object\n  // if (point && point.hasOwnProperty('point')) {\n  //     point = point.point;\n  // }\n\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx)) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Array.<boolean>} [isIgnore]\n */\n\n\nsymbolDrawProto.updateData = function (data, isIgnore) {\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = {\n    itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label.normal'),\n    hoverLabelModel: seriesModel.getModel('label.emphasis'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data;\n\n  if (data) {\n    if (enableAnimation) {\n      data.eachItemGraphicEl(function (el) {\n        el.fadeOut(function () {\n          group.remove(el);\n        });\n      });\n    } else {\n      group.removeAll();\n    }\n  }\n};\n\nvar _default = SymbolDraw;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/SymbolDraw.js\n// module id = 316\n// module chunks = 0","var _model = require(\"../../util/model\");\n\nvar otherDimToDataDim = _model.otherDimToDataDim;\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nfunction findLabelValueDim(data) {\n  var valueDim;\n  var labelDims = otherDimToDataDim(data, 'label');\n\n  if (labelDims.length) {\n    valueDim = labelDims[0];\n  } else {\n    // Get last value dim\n    var dimensions = data.dimensions.slice();\n    var dataType;\n\n    while (dimensions.length && (valueDim = dimensions.pop(), dataType = data.getDimensionInfo(valueDim).type, dataType === 'ordinal' || dataType === 'time')) {} // jshint ignore:line\n\n  }\n\n  return valueDim;\n}\n\nexports.findLabelValueDim = findLabelValueDim;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/labelHelper.js\n// module id = 317\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./line/LineSeries\");\n\nrequire(\"./line/LineView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nvar dataSample = require(\"../processor/dataSample\");\n\nrequire(\"../component/gridSimple\");\n\n// In case developer forget to include grid component\necharts.registerVisual(zrUtil.curry(visualSymbol, 'line', 'circle', 'line'));\necharts.registerLayout(zrUtil.curry(layoutPoints, 'line')); // Down sample after filter\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(dataSample, 'line'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line.js\n// module id = 318\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.line',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(option.data, this, ecModel);\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // stack: null\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // If clip the overflow value\n    clipOverflow: true,\n    // cursor: null,\n    label: {\n      normal: {\n        position: 'top'\n      }\n    },\n    // itemStyle: {\n    //     normal: {},\n    //     emphasis: {}\n    // },\n    lineStyle: {\n      normal: {\n        width: 2,\n        type: 'solid'\n      }\n    },\n    // areaStyle: {},\n    // false, 'start', 'end', 'middle'\n    step: false,\n    // Disabled if step is true\n    smooth: false,\n    smoothMonotone: null,\n    // 拐点图形类型\n    symbol: 'emptyCircle',\n    // 拐点图形大小\n    symbolSize: 4,\n    // 拐点图形旋转控制\n    symbolRotate: null,\n    // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n    showSymbol: true,\n    // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n    showAllSymbol: false,\n    // 是否连接断点\n    connectNulls: false,\n    // 数据过滤，'average', 'max', 'min', 'sum'\n    sampling: 'none',\n    animationEasing: 'linear',\n    // Disable progressive\n    progressive: 0,\n    hoverLayerThreshold: Infinity\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/LineSeries.js\n// module id = 319\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar lineAnimationDiff = require(\"./lineAnimationDiff\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _poly = require(\"./poly\");\n\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\n\nvar ChartView = require(\"../../view/Chart\");\n\n// FIXME step not support polar\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.3 : 0;\n}\n\nfunction getAxisExtentWithGap(axis) {\n  var extent = axis.getGlobalExtent();\n\n  if (axis.onBand) {\n    // Remove extra 1px to avoid line miter in clipped edge\n    var halfBandWidth = axis.getBandWidth() / 2 - 1;\n    var dir = extent[1] > extent[0] ? 1 : -1;\n    extent[0] += dir * halfBandWidth;\n    extent[1] -= dir * halfBandWidth;\n  }\n\n  return extent;\n}\n\nfunction sign(val) {\n  return val >= 0 ? 1 : -1;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Array.<Array.<number>>} points\n * @private\n */\n\n\nfunction getStackedOnPoints(coordSys, data) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = 0;\n\n  if (!baseAxis.onZero) {\n    var extent = valueAxis.scale.getExtent();\n\n    if (extent[0] > 0) {\n      // Both positive\n      valueStart = extent[0];\n    } else if (extent[1] < 0) {\n      // Both negative\n      valueStart = extent[1];\n    } // If is one positive, and one negative, onZero shall be true\n\n  }\n\n  var valueDim = valueAxis.dim;\n  var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n  return data.mapArray([valueDim], function (val, idx) {\n    var stackedOnSameSign;\n    var stackedOn = data.stackedOn; // Find first stacked value with same sign\n\n    while (stackedOn && sign(stackedOn.get(valueDim, idx)) === sign(val)) {\n      stackedOnSameSign = stackedOn;\n      break;\n    }\n\n    var stackedData = [];\n    stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n    stackedData[1 - baseDataOffset] = stackedOnSameSign ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n    return coordSys.dataToPoint(stackedData);\n  }, true);\n}\n\nfunction createGridClipShape(cartesian, hasAnimation, seriesModel) {\n  var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n  var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n  var x = Math.min(xExtent[0], xExtent[1]);\n  var y = Math.min(yExtent[0], yExtent[1]);\n  var width = Math.max(xExtent[0], xExtent[1]) - x;\n  var height = Math.max(yExtent[0], yExtent[1]) - y;\n  var lineWidth = seriesModel.get('lineStyle.normal.width') || 2; // Expand clip shape to avoid clipping when line value exceeds axis\n\n  var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n\n  if (isHorizontal) {\n    y -= expandSize;\n    height += expandSize * 2;\n  } else {\n    x -= expandSize;\n    width += expandSize * 2;\n  }\n\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipShape(polar, hasAnimation, seriesModel) {\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis();\n  var radiusExtent = radiusAxis.getExtent();\n  var angleExtent = angleAxis.getExtent();\n  var RADIAN = Math.PI / 180;\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: polar.cx,\n      cy: polar.cy,\n      r0: radiusExtent[0],\n      r: radiusExtent[1],\n      startAngle: -angleExtent[0] * RADIAN,\n      endAngle: -angleExtent[1] * RADIAN,\n      clockwise: angleAxis.inverse\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: -angleExtent[1] * RADIAN\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipShape(coordSys, hasAnimation, seriesModel) {\n  return coordSys.type === 'polar' ? createPolarClipShape(coordSys, hasAnimation, seriesModel) : createGridClipShape(coordSys, hasAnimation, seriesModel);\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    // Can only be x or y\n    if (visualMetaList[i].dimension < 2) {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta || coordSys.type !== 'cartesian2d') {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var dimension = visualMeta.dimension;\n  var dimName = data.dimensions[dimension];\n  var axis = coordSys.getAxis(dimName); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[dimName] = minCoord;\n  gradient[dimName + '2'] = maxCoord;\n  return gradient;\n}\n\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n    var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n    var points = data.mapArray(data.getItemLayout, true);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var stackedOnPoints = getStackedOnPoints(coordSys, data);\n    var showSymbol = seriesModel.get('showSymbol');\n\n    var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol') && this._getSymbolIgnoreFunc(data, coordSys); // Remove temporary symbols\n\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step'); // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n\n      lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // Update clipPath\n\n\n      lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel)); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, isSymbolIgnore); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n\n    if (polygon) {\n      var stackedOn = data.stackedOn;\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n\n      if (stackedOn) {\n        var stackedOnSeries = stackedOn.hostModel;\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n  },\n  dispose: function () {},\n  highlight: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n\n        if (!pt) {\n          // Null data\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  },\n\n  /**\n   * @private\n   */\n  _getSymbolIgnoreFunc: function (data, coordSys) {\n    var categoryAxis = coordSys.getAxesByScale('ordinal')[0]; // `getLabelInterval` is provided by echarts/component/axis\n\n    if (categoryAxis && categoryAxis.isLabelIgnored) {\n      return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n    }\n  },\n\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/LineView.js\n// module id = 320\n// module chunks = 0","// var arrayDiff = require('zrender/src/core/arrayDiff');\n// 'zrender/src/core/arrayDiff' has been used before, but it did\n// not do well in performance when roam with fixed dataZoom window.\nfunction sign(val) {\n  return val >= 0 ? 1 : -1;\n}\n\nfunction getStackedOnPoint(coordSys, data, idx) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = baseAxis.onZero ? 0 : valueAxis.scale.getExtent()[0];\n  var valueDim = valueAxis.dim;\n  var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n  var stackedOnSameSign;\n  var stackedOn = data.stackedOn;\n  var val = data.get(valueDim, idx); // Find first stacked value with same sign\n\n  while (stackedOn && sign(stackedOn.get(valueDim, idx)) === sign(val)) {\n    stackedOnSameSign = stackedOn;\n    break;\n  }\n\n  var stackedData = [];\n  stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n  stackedData[1 - baseDataOffset] = stackedOnSameSign ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n  return coordSys.dataToPoint(stackedData);\n} // function convertToIntId(newIdList, oldIdList) {\n//     // Generate int id instead of string id.\n//     // Compare string maybe slow in score function of arrDiff\n//     // Assume id in idList are all unique\n//     var idIndicesMap = {};\n//     var idx = 0;\n//     for (var i = 0; i < newIdList.length; i++) {\n//         idIndicesMap[newIdList[i]] = idx;\n//         newIdList[i] = idx++;\n//     }\n//     for (var i = 0; i < oldIdList.length; i++) {\n//         var oldId = oldIdList[i];\n//         // Same with newIdList\n//         if (idIndicesMap[oldId]) {\n//             oldIdList[i] = idIndicesMap[oldId];\n//         }\n//         else {\n//             oldIdList[i] = idx++;\n//         }\n//     }\n// }\n\n\nfunction diffData(oldData, newData) {\n  var diffResult = [];\n  newData.diff(oldData).add(function (idx) {\n    diffResult.push({\n      cmd: '+',\n      idx: idx\n    });\n  }).update(function (newIdx, oldIdx) {\n    diffResult.push({\n      cmd: '=',\n      idx: oldIdx,\n      idx1: newIdx\n    });\n  }).remove(function (idx) {\n    diffResult.push({\n      cmd: '-',\n      idx: idx\n    });\n  }).execute();\n  return diffResult;\n}\n\nfunction _default(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys) {\n  var diff = diffData(oldData, newData); // var newIdList = newData.mapArray(newData.getId);\n  // var oldIdList = oldData.mapArray(oldData.getId);\n  // convertToIntId(newIdList, oldIdList);\n  // // FIXME One data ?\n  // diff = arrayDiff(oldIdList, newIdList);\n\n  var currPoints = [];\n  var nextPoints = []; // Points for stacking base line\n\n  var currStackedPoints = [];\n  var nextStackedPoints = [];\n  var status = [];\n  var sortedIndices = [];\n  var rawIndices = [];\n  var dims = newCoordSys.dimensions;\n\n  for (var i = 0; i < diff.length; i++) {\n    var diffItem = diff[i];\n    var pointAdded = true; // FIXME, animation is not so perfect when dataZoom window moves fast\n    // Which is in case remvoing or add more than one data in the tail or head\n\n    switch (diffItem.cmd) {\n      case '=':\n        var currentPt = oldData.getItemLayout(diffItem.idx);\n        var nextPt = newData.getItemLayout(diffItem.idx1); // If previous data is NaN, use next point directly\n\n        if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n          currentPt = nextPt.slice();\n        }\n\n        currPoints.push(currentPt);\n        nextPoints.push(nextPt);\n        currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n        nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\n        break;\n\n      case '+':\n        var idx = diffItem.idx;\n        currPoints.push(oldCoordSys.dataToPoint([newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)]));\n        nextPoints.push(newData.getItemLayout(idx).slice());\n        currStackedPoints.push(getStackedOnPoint(oldCoordSys, newData, idx));\n        nextStackedPoints.push(newStackedOnPoints[idx]);\n        rawIndices.push(newData.getRawIndex(idx));\n        break;\n\n      case '-':\n        var idx = diffItem.idx;\n        var rawIndex = oldData.getRawIndex(idx); // Data is replaced. In the case of dynamic data queue\n        // FIXME FIXME FIXME\n\n        if (rawIndex !== idx) {\n          currPoints.push(oldData.getItemLayout(idx));\n          nextPoints.push(newCoordSys.dataToPoint([oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)]));\n          currStackedPoints.push(oldStackedOnPoints[idx]);\n          nextStackedPoints.push(getStackedOnPoint(newCoordSys, oldData, idx));\n          rawIndices.push(rawIndex);\n        } else {\n          pointAdded = false;\n        }\n\n    } // Original indices\n\n\n    if (pointAdded) {\n      status.push(diffItem);\n      sortedIndices.push(sortedIndices.length);\n    }\n  } // Diff result may be crossed if all items are changed\n  // Sort by data index\n\n\n  sortedIndices.sort(function (a, b) {\n    return rawIndices[a] - rawIndices[b];\n  });\n  var sortedCurrPoints = [];\n  var sortedNextPoints = [];\n  var sortedCurrStackedPoints = [];\n  var sortedNextStackedPoints = [];\n  var sortedStatus = [];\n\n  for (var i = 0; i < sortedIndices.length; i++) {\n    var idx = sortedIndices[i];\n    sortedCurrPoints[i] = currPoints[idx];\n    sortedNextPoints[i] = nextPoints[idx];\n    sortedCurrStackedPoints[i] = currStackedPoints[idx];\n    sortedNextStackedPoints[i] = nextStackedPoints[idx];\n    sortedStatus[i] = status[idx];\n  }\n\n  return {\n    current: sortedCurrPoints,\n    next: sortedNextPoints,\n    stackedOnCurrent: sortedCurrStackedPoints,\n    stackedOnNext: sortedNextStackedPoints,\n    status: sortedStatus\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/lineAnimationDiff.js\n// module id = 321\n// module chunks = 0","var Path = require(\"zrender/lib/graphic/Path\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar fixClipWithShadow = require(\"zrender/lib/graphic/helper/fixClipWithShadow\");\n\n// Poly path support NaN point\nvar vec2Min = vec2.min;\nvar vec2Max = vec2.max;\nvar scaleAndAdd = vec2.scaleAndAdd;\nvar v2Copy = vec2.copy; // Temporary variable\n\nvar v = [];\nvar cp0 = [];\nvar cp1 = [];\n\nfunction isPointNull(p) {\n  return isNaN(p[0]) || isNaN(p[1]);\n}\n\nfunction drawSegment(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n      v2Copy(cp0, p);\n    } else {\n      if (smooth > 0) {\n        var nextIdx = idx + dir;\n        var nextP = points[nextIdx];\n\n        if (connectNulls) {\n          // Find next point not null\n          while (nextP && isPointNull(points[nextIdx])) {\n            nextIdx += dir;\n            nextP = points[nextIdx];\n          }\n        }\n\n        var ratioNextSeg = 0.5;\n        var prevP = points[prevIdx];\n        var nextP = points[nextIdx]; // Last point\n\n        if (!nextP || isPointNull(nextP)) {\n          v2Copy(cp1, p);\n        } else {\n          // If next data is null in not connect case\n          if (isPointNull(nextP) && !connectNulls) {\n            nextP = p;\n          }\n\n          vec2.sub(v, nextP, prevP);\n          var lenPrevSeg;\n          var lenNextSeg;\n\n          if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n            var dim = smoothMonotone === 'x' ? 0 : 1;\n            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n          } else {\n            lenPrevSeg = vec2.dist(p, prevP);\n            lenNextSeg = vec2.dist(p, nextP);\n          } // Use ratio of seg length\n\n\n          ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n          scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n        } // Smooth constraint\n\n\n        vec2Min(cp0, cp0, smoothMax);\n        vec2Max(cp0, cp0, smoothMin);\n        vec2Min(cp1, cp1, smoothMax);\n        vec2Max(cp1, cp1, smoothMin);\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]); // cp0 of next segment\n\n        scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n\nfunction getBoundingBox(points, smoothConstraint) {\n  var ptMin = [Infinity, Infinity];\n  var ptMax = [-Infinity, -Infinity];\n\n  if (smoothConstraint) {\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (pt[0] < ptMin[0]) {\n        ptMin[0] = pt[0];\n      }\n\n      if (pt[1] < ptMin[1]) {\n        ptMin[1] = pt[1];\n      }\n\n      if (pt[0] > ptMax[0]) {\n        ptMax[0] = pt[0];\n      }\n\n      if (pt[1] > ptMax[1]) {\n        ptMax[1] = pt[1];\n      }\n    }\n  }\n\n  return {\n    min: smoothConstraint ? ptMin : ptMax,\n    max: smoothConstraint ? ptMax : ptMin\n  };\n}\n\nvar Polyline = Path.extend({\n  type: 'ec-polyline',\n  shape: {\n    points: [],\n    smooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  style: {\n    fill: null,\n    stroke: '#000'\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var i = 0;\n    var len = points.length;\n    var result = getBoundingBox(points, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      i += drawSegment(ctx, points, i, len, len, 1, result.min, result.max, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;\n    }\n  }\n});\nvar Polygon = Path.extend({\n  type: 'ec-polygon',\n  shape: {\n    points: [],\n    // Offset between stacked base points and points\n    stackedOnPoints: [],\n    smooth: 0,\n    stackedOnSmooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var stackedOnPoints = shape.stackedOnPoints;\n    var i = 0;\n    var len = points.length;\n    var smoothMonotone = shape.smoothMonotone;\n    var bbox = getBoundingBox(points, shape.smoothConstraint);\n    var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      var k = drawSegment(ctx, points, i, len, len, 1, bbox.min, bbox.max, shape.smooth, smoothMonotone, shape.connectNulls);\n      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);\n      i += k + 1;\n      ctx.closePath();\n    }\n  }\n});\nexports.Polyline = Polyline;\nexports.Polygon = Polygon;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/poly.js\n// module id = 322\n// module chunks = 0","require(\"../coord/cartesian/AxisModel\");\n\nrequire(\"./axis/CartesianAxisView\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis.js\n// module id = 323\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisPointerModelHelper = require(\"./axisPointer/modelHelper\");\n\nvar axisTrigger = require(\"./axisPointer/axisTrigger\");\n\nrequire(\"./axisPointer/AxisPointerModel\");\n\nrequire(\"./axisPointer/AxisPointerView\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer.js\n// module id = 324\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/AxisPointerModel.js\n// module id = 325\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar globalListener = require(\"./globalListener\");\n\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/AxisPointerView.js\n// module id = 326\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar clazzUtil = require(\"../../util/clazz\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar axisPointerModelHelper = require(\"./modelHelper\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar get = modelUtil.makeGetter();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = get(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = get(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = get(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    get(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(get(el).lastProp, props)) {\n    get(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/BaseAxisPointer.js\n// module id = 327\n// module chunks = 0","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar cartesianAxisHelper = require(\"../axis/cartesianAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/CartesianAxisPointer.js\n// module id = 328\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar modelHelper = require(\"./modelHelper\");\n\nvar findPointFromSeries = require(\"./findPointFromSeries\");\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar get = modelUtil.makeGetter();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.coordDimToDataDim(dim);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      false, axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = get(zr)[highDownKey] || {};\n  var newHighlights = get(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/axisTrigger.js\n// module id = 329\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar cartesianAxisHelper = require(\"./cartesianAxisHelper\");\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\nvar getInterval = AxisBuilder.getInterval;\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel, layout.labelInterval);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineInterval = getInterval(splitLineModel, labelInterval);\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, lineInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: 'line_' + ticks[i],\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var prevX = axis.toGlobalCoord(ticksCoords[0]);\n    var prevY = axis.toGlobalCoord(ticksCoords[0]);\n    var count = 0;\n    var areaInterval = getInterval(splitAreaModel, labelInterval);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, areaInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prevX;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n      } else {\n        x = gridRect.x;\n        y = prevY;\n        width = gridRect.width;\n        height = tickCoord - y;\n      }\n\n      var colorIndex = count++ % areaColors.length;\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: 'area_' + ticks[i],\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      prevX = x + width;\n      prevY = y + height;\n    }\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/CartesianAxisView.js\n// module id = 330\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./axis\");\n\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/gridSimple.js\n// module id = 331\n// module chunks = 0","var _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/helper/listComponent.js\n// module id = 332\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"./legend/LegendModel\");\n\nrequire(\"./legend/legendAction\");\n\nrequire(\"./legend/LegendView\");\n\nvar legendFilter = require(\"./legend/legendFilter\");\n\nvar Component = require(\"../model/Component\");\n\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend.js\n// module id = 333\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    this._data = legendData;\n    var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n      return series.name;\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        availableNames = availableNames.concat(data.mapArray(data.getName));\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/LegendModel.js\n// module id = 334\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _listComponent = require(\"../helper/listComponent\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/LegendView.js\n// module id = 335\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/legendAction.js\n// module id = 336\n// module chunks = 0","function _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/legendFilter.js\n// module id = 337\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./tooltip/TooltipModel\");\n\nrequire(\"./tooltip/TooltipView\");\n\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip.js\n// module id = 338\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar eventUtil = require(\"zrender/lib/core/event\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipContent.js\n// module id = 339\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipModel.js\n// module id = 340\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar TooltipContent = require(\"./TooltipContent\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar Model = require(\"../../model/Model\");\n\nvar globalListener = require(\"../axisPointer/globalListener\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\n\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (tooltipOpt instanceof Model) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipView.js\n// module id = 341\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  // 一级层叠\n  z: 0,\n  // 二级层叠\n  // 反向坐标轴\n  inverse: false,\n  // 坐标轴名字，默认为空\n  name: '',\n  // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // 坐标轴名字旋转，degree。\n  nameRotate: null,\n  // Adapt to axis rotate, when nameLocation is 'middle'.\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // 坐标轴文字样式，默认取全局样式\n  nameTextStyle: {},\n  // 文字与轴线距离\n  nameGap: 15,\n  silent: false,\n  // Default false to support tooltip.\n  triggerEvent: false,\n  // Default false to avoid legacy user event listener fail.\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  // 坐标轴线\n  axisLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // 坐标轴两端的箭头\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // 属性show控制显示与否，默认显示\n    show: true,\n    // 控制小标记是否在grid里\n    inside: false,\n    // 属性length控制线长\n    length: 5,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      width: 1\n    }\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    show: true,\n    // 控制文本标签是否在grid里\n    inside: false,\n    rotate: 0,\n    showMinLabel: null,\n    // true | false | null (auto)\n    showMaxLabel: null,\n    // true | false | null (auto)\n    margin: 8,\n    // formatter: null,\n    // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n    fontSize: 12\n  },\n  // 分隔线\n  splitLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    // 属性lineStyle（详见lineStyle）控制线条样式\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  // 分隔区域\n  splitArea: {\n    // 默认不显示，属性show控制显示与否\n    show: false,\n    // 属性areaStyle（详见areaStyle）控制区域样式\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // 类目起始和结束两端空白策略\n  boundaryGap: true,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // 数值起始和结束两端空白策略\n  boundaryGap: [0, 0],\n  // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n  // min: null,\n  // 最大值，设置成 'dataMax' 则从数据中计算最大值\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // 脱离0值比例，放大聚焦到最终_min，_max区间\n  // scale: false,\n  // 分割段数，默认为5\n  splitNumber: 5 // Minimum interval\n  // minInterval: null\n  // maxInterval: null\n\n}, defaultOption); // FIXME\n\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisDefault.js\n// module id = 342\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"./axisDefault\");\n\nvar ComponentModel = require(\"../model/Component\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisModelCreator.js\n// module id = 343\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * If axis is on the zero position of the other axis\n   * @type {boolean}\n   */\n  onZero: false,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * If label is ignored.\n   * Automatically used when axis is category and label can not be all shown\n   * @param  {number}  idx\n   * @return {boolean}\n   */\n  isLabelIgnored: function (idx) {\n    if (this.type === 'category') {\n      var labelInterval = this.getLabelInterval();\n      return typeof labelInterval === 'function' && !labelInterval(idx, this.scale.getLabel(idx)) || idx % (labelInterval + 1);\n    }\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Axis2D.js\n// module id = 344\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Cartesian.js\n// module id = 345\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Cartesian = require(\"./Cartesian\");\n\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, clamp) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    return [xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)), yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))];\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, clamp) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    return [xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp), yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)];\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Cartesian2D.js\n// module id = 346\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar Cartesian2D = require(\"./Cartesian2D\");\n\nvar Axis2D = require(\"./Axis2D\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nrequire(\"./GridModel\");\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\nvar each = zrUtil.each;\nvar ifAxisCrossZero = axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = axisHelper.niceScaleExtent;\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\n\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n\nfunction getLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var labels = axisModel.getFormattedLabels();\n  var axisLabelModel = axisModel.getModel('axisLabel');\n  var rect;\n  var step = 1;\n  var labelCount = labels.length;\n\n  if (labelCount > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.ceil(labelCount / 40);\n  }\n\n  for (var i = 0; i < labelCount; i += step) {\n    if (!axis.isLabelIgnored(i)) {\n      var unrotatedSingleRect = axisLabelModel.getTextRect(labels[i]);\n      var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n      rect ? rect.union(singleRect) : rect = singleRect;\n    }\n  }\n\n  return rect;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  });\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n  // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n  var axes = axesMap[otherAxisDim];\n\n  if (!axis.onZero) {\n    return;\n  }\n\n  var onZeroAxisIndex = axis.onZeroAxisIndex; // If target axis is specified.\n\n  if (onZeroAxisIndex != null) {\n    var otherAxis = axes[onZeroAxisIndex];\n\n    if (otherAxis && canNotOnZeroToAxis(otherAxis)) {\n      axis.onZero = false;\n    }\n\n    return;\n  }\n\n  for (var idx in axes) {\n    if (axes.hasOwnProperty(idx)) {\n      var otherAxis = axes[idx];\n\n      if (otherAxis && !canNotOnZeroToAxis(otherAxis)) {\n        onZeroAxisIndex = +idx;\n        break;\n      }\n    }\n  }\n\n  if (onZeroAxisIndex == null) {\n    axis.onZero = false;\n  }\n\n  axis.onZeroAxisIndex = onZeroAxisIndex;\n}\n\nfunction canNotOnZeroToAxis(axis) {\n  return axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = getLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (zrUtil.isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse');\n      axis.onZero = axisModel.get('axisLine.onZero');\n      axis.onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  zrUtil.each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n      axis.scale.unionExtentFromData(data, dim);\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransfrom(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return zrUtil.map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Grid.js\n// module id = 347\n// module chunks = 0","require(\"./AxisModel\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/GridModel.js\n// module id = 348\n// module chunks = 0","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar polygonContain = require(\"zrender/lib/contain/polygon\");\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n};\nvar _default = Region;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/geo/Region.js\n// module id = 349\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"./Region\");\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/geo/parseGeoJson.js\n// module id = 350\n// module chunks = 0","function defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n    // when duplicate keys exists (consider newDataIndex.pop() below).\n    // For performance consideration, these code below do not look neat.\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.unshift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/DataDiffer.js\n// module id = 351\n// module chunks = 0","var zrender = require(\"zrender/lib/zrender\");\n\nexports.zrender = zrender;\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nexports.matrix = matrix;\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nexports.vector = vector;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nexports.color = colorTool;\n\nvar graphic = require(\"./util/graphic\");\n\nexports.graphic = graphic;\n\nvar numberUtil = require(\"./util/number\");\n\nexports.number = numberUtil;\n\nvar formatUtil = require(\"./util/format\");\n\nexports.format = formatUtil;\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = require(\"./helper\");\n\nexports.helper = ecHelper;\n\nvar _List = require(\"./data/List\");\n\nexports.List = _List;\n\nvar _Model = require(\"./model/Model\");\n\nexports.Model = _Model;\n\nvar _Axis = require(\"./coord/Axis\");\n\nexports.Axis = _Axis;\n\nvar _env = require(\"zrender/lib/core/env\");\n\nexports.env = _env;\n\nvar _parseGeoJson = require(\"./coord/geo/parseGeoJson\");\n\nexports.parseGeoJson = _parseGeoJson;\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nexports.util = ecUtil;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/export.js\n// module id = 352\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListFromArray = require(\"./chart/helper/createListFromArray\");\n\nvar axisHelper = require(\"./coord/axisHelper\");\n\nvar axisModelCommonMixin = require(\"./coord/axisModelCommonMixin\");\n\nvar Model = require(\"./model/Model\");\n\nvar _completeDimensions = require(\"./data/helper/completeDimensions\");\n\nexports.completeDimensions = _completeDimensions;\n\nvar _symbol = require(\"./util/symbol\");\n\nexports.createSymbol = _symbol.createSymbol;\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\nfunction createList(seriesModel) {\n  var data = seriesModel.get('data');\n  return createListFromArray(data, seriesModel, seriesModel.ecModel);\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n */\n\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!(option instanceof Model)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/helper.js\n// module id = 353\n// module chunks = 0","function _default(seriesType, ecModel) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (!coordSys) {\n      return;\n    }\n\n    var dims = [];\n    var coordDims = coordSys.dimensions;\n\n    for (var i = 0; i < coordDims.length; i++) {\n      dims.push(seriesModel.coordDimToDataDim(coordSys.dimensions[i])[0]);\n    }\n\n    if (dims.length === 1) {\n      data.each(dims[0], function (x, idx) {\n        // Also {Array.<number>}, not undefined to avoid if...else... statement\n        data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n      });\n    } else if (dims.length === 2) {\n      data.each(dims, function (x, y, idx) {\n        // Also {Array.<number>}, not undefined to avoid if...else... statement\n        data.setItemLayout(idx, isNaN(x) || isNaN(y) ? [NaN, NaN] : coordSys.dataToPoint([x, y]));\n      }, true);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/layout/points.js\n// module id = 354\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/loading/default.js\n// module id = 355\n// module chunks = 0","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar Model = require(\"./Model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar globalDefault = require(\"./globalDefault\");\n\nvar colorPaletteMinin = require(\"./mixin/colorPalette\");\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar each = zrUtil.each;\nvar filter = zrUtil.filter;\nvar map = zrUtil.map;\nvar isArray = zrUtil.isArray;\nvar indexOf = zrUtil.indexOf;\nvar isObject = zrUtil.isObject;\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  constructor: GlobalModel,\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    zrUtil.assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = []; // 如果不存在对应的 component model 则直接 merge\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        option[mainType] = option[mainType] == null ? zrUtil.clone(componentOption) : zrUtil.merge(option[mainType], componentOption, true);\n      } else {\n        newCptTypes.push(mainType);\n      }\n    }); // FIXME OPTION 同步是否要改回原来的\n\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n    this._seriesIndices = this._seriesIndices || [];\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        zrUtil.assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name;\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = zrUtil.extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            zrUtil.extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n      }\n    }\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = zrUtil.clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (zrUtil.isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    this._seriesIndices = createSeriesIndices(filteredSeries);\n  },\n  restoreData: function () {\n    var componentsMap = this._componentsMap;\n    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        component.restoreData();\n      });\n    });\n  }\n});\n/**\n * @inner\n */\n\nfunction mergeTheme(option, theme) {\n  zrUtil.each(theme, function (themeItem, name) {\n    // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? zrUtil.clone(themeItem) : zrUtil.merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = zrUtil.createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices = null;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  zrUtil.merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!zrUtil.isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(seriesModels) {\n  return map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || [];\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nzrUtil.mixin(GlobalModel, colorPaletteMinin);\nvar _default = GlobalModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Global.js\n// module id = 356\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/OptionManager.js\n// module id = 357\n// module chunks = 0","var platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // 全图默认背景\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // 浅色\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // 深色\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  // 默认需要 Grid 配置项\n  // grid: {},\n  // 主题，主题\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/globalDefault.js\n// module id = 358\n// module chunks = 0","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\nvar _default = {\n  getAreaStyle: function (excludes, includes) {\n    return getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/areaStyle.js\n// module id = 359\n// module chunks = 0","var _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/boxLayout.js\n// module id = 360\n// module chunks = 0","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\nvar _default = {\n  getItemStyle: function (excludes, includes) {\n    var style = getItemStyle(this, excludes, includes);\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function () {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/itemStyle.js\n// module id = 361\n// module chunks = 0","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getLineStyle: function (excludes) {\n    var style = getLineStyle(this, excludes);\n    var lineDash = this.getLineDash(style.lineWidth);\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getLineDash: function (lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/lineStyle.js\n// module id = 362\n// module chunks = 0","var textContain = require(\"zrender/lib/contain/text\");\n\nvar graphicUtil = require(\"../../util/graphic\");\n\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/textStyle.js\n// module id = 363\n// module chunks = 0","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = require(\"./helper/compatStyle\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\nvar COMPATITABLE_SERIES = ['bar', 'boxplot', 'candlestick', 'chord', 'effectScatter', 'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel', 'pie', 'radar', 'sankey', 'scatter', 'treemap'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n      if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n        compatLayoutProperties(seriesOpt);\n        break;\n      }\n    }\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/preprocessor/backwardCompat.js\n// module id = 364\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction compatTextStyle(opt, propName) {\n  var labelOptSingle = isObject(opt) && opt[propName];\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOptSingle[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatLabelTextStyle(labelOpt) {\n  if (isObject(labelOpt)) {\n    compatTextStyle(labelOpt, 'normal');\n    compatTextStyle(labelOpt, 'emphasis');\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatItemStyle(seriesOpt);\n  compatLabelTextStyle(seriesOpt.label); // treemap\n\n  compatLabelTextStyle(seriesOpt.upperLabel); // graph\n\n  compatLabelTextStyle(seriesOpt.edgeLabel);\n  var markPoint = seriesOpt.markPoint;\n  compatItemStyle(markPoint);\n  compatLabelTextStyle(markPoint && markPoint.label);\n  var markLine = seriesOpt.markLine;\n  compatItemStyle(seriesOpt.markLine);\n  compatLabelTextStyle(markLine && markLine.label);\n  var markArea = seriesOpt.markArea;\n  compatLabelTextStyle(markArea && markArea.label); // For gauge\n\n  compatTextStyle(seriesOpt, 'axisLabel');\n  compatTextStyle(seriesOpt, 'title');\n  compatTextStyle(seriesOpt, 'detail');\n  var data = seriesOpt.data;\n\n  if (data) {\n    for (var i = 0; i < data.length; i++) {\n      compatItemStyle(data[i]);\n      compatLabelTextStyle(data[i] && data[i].label);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatItemStyle(mpData[i]);\n      compatLabelTextStyle(mpData[i] && mpData[i].label);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatItemStyle(mlData[i][0]);\n        compatLabelTextStyle(mlData[i][0] && mlData[i][0].label);\n        compatItemStyle(mlData[i][1]);\n        compatLabelTextStyle(mlData[i][1] && mlData[i][1].label);\n      } else {\n        compatItemStyle(mlData[i]);\n        compatLabelTextStyle(mlData[i] && mlData[i].label);\n      }\n    }\n  }\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatLabelTextStyle(geoOpt.label);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatLabelTextStyle(regionObj.label);\n      });\n    }\n  });\n  compatLabelTextStyle(toObj(option.timeline).label);\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/preprocessor/helper/compatStyle.js\n// module id = 365\n// module chunks = 0","var samplers = {\n  average: function (frame) {\n    var sum = 0;\n    var count = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      if (!isNaN(frame[i])) {\n        sum += frame[i];\n        count++;\n      }\n    } // Return NaN if count is 0\n\n\n    return count === 0 ? NaN : sum / count;\n  },\n  sum: function (frame) {\n    var sum = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      // Ignore NaN\n      sum += frame[i] || 0;\n    }\n\n    return sum;\n  },\n  max: function (frame) {\n    var max = -Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] > max && (max = frame[i]);\n    }\n\n    return max;\n  },\n  min: function (frame) {\n    var min = Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] < min && (min = frame[i]);\n    }\n\n    return min;\n  },\n  // TODO\n  // Median\n  nearest: function (frame) {\n    return frame[0];\n  }\n};\n\nvar indexSampler = function (frame, value) {\n  return Math.round(frame.length / 2);\n};\n\nfunction _default(seriesType, ecModel, api) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var sampling = seriesModel.get('sampling');\n    var coordSys = seriesModel.coordinateSystem; // Only cartesian2d support down sampling\n\n    if (coordSys.type === 'cartesian2d' && sampling) {\n      var baseAxis = coordSys.getBaseAxis();\n      var valueAxis = coordSys.getOtherAxis(baseAxis);\n      var extent = baseAxis.getExtent(); // Coordinste system has been resized\n\n      var size = extent[1] - extent[0];\n      var rate = Math.round(data.count() / size);\n\n      if (rate > 1) {\n        var sampler;\n\n        if (typeof sampling === 'string') {\n          sampler = samplers[sampling];\n        } else if (typeof sampling === 'function') {\n          sampler = sampling;\n        }\n\n        if (sampler) {\n          data = data.downSample(valueAxis.dim, 1 / rate, sampler, indexSampler);\n          seriesModel.setData(data);\n        }\n      }\n    }\n  }, this);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/processor/dataSample.js\n// module id = 366\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar IntervalScale = require(\"./Interval\");\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, true, function (val) {\n      return val > 0;\n    }));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Log.js\n// module id = 367\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n  init: function (data, extent) {\n    this._data = data;\n    this._extent = extent || [0, data.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? zrUtil.indexOf(this._data, val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._data[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    return this._data[n];\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, false));\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Ordinal.js\n// module id = 368\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar scaleHelper = require(\"./helper\");\n\nvar IntervalScale = require(\"./Interval\");\n\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function (a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function (val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function (val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n}); // Steps from d3\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 42], // 10w\n['quarter', ONE_DAY * 380 / 4], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Time.js\n// module id = 369\n// module chunks = 0","var Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {}\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/view/Component.js\n// module id = 370\n// module chunks = 0","var Gradient = require(\"zrender/lib/graphic/Gradient\");\n\nfunction _default(ecModel) {\n  function encodeColor(seriesModel) {\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n    var data = seriesModel.getData();\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette(seriesModel.get('name')); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      });\n    }\n  }\n\n  ecModel.eachRawSeries(encodeColor);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/seriesColor.js\n// module id = 371\n// module chunks = 0","function _default(seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n  // Encoding visual for all series include which is filtered for legend drawing\n  ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n    var symbolSize = seriesModel.get('symbolSize');\n    data.setVisual({\n      legendSymbol: legendSymbol || symbolType,\n      symbol: symbolType,\n      symbolSize: symbolSize\n    }); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof symbolSize === 'function') {\n        data.each(function (idx) {\n          var rawValue = seriesModel.getRawValue(idx); // FIXME\n\n          var params = seriesModel.getDataParams(idx);\n          data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n        });\n      }\n\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var itemSymbolType = itemModel.getShallow('symbol', true);\n        var itemSymbolSize = itemModel.getShallow('symbolSize', true); // If has item symbol\n\n        if (itemSymbolType != null) {\n          data.setItemVisual(idx, 'symbol', itemSymbolType);\n        }\n\n        if (itemSymbolSize != null) {\n          // PENDING Transform symbolSize ?\n          data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/symbol.js\n// module id = 372\n// module chunks = 0","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('echarts/lib/echarts'), require('echarts/lib/component/tooltip'), require('echarts/lib/component/legend'), require('echarts/lib/chart/line')) :\n\ttypeof define === 'function' && define.amd ? define(['echarts/lib/echarts', 'echarts/lib/component/tooltip', 'echarts/lib/component/legend', 'echarts/lib/chart/line'], factory) :\n\t(global.VeLine = factory(global.echarts));\n}(this, (function (echarts) { 'use strict';\n\necharts = 'default' in echarts ? echarts['default'] : echarts;\n\necharts.registerTheme('ve-chart', {\n  categoryAxis: {\n    axisLine: { show: false },\n    axisTick: { show: false },\n    splitLine: { show: false }\n  },\n  valueAxis: {\n    axisLine: { show: false }\n  },\n  line: {\n    smooth: true\n  },\n  grid: {\n    containLabel: true,\n    left: 10,\n    right: 10\n  }\n});\n\nvar itemPoint = function itemPoint(color) {\n  return ['<span style=\"', 'background-color:' + color + ';', 'display: inline-block;', 'width: 10px;', 'height: 10px;', 'border-radius: 50%;', 'margin-right:2px;', '\"></span>'].join('');\n};\n\nvar color = ['#19d4ae', '#5ab1ef', '#fa6e86', '#ffb980', '#0067a6', '#c4b4e4', '#d87a80', '#9cbbff', '#d9d0c7', '#87a997', '#d49ea2', '#5b4947', '#7ba3a8'];\n\nvar numberFormat = function numberFormat(val) {\n  var digits = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n\n  if (isNaN(+val)) return val;\n\n  var symbolMap = [{ value: 1E18, symbol: 'E' }, { value: 1E15, symbol: 'P' }, { value: 1E12, symbol: 'T' }, { value: 1E9, symbol: 'B' }, { value: 1E6, symbol: 'M' }, { value: 1E3, symbol: 'k' }];\n\n  for (var i = 0; i < symbolMap.length; i++) {\n    if (Math.abs(val) >= symbolMap[i].value) {\n      return (val / symbolMap[i].value).toFixed(digits) + symbolMap[i].symbol;\n    }\n  }\n\n  return val.toString();\n};\n\nvar formatTausends = function formatTausends(num) {\n  return String(num).replace(/^(\\s+|-)?\\d+(?=.?\\d*($|\\s))/g, function (m) {\n    return m.replace(/(?=(?!\\b)(\\d{3})+$)/g, ',');\n  });\n};\n\nvar getFormated = function getFormated(val, type) {\n  var digit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 2;\n  var defaultVal = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '-';\n\n  if (val == null || isNaN(val)) return defaultVal;\n  switch (type) {\n    case 'KMB':\n      return numberFormat(val);\n    case 'percent':\n      return parseFloat((val * 100).toFixed(digit)) + '%';\n    case 'normal':\n      return formatTausends(val);\n    default:\n      return val;\n  }\n};\n\n\n\nvar getStackMap = function getStackMap(stack) {\n  var stackMap = {};\n  Object.keys(stack).forEach(function (item) {\n    stack[item].forEach(function (name) {\n      stackMap[name] = item;\n    });\n  });\n  return stackMap;\n};\n\n\n\n\n\n\n\n\n\nvar getType = function getType(v) {\n  return Object.prototype.toString.call(v);\n};\n\nvar toKebab = function toKebab(v) {\n  return v.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n};\n\nvar isArray = function isArray(v) {\n  return getType(v) === '[object Array]';\n};\n\nvar isObject = function isObject(v) {\n  return getType(v) === '[object Object]';\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction getLineXAxis(args) {\n  var dimension = args.dimension,\n      rows = args.rows,\n      xAxisName = args.xAxisName,\n      axisVisible = args.axisVisible,\n      xAxisType = args.xAxisType;\n\n  return dimension.map(function (item, index) {\n    return {\n      type: xAxisType,\n      nameLocation: 'middle',\n      nameGap: 22,\n      boundaryGap: false,\n      name: xAxisName[index] || '',\n      axisTick: { show: true, lineStyle: { color: '#eee' } },\n      data: rows.map(function (row) {\n        return row[item];\n      }),\n      show: axisVisible\n    };\n  });\n}\n\nfunction getLineSeries(args) {\n  var rows = args.rows,\n      axisSite = args.axisSite,\n      metrics = args.metrics,\n      area = args.area,\n      stack = args.stack,\n      nullAddZero = args.nullAddZero,\n      labelMap = args.labelMap,\n      label = args.label,\n      itemStyle = args.itemStyle,\n      lineStyle = args.lineStyle,\n      areaStyle = args.areaStyle,\n      xAxisType = args.xAxisType,\n      dimension = args.dimension;\n\n  var series = [];\n  var dataTemp = {};\n  var stackMap = stack && getStackMap(stack);\n  metrics.forEach(function (item) {\n    dataTemp[item] = [];\n  });\n  rows.forEach(function (row) {\n    metrics.forEach(function (item) {\n      var value = null;\n      if (row[item] != null) {\n        value = row[item];\n      } else if (nullAddZero) {\n        value = 0;\n      }\n      var dataItem = xAxisType === 'category' ? value : [row[dimension[0]], value];\n      dataTemp[item].push(dataItem);\n    });\n  });\n  metrics.forEach(function (item) {\n    var seriesItem = {\n      name: labelMap[item] != null ? labelMap[item] : item,\n      type: 'line',\n      data: dataTemp[item]\n    };\n\n    if (area) seriesItem.areaStyle = { normal: {} };\n    if (axisSite.right) {\n      seriesItem.yAxisIndex = ~axisSite.right.indexOf(item) ? 1 : 0;\n    }\n\n    if (stack && stackMap[item]) seriesItem.stack = stackMap[item];\n\n    if (label) seriesItem.label = label;\n    if (itemStyle) seriesItem.itemStyle = itemStyle;\n    if (lineStyle) seriesItem.lineStyle = lineStyle;\n    if (areaStyle) seriesItem.areaStyle = areaStyle;\n\n    series.push(seriesItem);\n  });\n  return series.length ? series : false;\n}\n\nfunction getLineYAxis(args) {\n  var yAxisName = args.yAxisName,\n      yAxisType = args.yAxisType,\n      axisVisible = args.axisVisible,\n      scale = args.scale,\n      min = args.min,\n      max = args.max,\n      digit = args.digit;\n\n  var yAxisBase = {\n    type: 'value',\n    axisTick: {\n      show: false\n    },\n    show: axisVisible\n  };\n  var yAxis = [];\n\n  var _loop = function _loop(i) {\n    if (yAxisType[i]) {\n      yAxis[i] = _extends({}, yAxisBase, {\n        axisLabel: {\n          formatter: function formatter(val) {\n            return getFormated(val, yAxisType[i], digit);\n          }\n        }\n      });\n    } else {\n      yAxis[i] = _extends({}, yAxisBase);\n    }\n    yAxis[i].name = yAxisName[i] || '';\n    yAxis[i].scale = scale[i] || false;\n    yAxis[i].min = min[i] || null;\n    yAxis[i].max = max[i] || null;\n  };\n\n  for (var i = 0; i < 2; i++) {\n    _loop(i);\n  }\n  return yAxis;\n}\n\nfunction getLineTooltip(args) {\n  var axisSite = args.axisSite,\n      yAxisType = args.yAxisType,\n      digit = args.digit,\n      labelMap = args.labelMap,\n      xAxisType = args.xAxisType;\n\n  var rightItems = axisSite.right || [];\n  var rightList = labelMap ? rightItems.map(function (item) {\n    return labelMap[item] === undefined ? item : labelMap[item];\n  }) : rightItems;\n  return {\n    trigger: 'axis',\n    formatter: function formatter(items) {\n      var tpl = [];\n      var _items$ = items[0],\n          name = _items$.name,\n          axisValueLabel = _items$.axisValueLabel;\n\n      var title = name || axisValueLabel;\n      tpl.push(title + '<br>');\n      items.forEach(function (item) {\n        var showData = null;\n        var type = ~rightList.indexOf(item.seriesName) ? yAxisType[1] : yAxisType[0];\n        var data = xAxisType === 'category' ? item.data : item.data[1];\n        showData = getFormated(data, type, digit);\n        tpl.push(itemPoint(item.color));\n        tpl.push(item.seriesName + ': ' + showData);\n        tpl.push('<br>');\n      });\n      return tpl.join('');\n    }\n  };\n}\n\nfunction getLegend(args) {\n  var metrics = args.metrics,\n      legendName = args.legendName,\n      labelMap = args.labelMap;\n\n  if (!legendName && !labelMap) return { data: metrics };\n  var data = labelMap ? metrics.map(function (item) {\n    return labelMap[item] == null ? item : labelMap[item];\n  }) : metrics;\n  return {\n    data: data,\n    formatter: function formatter(name) {\n      return legendName[name] != null ? legendName[name] : name;\n    }\n  };\n}\n\nvar line = function line(columns, rows, settings, extra) {\n  var _settings$axisSite = settings.axisSite,\n      axisSite = _settings$axisSite === undefined ? {} : _settings$axisSite,\n      _settings$yAxisType = settings.yAxisType,\n      yAxisType = _settings$yAxisType === undefined ? ['normal', 'normal'] : _settings$yAxisType,\n      _settings$xAxisType = settings.xAxisType,\n      xAxisType = _settings$xAxisType === undefined ? 'category' : _settings$xAxisType,\n      _settings$yAxisName = settings.yAxisName,\n      yAxisName = _settings$yAxisName === undefined ? [] : _settings$yAxisName,\n      _settings$dimension = settings.dimension,\n      dimension = _settings$dimension === undefined ? [columns[0]] : _settings$dimension,\n      _settings$xAxisName = settings.xAxisName,\n      xAxisName = _settings$xAxisName === undefined ? [] : _settings$xAxisName,\n      _settings$axisVisible = settings.axisVisible,\n      axisVisible = _settings$axisVisible === undefined ? true : _settings$axisVisible,\n      area = settings.area,\n      stack = settings.stack,\n      _settings$scale = settings.scale,\n      scale = _settings$scale === undefined ? [false, false] : _settings$scale,\n      _settings$min = settings.min,\n      min = _settings$min === undefined ? [null, null] : _settings$min,\n      _settings$max = settings.max,\n      max = _settings$max === undefined ? [null, null] : _settings$max,\n      _settings$nullAddZero = settings.nullAddZero,\n      nullAddZero = _settings$nullAddZero === undefined ? false : _settings$nullAddZero,\n      _settings$digit = settings.digit,\n      digit = _settings$digit === undefined ? 2 : _settings$digit,\n      _settings$legendName = settings.legendName,\n      legendName = _settings$legendName === undefined ? {} : _settings$legendName,\n      _settings$labelMap = settings.labelMap,\n      labelMap = _settings$labelMap === undefined ? {} : _settings$labelMap,\n      label = settings.label,\n      itemStyle = settings.itemStyle,\n      lineStyle = settings.lineStyle,\n      areaStyle = settings.areaStyle;\n  var tooltipVisible = extra.tooltipVisible,\n      legendVisible = extra.legendVisible;\n\n  var metrics = columns.slice();\n\n  if (axisSite.left && axisSite.right) {\n    metrics = axisSite.left.concat(axisSite.right);\n  } else if (axisSite.left && !axisSite.right) {\n    metrics = axisSite.left;\n  } else if (settings.metrics) {\n    metrics = settings.metrics;\n  } else {\n    metrics.splice(columns.indexOf(dimension[0]), 1);\n  }\n\n  var legend = legendVisible && getLegend({ metrics: metrics, legendName: legendName, labelMap: labelMap });\n  var tooltip = tooltipVisible && getLineTooltip({\n    axisSite: axisSite,\n    yAxisType: yAxisType,\n    digit: digit,\n    labelMap: labelMap,\n    xAxisType: xAxisType\n  });\n  var xAxis = getLineXAxis({\n    dimension: dimension,\n    rows: rows,\n    xAxisName: xAxisName,\n    axisVisible: axisVisible,\n    xAxisType: xAxisType\n  });\n  var yAxis = getLineYAxis({\n    yAxisName: yAxisName,\n    yAxisType: yAxisType,\n    axisVisible: axisVisible,\n    scale: scale,\n    min: min,\n    max: max,\n    digit: digit\n  });\n  var series = getLineSeries({\n    rows: rows,\n    axisSite: axisSite,\n    metrics: metrics,\n    area: area,\n    stack: stack,\n    nullAddZero: nullAddZero,\n    labelMap: labelMap,\n    label: label,\n    itemStyle: itemStyle,\n    lineStyle: lineStyle,\n    areaStyle: areaStyle,\n    xAxisType: xAxisType,\n    dimension: dimension\n  });\n  if (!xAxis || !series) return false;\n\n  var options = { legend: legend, xAxis: xAxis, series: series, yAxis: yAxis, tooltip: tooltip };\n  return options;\n};\n\nvar Loading = { render: function render() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { staticClass: \"v-charts-component-loading\" }, [_c('div', { staticClass: \"loader\" }, [_c('div', { staticClass: \"loading-spinner\" }, [_c('svg', { staticClass: \"circular\", attrs: { \"viewBox\": \"25 25 50 50\" } }, [_c('circle', { staticClass: \"path\", attrs: { \"cx\": \"50\", \"cy\": \"50\", \"r\": \"20\", \"fill\": \"none\" } })])])])]);\n  }, staticRenderFns: []\n};\n\nvar DataEmpty = { render: function render() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { staticClass: \"v-charts-data-empty\" }, [_vm._v(\" 暂无数据 \")]);\n  }, staticRenderFns: []\n};\n\nvar Core = {\n  render: function render(h) {\n    return h('div', {\n      class: [toKebab(this.$options.name || this.$options._componentTag)],\n      style: this.canvasStyle\n    }, [h('div', {\n      style: this.canvasStyle,\n      ref: 'canvas'\n    }), h(Loading, {\n      style: { display: this.loading ? '' : 'none' }\n    }), h(DataEmpty, {\n      style: { display: this.dataEmpty ? '' : 'none' }\n    }), this.$slots.default]);\n  },\n\n\n  props: {\n    data: { type: [Object, Array], default: function _default() {\n        return {};\n      }\n    },\n    settings: { type: Object, default: function _default() {\n        return {};\n      }\n    },\n    width: { type: String, default: 'auto' },\n    height: { type: String, default: '400px' },\n    beforeConfig: { type: Function },\n    afterConfig: { type: Function },\n    afterSetOption: { type: Function },\n    afterSetOptionOnce: { type: Function },\n    events: { type: Object },\n    grid: { type: Object },\n    colors: { type: Array },\n    tooltipVisible: { type: Boolean, default: true },\n    legendVisible: { type: Boolean, default: true },\n    legendPosition: { type: String },\n    markLine: { type: Object },\n    markArea: { type: Object },\n    markPoint: { type: Object },\n    visualMap: { type: [Object, Array] },\n    dataZoom: { type: [Object, Array] },\n    toolbox: { type: Object },\n    initOptions: { type: Object, default: function _default() {\n        return {};\n      }\n    },\n    title: Object,\n    legend: Object,\n    xAxis: Object,\n    yAxis: [Object, Array],\n    radar: Object,\n    tooltip: Object,\n    axisPointer: Object,\n    brush: Object,\n    geo: Object,\n    timeline: Object,\n    graphic: Object,\n    series: [Object, Array],\n    backgroundColor: [Object, String],\n    textStyle: Object,\n    animation: Object,\n    theme: Object,\n    themeName: String,\n    loading: Boolean,\n    dataEmpty: Boolean,\n    extend: Object,\n    judgeWidth: { type: Boolean, default: true },\n    widthChangeDelay: { type: Number, default: 300 }\n  },\n\n  watch: {\n    data: {\n      deep: true,\n      handler: function handler(v) {\n        if (v) {\n          this.dataHandler(v);\n        }\n      }\n    },\n\n    settings: {\n      deep: true,\n      handler: function handler(v) {\n        if (v.type && this.chartLib) this.chartHandler = this.chartLib[v.type];\n        this.dataHandler(this.data);\n      }\n    },\n\n    events: {\n      deep: true,\n      handler: function handler() {\n        this.createEventProxy();\n      }\n    }\n  },\n\n  computed: {\n    canvasStyle: function canvasStyle() {\n      return {\n        width: this.width,\n        height: this.height,\n        position: 'relative'\n      };\n    },\n    chartColor: function chartColor() {\n      return this.colors || this.theme && this.theme.color || color;\n    }\n  },\n\n  methods: {\n    dataHandler: function dataHandler(data) {\n      if (!this.chartHandler) return;\n      var _data = data,\n          _data$columns = _data.columns,\n          columns = _data$columns === undefined ? [] : _data$columns,\n          _data$rows = _data.rows,\n          rows = _data$rows === undefined ? [] : _data$rows;\n\n      var extra = {\n        tooltipVisible: this.tooltipVisible,\n        legendVisible: this.legendVisible,\n        echarts: this.echarts,\n        color: this.chartColor\n      };\n      if (this.beforeConfig) data = this.beforeConfig(data);\n\n      var options = this.chartHandler(columns, rows, this.settings, extra);\n      if (options) {\n        if (typeof options.then === 'function') {\n          options.then(this.optionsHandler);\n        } else {\n          this.optionsHandler(options);\n        }\n      }\n    },\n    resize: function resize() {\n      this.echarts.resize();\n    },\n    optionsHandler: function optionsHandler(options) {\n      var _this = this;\n\n      if (this.legendPosition && options.legend) {\n        options.legend[this.legendPosition] = 10;\n        if (~['left', 'right'].indexOf(this.legendPosition)) {\n          options.legend.top = 'middle';\n          options.legend.orient = 'vertical';\n        }\n      }\n      if (!this.themeName) options.color = this.chartColor;\n      var echartsSettings = ['grid', 'dataZoom', 'visualMap', 'toolbox', 'title', 'legend', 'xAxis', 'yAxis', 'radar', 'tooltip', 'axisPointer', 'brush', 'geo', 'timeline', 'graphic', 'series', 'backgroundColor', 'textStyle'];\n      echartsSettings.forEach(function (setting) {\n        if (_this[setting]) options[setting] = _this[setting];\n      });\n      if (this.animation) {\n        Object.keys(this.animation).forEach(function (key) {\n          options[key] = _this.animation[key];\n        });\n      }\n      if (this.markArea || this.markLine || this.markPoint) {\n        var marks = {\n          markArea: this.markArea,\n          markLine: this.markLine,\n          markPoint: this.markPoint\n        };\n        var series = options.series;\n        if (getType(series) === '[object Array]') {\n          series.forEach(function (item) {\n            _this.addMark(item, marks);\n          });\n        } else if (getType(series) === '[object Object]') {\n          this.addMark(series, marks);\n        }\n      }\n\n      // extend sub attribute\n      if (this.extend) {\n        Object.keys(this.extend).forEach(function (attr) {\n          if (typeof _this.extend[attr] === 'function') {\n            // get callback value\n            options[attr] = _this.extend[attr](options[attr]);\n          } else {\n            // mixin extend value\n            if (isArray(options[attr]) && isObject(options[attr][0])) {\n              // eg: [{ xx: 1 }, { xx: 2 }]\n              options[attr].forEach(function (option, index) {\n                options[attr][index] = _extends({}, option, _this.extend[attr]);\n              });\n            } else if (isObject(options[attr])) {\n              // eg: { xx: 1, yy: 2 }\n              options[attr] = _extends({}, options[attr], _this.extend[attr]);\n            } else {\n              options[attr] = _this.extend[attr];\n            }\n          }\n        });\n      }\n\n      if (this.afterConfig) options = this.afterConfig(options);\n      this.echarts.setOption(options, true);\n      if (this.judgeWidth) this.judgeWidthHandler(options);\n      if (this.afterSetOption) this.afterSetOption(this.echarts);\n      if (this.afterSetOptionOnce && !this._once['afterSetOptionOnce']) {\n        this._once['afterSetOptionOnce'] = this.afterSetOptionOnce(this.echarts);\n      }\n    },\n    judgeWidthHandler: function judgeWidthHandler(options) {\n      var _this2 = this;\n\n      if (this.$el.clientWidth) {\n        this.echarts.resize();\n      } else {\n        this.$nextTick(function (_) {\n          if (_this2.$el.clientWidth) {\n            _this2.echarts.resize();\n          } else {\n            setTimeout(function (_) {\n              _this2.echarts.resize();\n              if (!_this2.$el.clientWidth) {\n                console.warn(' Can\\'t get dom width or height ');\n              }\n            }, _this2.widthChangeDelay);\n          }\n        });\n      }\n    },\n    addMark: function addMark(seriesItem, marks) {\n      Object.keys(marks).forEach(function (key) {\n        if (marks[key]) {\n          seriesItem[key] = marks[key];\n        }\n      });\n    },\n    init: function init() {\n      if (this.echarts) return;\n      var themeName = this.themeName || (this.theme ? 'outer-theme' : 've-chart');\n      this.echarts = this.echartsLib.init(this.$refs.canvas, themeName, this.initOptions);\n      if (this.data) this.dataHandler(this.data);\n      this.createEventProxy();\n    },\n    addWatchToProps: function addWatchToProps() {\n      var _this3 = this;\n\n      var watchedVariable = this._watchers.map(function (watcher) {\n        return watcher.expression;\n      });\n      Object.keys(this.$props).forEach(function (prop) {\n        if (!~watchedVariable.indexOf(prop)) {\n          var opts = {};\n          if (getType(prop) === '[object Object]') {\n            opts.deep = true;\n          }\n          _this3.$watch(prop, function () {\n            _this3.dataHandler(_this3.data);\n          }, opts);\n        }\n      });\n    },\n    registerTheme: function registerTheme() {\n      echarts.registerTheme('outer-theme', this.theme);\n    },\n    createEventProxy: function createEventProxy() {\n      var _this4 = this;\n\n      // 只要用户使用 on 方法绑定的事件都做一层代理，\n      // 是否真正执行相应的事件方法取决于该方法是否仍然存在 events 中\n      // 实现 events 的动态响应\n      var self = this;\n      var keys = Object.keys(this.events || {});\n      keys.length && keys.forEach(function (ev) {\n        if (_this4.registeredEvents.indexOf(ev) === -1) {\n          _this4.registeredEvents.push(ev);\n          _this4.echarts.on(ev, function (ev) {\n            return function () {\n              if (ev in self.events) {\n                for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n                  args[_key] = arguments[_key];\n                }\n\n                self.events[ev].apply(null, args);\n              }\n            };\n          }(ev));\n        }\n      });\n    }\n  },\n\n  created: function created() {\n    this.echarts = null;\n    this.registeredEvents = [];\n    this._once = {};\n    this.addWatchToProps();\n    if (this.theme) this.registerTheme();\n  },\n  mounted: function mounted() {\n    this.init();\n    window.addEventListener('resize', this.echarts.resize);\n  },\n  beforeDestroy: function beforeDestroy() {\n    window.removeEventListener('resize', this.echarts.resize);\n    this.echarts.dispose();\n  }\n};\n\nvar index = {\n  name: 'VeLine',\n  mixins: [Core],\n  created: function created() {\n    this.chartHandler = line;\n    this.echartsLib = echarts;\n  }\n};\n\nreturn index;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/v-charts/lib/line.js\n// module id = 388\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', [_c('mt-header', {\n    attrs: {\n      \"title\": \"图表示例\"\n    }\n  }, [_c('router-link', {\n    attrs: {\n      \"slot\": \"left\",\n      \"to\": \"/index\"\n    },\n    slot: \"left\"\n  }, [_c('mt-button', {\n    attrs: {\n      \"icon\": \"back\"\n    }\n  }, [_vm._v(\"返回\")])], 1), _vm._v(\" \"), _c('mt-button', {\n    attrs: {\n      \"slot\": \"right\",\n      \"icon\": \"more\"\n    },\n    slot: \"right\"\n  })], 1), _vm._v(\" \"), _c('ve-line', {\n    attrs: {\n      \"data\": _vm.chartData\n    }\n  })], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-6b10354f\",\"hasScoped\":false,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"}}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/vcharts.vue\n// module id = 401\n// module chunks = 0","var util = require(\"./core/util\");\n\nvar vec2 = require(\"./core/vector\");\n\nvar Draggable = require(\"./mixin/Draggable\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = proxy; // Attach handler\n\n  proxy.handler = this;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  util.each(handlerNames, function (name) {\n    proxy.on && proxy.on(name, this[name], this);\n  }, this);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mosueup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Handler.js\n// module id = 408\n// module chunks = 0","var util = require(\"./core/util\");\n\nvar _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = require(\"./graphic/Style\");\n\nvar Pattern = require(\"./graphic/Pattern\");\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style; // 没append呢，请原谅我这样写，清晰~\n\n  newDomStyle.position = 'absolute';\n  newDomStyle.left = 0;\n  newDomStyle.top = 0;\n  newDomStyle.width = width + 'px';\n  newDomStyle.height = height + 'px';\n  newDom.width = width * dpr;\n  newDom.height = height * dpr; // id不作为索引用，避免可能造成的重名，定义为私有属性\n\n  newDom.setAttribute('data-zr-dom-id', id);\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  elCount: 0,\n  __dirty: true,\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.__currentValues = {};\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n    this.ctxBack.__currentValues = {};\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n    domStyle.width = width + 'px';\n    domStyle.height = height + 'px';\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} clearAll Clear all with out motion blur\n   */\n  clear: function (clearAll) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor) {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Layer.js\n// module id = 409\n// module chunks = 0","var _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = require(\"./core/util\");\n\nvar log = require(\"./core/log\");\n\nvar BoundingRect = require(\"./core/BoundingRect\");\n\nvar timsort = require(\"./core/timsort\");\n\nvar Layer = require(\"./Layer\");\n\nvar requestAnimationFrame = require(\"./animation/requestAnimationFrame\");\n\nvar Image = require(\"./graphic/Image\");\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n// PENDIGN\n// Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n//\n// Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\nvar MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction preProcessLayer(layer) {\n  layer.__unusedCount++;\n}\n\nfunction postProcessLayer(layer) {\n  if (layer.__unusedCount == 1) {\n    layer.clear();\n  }\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @type {private}\n   */\n\n  this._layerConfig = {};\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    if (opts.width != null) {\n      root.width = opts.width;\n    }\n\n    if (opts.height != null) {\n      root.height = opts.height;\n    } // Use canvas width and height directly\n\n\n    var width = root.width;\n    var height = root.height;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n\n    var mainLayer = new Layer(root, this, 1);\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[0] = mainLayer;\n    zlevelList.push(0);\n    this._domRoot = root;\n  } // Layers for progressive rendering\n\n\n  this._progressiveLayers = [];\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n  this._hoverlayer;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n\n    this._paintList(list, paintAll); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        layer.refresh();\n      }\n    }\n\n    this.refreshHover();\n\n    if (this._progressiveLayers.length) {\n      this._startProgessive();\n    }\n\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(1e5);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  _startProgessive: function () {\n    var self = this;\n\n    if (!self._furtherProgressive) {\n      return;\n    } // Use a token to stop progress steps triggered by\n    // previous zr.refresh calling.\n\n\n    var token = self._progressiveToken = +new Date();\n    self._progress++;\n    requestAnimationFrame(step);\n\n    function step() {\n      // In case refreshed or disposed\n      if (token === self._progressiveToken && self.storage) {\n        self._doPaintList(self.storage.getDisplayList());\n\n        if (self._furtherProgressive) {\n          self._progress++;\n          requestAnimationFrame(step);\n        } else {\n          self._progressiveToken = -1;\n        }\n      }\n    }\n  },\n  _clearProgressive: function () {\n    this._progressiveToken = -1;\n    this._progress = 0;\n    util.each(this._progressiveLayers, function (layer) {\n      layer.__dirty && layer.clear();\n    });\n  },\n  _paintList: function (list, paintAll) {\n    if (paintAll == null) {\n      paintAll = false;\n    }\n\n    this._updateLayerStatus(list);\n\n    this._clearProgressive();\n\n    this.eachBuiltinLayer(preProcessLayer);\n\n    this._doPaintList(list, paintAll);\n\n    this.eachBuiltinLayer(postProcessLayer);\n  },\n  _doPaintList: function (list, paintAll) {\n    var currentLayer;\n    var currentZLevel;\n    var ctx; // var invTransform = [];\n\n    var scope;\n    var progressiveLayerIdx = 0;\n    var currentProgressiveLayer;\n    var width = this._width;\n    var height = this._height;\n    var layerProgress;\n    var frame = this._progress;\n\n    function flushProgressiveLayer(layer) {\n      var dpr = ctx.dpr || 1;\n      ctx.save();\n      ctx.globalAlpha = 1;\n      ctx.shadowBlur = 0; // Avoid layer don't clear in next progressive frame\n\n      currentLayer.__dirty = true;\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n      ctx.restore();\n    }\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n      var elFrame = el.__frame; // Flush at current context\n      // PENDING\n\n      if (elFrame < 0 && currentProgressiveLayer) {\n        flushProgressiveLayer(currentProgressiveLayer);\n        currentProgressiveLayer = null;\n      } // Change draw layer\n\n\n      if (currentZLevel !== elZLevel) {\n        if (ctx) {\n          ctx.restore();\n        } // Reset scope\n\n\n        scope = {}; // Only 0 zlevel if only has one canvas\n\n        currentZLevel = elZLevel;\n        currentLayer = this.getLayer(currentZLevel);\n\n        if (!currentLayer.__builtin__) {\n          log('ZLevel ' + currentZLevel + ' has been used by unkown layer ' + currentLayer.id);\n        }\n\n        ctx = currentLayer.ctx;\n        ctx.save(); // Reset the count\n\n        currentLayer.__unusedCount = 0;\n\n        if (currentLayer.__dirty || paintAll) {\n          currentLayer.clear();\n        }\n      }\n\n      if (!(currentLayer.__dirty || paintAll)) {\n        continue;\n      }\n\n      if (elFrame >= 0) {\n        // Progressive layer changed\n        if (!currentProgressiveLayer) {\n          currentProgressiveLayer = this._progressiveLayers[Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)];\n          currentProgressiveLayer.ctx.save();\n          currentProgressiveLayer.renderScope = {};\n\n          if (currentProgressiveLayer && currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress) {\n            // flushProgressiveLayer(currentProgressiveLayer);\n            // Quick jump all progressive elements\n            // All progressive element are not dirty, jump over and flush directly\n            i = currentProgressiveLayer.__nextIdxNotProg - 1; // currentProgressiveLayer = null;\n\n            continue;\n          }\n\n          layerProgress = currentProgressiveLayer.__progress;\n\n          if (!currentProgressiveLayer.__dirty) {\n            // Keep rendering\n            frame = layerProgress;\n          }\n\n          currentProgressiveLayer.__progress = frame + 1;\n        }\n\n        if (elFrame === frame) {\n          this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n        }\n      } else {\n        this._doPaintEl(el, currentLayer, paintAll, scope);\n      }\n\n      el.__dirty = false;\n    }\n\n    if (currentProgressiveLayer) {\n      flushProgressiveLayer(currentProgressiveLayer);\n    } // Restore the lastLayer ctx\n\n\n    ctx && ctx.restore(); // If still has clipping state\n    // if (scope.prevElClipPaths) {\n    //     ctx.restore();\n    // }\n\n    this._furtherProgressive = false;\n    util.each(this._progressiveLayers, function (layer) {\n      if (layer.__maxProgress >= layer.__progress) {\n        this._furtherProgressive = true;\n      }\n    }, this);\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (scope.prevClipLayer !== currentLayer || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          scope.prevClipLayer.ctx.restore();\n          scope.prevClipLayer = scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevClipLayer = currentLayer;\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel) {\n    if (this._singleCanvas) {\n      return this._layers[0];\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    var layers = this._layers;\n    var progressiveLayers = this._progressiveLayers;\n    var elCountsLastFrame = {};\n    var progressiveElCountsLastFrame = {};\n    this.eachBuiltinLayer(function (layer, z) {\n      elCountsLastFrame[z] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    util.each(progressiveLayers, function (layer, idx) {\n      progressiveElCountsLastFrame[idx] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    var progressiveLayerCount = 0;\n    var currentProgressiveLayer;\n    var lastProgressiveKey;\n    var frameCount = 0;\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var zlevel = this._singleCanvas ? 0 : el.zlevel;\n      var layer = layers[zlevel];\n      var elProgress = el.progressive;\n\n      if (layer) {\n        layer.elCount++;\n        layer.__dirty = layer.__dirty || el.__dirty;\n      } /////// Update progressive\n\n\n      if (elProgress >= 0) {\n        // Fix wrong progressive sequence problem.\n        if (lastProgressiveKey !== elProgress) {\n          lastProgressiveKey = elProgress;\n          frameCount++;\n        }\n\n        var elFrame = el.__frame = frameCount - 1;\n\n        if (!currentProgressiveLayer) {\n          var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n          currentProgressiveLayer = progressiveLayers[idx];\n\n          if (!currentProgressiveLayer) {\n            currentProgressiveLayer = progressiveLayers[idx] = new Layer('progressive', this, this.dpr);\n            currentProgressiveLayer.initContext();\n          }\n\n          currentProgressiveLayer.__maxProgress = 0;\n        }\n\n        currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n        currentProgressiveLayer.elCount++;\n        currentProgressiveLayer.__maxProgress = Math.max(currentProgressiveLayer.__maxProgress, elFrame);\n\n        if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n          // Should keep rendering this  layer because progressive rendering is not finished yet\n          layer.__dirty = true;\n        }\n      } else {\n        el.__frame = -1;\n\n        if (currentProgressiveLayer) {\n          currentProgressiveLayer.__nextIdxNotProg = i;\n          progressiveLayerCount++;\n          currentProgressiveLayer = null;\n        }\n      }\n    }\n\n    if (currentProgressiveLayer) {\n      progressiveLayerCount++;\n      currentProgressiveLayer.__nextIdxNotProg = i;\n    } // 层中的元素数量有发生变化\n\n\n    this.eachBuiltinLayer(function (layer, z) {\n      if (elCountsLastFrame[z] !== layer.elCount) {\n        layer.__dirty = true;\n      }\n    });\n    progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n    util.each(progressiveLayers, function (layer, idx) {\n      if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n        el.__dirty = true;\n      }\n\n      if (layer.__dirty) {\n        layer.__progress = 0;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      var layer = this._layers[zlevel];\n\n      if (layer) {\n        util.merge(layer, layerConfig[zlevel], true);\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    var domRoot = this._domRoot; // FIXME Why ?\n\n    domRoot.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    domRoot.style.display = ''; // 优化没有实际改变的resize\n\n    if (this._width != width || height != this._height) {\n      domRoot.style.width = width + 'px';\n      domRoot.style.height = height + 'px';\n\n      for (var id in this._layers) {\n        if (this._layers.hasOwnProperty(id)) {\n          this._layers[id].resize(width, height);\n        }\n      }\n\n      util.each(this._progressiveLayers, function (layer) {\n        layer.resize(width, height);\n      });\n      this.refresh(true);\n    }\n\n    this._width = width;\n    this._height = height;\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas) {\n      return this._layers[0].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clearColor = opts.backgroundColor;\n    imageLayer.clear();\n    var displayList = this.storage.getDisplayList(true);\n    var scope = {};\n    var zlevel;\n    var self = this;\n\n    function findAndDrawOtherLayer(smaller, larger) {\n      var zlevelList = self._zlevelList;\n\n      if (smaller == null) {\n        smaller = -Infinity;\n      }\n\n      var intermediateLayer;\n\n      for (var i = 0; i < zlevelList.length; i++) {\n        var z = zlevelList[i];\n        var layer = self._layers[z];\n\n        if (!layer.__builtin__ && z > smaller && z < larger) {\n          intermediateLayer = layer;\n          break;\n        }\n      }\n\n      if (intermediateLayer && intermediateLayer.renderToCanvas) {\n        imageLayer.ctx.save();\n        intermediateLayer.renderToCanvas(imageLayer.ctx);\n        imageLayer.ctx.restore();\n      }\n    }\n\n    for (var i = 0; i < displayList.length; i++) {\n      var el = displayList[i];\n\n      if (el.zlevel !== zlevel) {\n        findAndDrawOtherLayer(zlevel, el.zlevel);\n        zlevel = el.zlevel;\n      }\n\n      this._doPaintEl(el, imageLayer, true, scope);\n    }\n\n    findAndDrawOtherLayer(zlevel, Infinity);\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur;\n    var shadowOffsetX = style.shadowOffsetX;\n    var shadowOffsetY = style.shadowOffsetY;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Painter.js\n// module id = 410\n// module chunks = 0","var util = require(\"./core/util\");\n\nvar env = require(\"./core/env\");\n\nvar Group = require(\"./container/Group\");\n\nvar timsort = require(\"./core/timsort\");\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen; // for (var i = 0, len = displayList.length; i < len; i++) {\n    //     displayList[i].__renderidx = i;\n    // }\n    // displayList.sort(shapeCompareFunc);\n\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    el.__storage = this;\n    el.dirty(false);\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Storage.js\n// module id = 411\n// module chunks = 0","var util = require(\"../core/util\");\n\nvar _event = require(\"../core/event\");\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = require(\"./requestAnimationFrame\");\n\nvar Animator = require(\"./Animator\");\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta);\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * 开始运行动画\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * 停止运行动画\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * 清除所有动画片段\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] 是否循环播放动画\n   * @param  {Function} [options.getter=null]\n   *         如果指定getter函数，会通过getter函数取属性值\n   * @param  {Function} [options.setter=null]\n   *         如果指定setter函数，会通过setter函数设置属性值\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Animation.js\n// module id = 412\n// module chunks = 0","var easingFuncs = require(\"./easing\");\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Clip.js\n// module id = 413\n// module chunks = 0","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/easing.js\n// module id = 414\n// module chunks = 0","var _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/arc.js\n// module id = 415\n// module chunks = 0","var curve = require(\"../core/curve\");\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/cubic.js\n// module id = 416\n// module chunks = 0","/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/line.js\n// module id = 417\n// module chunks = 0","var PathProxy = require(\"../core/PathProxy\");\n\nvar line = require(\"./line\");\n\nvar cubic = require(\"./cubic\");\n\nvar quadratic = require(\"./quadratic\");\n\nvar arc = require(\"./arc\");\n\nvar _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = require(\"../core/curve\");\n\nvar windingLine = require(\"./windingLine\");\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/path.js\n// module id = 418\n// module chunks = 0","var windingLine = require(\"./windingLine\");\n\nvar EPSILON = 1e-8;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nfunction contain(points, x, y) {\n  var w = 0;\n  var p = points[0];\n\n  if (!p) {\n    return false;\n  }\n\n  for (var i = 1; i < points.length; i++) {\n    var p2 = points[i];\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n    p = p2;\n  } // Close polygon\n\n\n  var p0 = points[0];\n\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n  }\n\n  return w !== 0;\n}\n\nexports.contain = contain;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/polygon.js\n// module id = 419\n// module chunks = 0","var _curve = require(\"../core/curve\");\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/quadratic.js\n// module id = 420\n// module chunks = 0","var eventUtil = require(\"./event\");\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/GestureMgr.js\n// module id = 421\n// module chunks = 0","var _event = require(\"../core/event\");\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = require(\"../core/util\");\n\nvar Eventful = require(\"../mixin/Eventful\");\n\nvar env = require(\"../core/env\");\n\nvar GestureMgr = require(\"../core/GestureMgr\");\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style.cursor = cursorStyle || 'default';\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/dom/HandlerProxy.js\n// module id = 422\n// module chunks = 0","var Path = require(\"./Path\");\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/CompoundPath.js\n// module id = 423\n// module chunks = 0","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/LinearGradient.js\n// module id = 424\n// module chunks = 0","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/RadialGradient.js\n// module id = 425\n// module chunks = 0","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"./helper/text\");\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Text.js\n// module id = 426\n// module chunks = 0","var _vector = require(\"../../core/vector\");\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/smoothBezier.js\n// module id = 427\n// module chunks = 0","var _vector = require(\"../../core/vector\");\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/smoothSpline.js\n// module id = 428\n// module chunks = 0","var textHelper = require(\"../helper/text\");\n\nvar BoundingRect = require(\"../../core/BoundingRect\");\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/mixin/RectText.js\n// module id = 429\n// module chunks = 0","var Path = require(\"../Path\");\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Arc.js\n// module id = 430\n// module chunks = 0","var Path = require(\"../Path\");\n\nvar vec2 = require(\"../../core/vector\");\n\nvar _curve = require(\"../../core/curve\");\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/BezierCurve.js\n// module id = 431\n// module chunks = 0","var Path = require(\"../Path\");\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Circle.js\n// module id = 432\n// module chunks = 0","var Path = require(\"../Path\");\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Line.js\n// module id = 433\n// module chunks = 0","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Polygon.js\n// module id = 434\n// module chunks = 0","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Polyline.js\n// module id = 435\n// module chunks = 0","var Path = require(\"../Path\");\n\nvar roundRectHelper = require(\"../helper/roundRect\");\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Rect.js\n// module id = 436\n// module chunks = 0","var Path = require(\"../Path\");\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Ring.js\n// module id = 437\n// module chunks = 0","var Path = require(\"../Path\");\n\nvar fixClipWithShadow = require(\"../helper/fixClipWithShadow\");\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Sector.js\n// module id = 438\n// module chunks = 0","var Animator = require(\"../animation/Animator\");\n\nvar log = require(\"../core/log\");\n\nvar _util = require(\"../core/util\");\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Animatable.js\n// module id = 439\n// module chunks = 0","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Draggable.js\n// module id = 440\n// module chunks = 0","var Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar transformPath = require(\"./transformPath\");\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/path.js\n// module id = 441\n// module chunks = 0","var PathProxy = require(\"../core/PathProxy\");\n\nvar _vector = require(\"../core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/transformPath.js\n// module id = 442\n// module chunks = 0"],"sourceRoot":""}